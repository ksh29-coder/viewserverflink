[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------------< com.viewserver:view-server >---------------------
[INFO] Building View Server 1.0.0-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.2.0:run (default-cli) > test-compile @ view-server >>>
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ view-server ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ view-server ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ view-server ---
[INFO] skip non existing resourceDirectory /Users/kaishen/IdeaProjects/viewserverflink/view-server/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ view-server ---
[INFO] No sources to compile
[INFO] 
[INFO] <<< spring-boot:3.2.0:run (default-cli) < test-compile @ view-server <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.2.0:run (default-cli) @ view-server ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v3.2.0)[0;39m

18:23:31.802 [main] INFO  c.v.viewserver.ViewServerApplication - Starting ViewServerApplication using Java 23.0.2 with PID 17035 (/Users/kaishen/IdeaProjects/viewserverflink/view-server/target/classes started by kaishen in /Users/kaishen/IdeaProjects/viewserverflink/view-server)
18:23:31.804 [main] DEBUG c.v.viewserver.ViewServerApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
18:23:31.805 [main] INFO  c.v.viewserver.ViewServerApplication - No active profile set, falling back to 1 default profile: "default"
18:23:32.007 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
18:23:32.007 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
18:23:32.017 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
18:23:32.164 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
18:23:32.167 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:23:32.167 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
18:23:32.185 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:23:32.186 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 359 ms
18:23:32.491 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
18:23:32.505 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-view-server-prices-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = view-server-prices
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

18:23:32.557 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
18:23:32.557 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
18:23:32.557 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748107412556
18:23:32.558 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Subscribed to topic(s): base.price
18:23:32.560 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-view-server-orders-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = view-server-orders
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

18:23:32.562 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
18:23:32.562 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
18:23:32.562 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748107412562
18:23:32.562 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Subscribed to topic(s): base.order-events
18:23:32.563 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-view-server-holdings-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = view-server-holdings
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

18:23:32.564 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
18:23:32.564 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
18:23:32.564 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748107412564
18:23:32.564 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Subscribed to topic(s): base.sod-holding
18:23:32.565 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-view-server-cash-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = view-server-cash
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

18:23:32.566 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
18:23:32.566 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
18:23:32.566 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748107412566
18:23:32.566 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Subscribed to topic(s): base.intraday-cash
18:23:32.567 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-view-server-accounts-5
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = view-server-accounts
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

18:23:32.568 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
18:23:32.568 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
18:23:32.568 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748107412568
18:23:32.568 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Subscribed to topic(s): base.account
18:23:32.568 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-view-server-instruments-6
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = view-server-instruments
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

18:23:32.569 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
18:23:32.569 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
18:23:32.569 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1748107412569
18:23:32.569 [main] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Subscribed to topic(s): base.instrument
18:23:32.573 [main] INFO  c.v.viewserver.ViewServerApplication - Started ViewServerApplication in 0.89 seconds (process running for 1.022)
18:23:32.658 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Cluster ID: ii0Kkp9lQq6HOWy23q46tw
18:23:32.658 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Cluster ID: ii0Kkp9lQq6HOWy23q46tw
18:23:32.658 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Cluster ID: ii0Kkp9lQq6HOWy23q46tw
18:23:32.658 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Cluster ID: ii0Kkp9lQq6HOWy23q46tw
18:23:32.659 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
18:23:32.659 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
18:23:32.659 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
18:23:32.658 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Cluster ID: ii0Kkp9lQq6HOWy23q46tw
18:23:32.658 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Cluster ID: ii0Kkp9lQq6HOWy23q46tw
18:23:32.659 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
18:23:32.659 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
18:23:32.659 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
18:23:32.660 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] (Re-)joining group
18:23:32.661 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] (Re-)joining group
18:23:32.661 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] (Re-)joining group
18:23:32.661 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] (Re-)joining group
18:23:32.661 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] (Re-)joining group
18:23:32.661 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] (Re-)joining group
18:23:32.675 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Request joining group due to: need to re-join with the given member-id: consumer-view-server-holdings-3-cdbd2e45-d53a-4a8b-87e0-3eb7aaaa224b
18:23:32.675 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Request joining group due to: need to re-join with the given member-id: consumer-view-server-instruments-6-93f28025-bdb1-4508-b27c-34be1018c9f8
18:23:32.675 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Request joining group due to: need to re-join with the given member-id: consumer-view-server-cash-4-8f5671dc-0bc3-4804-bf31-25576f0e7b66
18:23:32.675 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
18:23:32.676 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
18:23:32.676 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] (Re-)joining group
18:23:32.675 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Request joining group due to: need to re-join with the given member-id: consumer-view-server-accounts-5-3f98bb76-cf87-48ed-b005-d0a9a2a559a7
18:23:32.676 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
18:23:32.676 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] (Re-)joining group
18:23:32.675 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Request joining group due to: need to re-join with the given member-id: consumer-view-server-orders-2-6274b7bf-d320-4cdd-8b24-d664166f64de
18:23:32.676 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
18:23:32.676 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] (Re-)joining group
18:23:32.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Request joining group due to: need to re-join with the given member-id: consumer-view-server-prices-1-4d855c1b-2554-4011-a2af-ab8b678eb260
18:23:32.676 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] (Re-)joining group
18:23:32.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
18:23:32.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] (Re-)joining group
18:23:32.676 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
18:23:32.676 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] (Re-)joining group
18:23:35.704 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Successfully joined group with generation Generation{generationId=9, memberId='consumer-view-server-holdings-3-cdbd2e45-d53a-4a8b-87e0-3eb7aaaa224b', protocol='range'}
18:23:35.705 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Successfully joined group with generation Generation{generationId=9, memberId='consumer-view-server-orders-2-6274b7bf-d320-4cdd-8b24-d664166f64de', protocol='range'}
18:23:35.705 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Successfully joined group with generation Generation{generationId=9, memberId='consumer-view-server-instruments-6-93f28025-bdb1-4508-b27c-34be1018c9f8', protocol='range'}
18:23:35.705 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Successfully joined group with generation Generation{generationId=9, memberId='consumer-view-server-cash-4-8f5671dc-0bc3-4804-bf31-25576f0e7b66', protocol='range'}
18:23:35.705 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Successfully joined group with generation Generation{generationId=9, memberId='consumer-view-server-accounts-5-3f98bb76-cf87-48ed-b005-d0a9a2a559a7', protocol='range'}
18:23:35.705 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Successfully joined group with generation Generation{generationId=9, memberId='consumer-view-server-prices-1-4d855c1b-2554-4011-a2af-ab8b678eb260', protocol='range'}
18:23:35.711 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Finished assignment for group at generation 9: {consumer-view-server-holdings-3-cdbd2e45-d53a-4a8b-87e0-3eb7aaaa224b=Assignment(partitions=[base.sod-holding-0])}
18:23:35.711 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Finished assignment for group at generation 9: {consumer-view-server-instruments-6-93f28025-bdb1-4508-b27c-34be1018c9f8=Assignment(partitions=[base.instrument-0])}
18:23:35.711 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Finished assignment for group at generation 9: {consumer-view-server-cash-4-8f5671dc-0bc3-4804-bf31-25576f0e7b66=Assignment(partitions=[base.intraday-cash-0])}
18:23:35.711 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Finished assignment for group at generation 9: {consumer-view-server-prices-1-4d855c1b-2554-4011-a2af-ab8b678eb260=Assignment(partitions=[base.price-0])}
18:23:35.711 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Finished assignment for group at generation 9: {consumer-view-server-accounts-5-3f98bb76-cf87-48ed-b005-d0a9a2a559a7=Assignment(partitions=[base.account-0])}
18:23:35.711 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Finished assignment for group at generation 9: {consumer-view-server-orders-2-6274b7bf-d320-4cdd-8b24-d664166f64de=Assignment(partitions=[base.order-events-0])}
18:23:35.730 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Successfully synced group in generation Generation{generationId=9, memberId='consumer-view-server-prices-1-4d855c1b-2554-4011-a2af-ab8b678eb260', protocol='range'}
18:23:35.731 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Notifying assignor about the new Assignment(partitions=[base.price-0])
18:23:35.730 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Successfully synced group in generation Generation{generationId=9, memberId='consumer-view-server-accounts-5-3f98bb76-cf87-48ed-b005-d0a9a2a559a7', protocol='range'}
18:23:35.731 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Notifying assignor about the new Assignment(partitions=[base.account-0])
18:23:35.731 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Successfully synced group in generation Generation{generationId=9, memberId='consumer-view-server-orders-2-6274b7bf-d320-4cdd-8b24-d664166f64de', protocol='range'}
18:23:35.730 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Successfully synced group in generation Generation{generationId=9, memberId='consumer-view-server-instruments-6-93f28025-bdb1-4508-b27c-34be1018c9f8', protocol='range'}
18:23:35.731 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Notifying assignor about the new Assignment(partitions=[base.instrument-0])
18:23:35.730 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Successfully synced group in generation Generation{generationId=9, memberId='consumer-view-server-holdings-3-cdbd2e45-d53a-4a8b-87e0-3eb7aaaa224b', protocol='range'}
18:23:35.732 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Notifying assignor about the new Assignment(partitions=[base.sod-holding-0])
18:23:35.731 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Successfully synced group in generation Generation{generationId=9, memberId='consumer-view-server-cash-4-8f5671dc-0bc3-4804-bf31-25576f0e7b66', protocol='range'}
18:23:35.732 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Notifying assignor about the new Assignment(partitions=[base.intraday-cash-0])
18:23:35.731 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Notifying assignor about the new Assignment(partitions=[base.order-events-0])
18:23:35.733 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Adding newly assigned partitions: base.account-0
18:23:35.733 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Adding newly assigned partitions: base.sod-holding-0
18:23:35.733 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Adding newly assigned partitions: base.order-events-0
18:23:35.733 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Adding newly assigned partitions: base.intraday-cash-0
18:23:35.733 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Adding newly assigned partitions: base.instrument-0
18:23:35.733 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Adding newly assigned partitions: base.price-0
18:23:35.740 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Setting offset for partition base.price-0 to the committed offset FetchPosition{offset=763, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
18:23:35.740 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Setting offset for partition base.account-0 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
18:23:35.740 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Setting offset for partition base.sod-holding-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
18:23:35.740 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Setting offset for partition base.order-events-0 to the committed offset FetchPosition{offset=107, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
18:23:35.740 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Setting offset for partition base.instrument-0 to the committed offset FetchPosition{offset=20, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
18:23:35.741 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-holdings: partitions assigned: [base.sod-holding-0]
18:23:35.740 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Setting offset for partition base.intraday-cash-0 to the committed offset FetchPosition{offset=15, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
18:23:35.749 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-orders: partitions assigned: [base.order-events-0]
18:23:35.749 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-cash: partitions assigned: [base.intraday-cash-0]
18:23:35.750 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-instruments: partitions assigned: [base.instrument-0]
18:23:35.750 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-prices: partitions assigned: [base.price-0]
18:23:35.750 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-accounts: partitions assigned: [base.account-0]
18:23:35.902 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,23,2,661399000],"instrumentId":"AAPL","price":176.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,2,661665000]}
18:23:35.902 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_72576b9b91df","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_72576b9b91df","instrumentId":"NESN","accountId":"ACC002","date":[2025,5,24,18,23,12,659339000],"orderQuantity":81,"filledQuantity":81,"orderStatus":"PARTIALLY_FILLED","orderPrice":51.03,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,23,12,659781000]}
18:23:36.084 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.70
18:23:36.084 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_72576b9b91df (PARTIALLY_FILLED NESN)
18:23:36.085 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.085 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:23:36.085 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,23,2,661399000],"instrumentId":"MSFT","price":384.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,2,662403000]}
18:23:36.085 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_77c3ea73a6fd","remainingQuantity":96,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_77c3ea73a6fd","instrumentId":"AAPL","accountId":"ACC005","date":[2025,5,24,18,23,22,663458000],"orderQuantity":96,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":424.58,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,23,22,663761000]}
18:23:36.086 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_77c3ea73a6fd (CREATED AAPL)
18:23:36.086 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $384.82
18:23:36.086 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:23:36.086 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.086 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_b472e65e64ff","remainingQuantity":58,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_b472e65e64ff","instrumentId":"ASML","accountId":"ACC001","date":[2025,5,24,18,23,22,664253000],"orderQuantity":58,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":170.78,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,23,22,664355000]}
18:23:36.086 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,23,2,661399000],"instrumentId":"GOOGL","price":138.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,2,662584000]}
18:23:36.087 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.37
18:23:36.087 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.087 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,23,2,661399000],"instrumentId":"JPM","price":177.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,2,662680000]}
18:23:36.087 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_b472e65e64ff (CREATED ASML)
18:23:36.087 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:23:36.087 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_29d0661cd71a","remainingQuantity":538,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_29d0661cd71a","instrumentId":"BAC","accountId":"ACC005","date":[2025,5,24,18,23,22,664494000],"orderQuantity":538,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":192.74,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,23,22,664553000]}
18:23:36.087 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $177.27
18:23:36.087 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.087 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,23,2,661399000],"instrumentId":"BAC","price":31.95,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,2,662751000]}
18:23:36.088 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_29d0661cd71a (CREATED BAC)
18:23:36.088 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:23:36.088 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_dc879b6af973","remainingQuantity":23,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_dc879b6af973","instrumentId":"JPM","accountId":"ACC001","date":[2025,5,24,18,23,32,658272000],"orderQuantity":81,"filledQuantity":58,"orderStatus":"FILLED","orderPrice":436.39,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,23,32,658542000]}
18:23:36.088 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.95
18:23:36.088 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.088 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,23,2,661399000],"instrumentId":"NESN","price":103.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,2,662866000]}
18:23:36.089 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_dc879b6af973 (FILLED JPM)
18:23:36.089 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:23:36.089 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_f20fb004f7b9","remainingQuantity":18,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_f20fb004f7b9","instrumentId":"NESN","accountId":"ACC003","date":[2025,5,24,18,23,32,659305000],"orderQuantity":42,"filledQuantity":24,"orderStatus":"PARTIALLY_FILLED","orderPrice":256.54,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,23,32,659396000]}
18:23:36.089 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.80
18:23:36.089 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.089 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,23,2,661399000],"instrumentId":"ASML","price":759.62,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,2,663001000]}
18:23:36.089 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_f20fb004f7b9 (PARTIALLY_FILLED NESN)
18:23:36.089 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:23:36.090 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $759.62
18:23:36.090 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.090 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,23,7,658318000],"instrumentId":"AAPL","price":176.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,7,658420000]}
18:23:36.090 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.36
18:23:36.090 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.090 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,23,7,658318000],"instrumentId":"MSFT","price":383.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,7,658879000]}
18:23:36.091 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $383.43
18:23:36.091 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.091 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,23,7,658318000],"instrumentId":"GOOGL","price":138.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,7,658981000]}
18:23:36.092 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.15
18:23:36.092 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.092 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,23,7,658318000],"instrumentId":"JPM","price":176.62,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,7,659073000]}
18:23:36.094 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $176.62
18:23:36.094 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.094 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,23,7,658318000],"instrumentId":"BAC","price":31.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,7,659171000]}
18:23:36.094 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.85
18:23:36.095 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.095 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,23,7,658318000],"instrumentId":"NESN","price":104.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,7,659210000]}
18:23:36.095 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.26
18:23:36.095 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.095 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,23,7,658318000],"instrumentId":"ASML","price":763.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,7,659261000]}
18:23:36.096 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $763.28
18:23:36.096 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.096 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,23,12,660512000],"instrumentId":"AAPL","price":176.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,12,660569000]}
18:23:36.097 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.31
18:23:36.097 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.097 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,23,12,660512000],"instrumentId":"MSFT","price":392.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,12,660805000]}
18:23:36.097 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $392.97
18:23:36.098 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.098 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,23,12,660512000],"instrumentId":"GOOGL","price":135.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,12,660911000]}
18:23:36.099 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $135.82
18:23:36.099 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.099 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,23,12,660512000],"instrumentId":"JPM","price":177.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,12,661009000]}
18:23:36.099 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $177.92
18:23:36.099 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.099 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,23,12,660512000],"instrumentId":"BAC","price":31.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,12,661075000]}
18:23:36.100 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.63
18:23:36.100 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.100 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,23,12,660512000],"instrumentId":"NESN","price":103.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,12,661169000]}
18:23:36.100 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.73
18:23:36.100 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.100 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,23,12,660512000],"instrumentId":"ASML","price":766.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,12,661246000]}
18:23:36.101 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $766.03
18:23:36.101 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.101 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,23,17,660392000],"instrumentId":"AAPL","price":177.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,17,660502000]}
18:23:36.101 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.72
18:23:36.101 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.101 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,23,17,660392000],"instrumentId":"MSFT","price":393.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,17,661033000]}
18:23:36.102 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $393.39
18:23:36.102 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.102 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,23,17,660392000],"instrumentId":"GOOGL","price":136.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,17,661162000]}
18:23:36.102 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.15
18:23:36.102 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.102 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,23,17,660392000],"instrumentId":"JPM","price":176.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,17,661243000]}
18:23:36.103 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $176.52
18:23:36.103 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.103 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,23,17,660392000],"instrumentId":"BAC","price":31.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,17,661338000]}
18:23:36.103 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.53
18:23:36.103 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.103 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,23,17,660392000],"instrumentId":"NESN","price":102.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,17,661376000]}
18:23:36.104 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $102.79
18:23:36.104 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.104 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,23,17,660392000],"instrumentId":"ASML","price":765.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,17,661426000]}
18:23:36.105 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $765.55
18:23:36.105 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.106 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,23,22,664701000],"instrumentId":"AAPL","price":178.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,22,664743000]}
18:23:36.106 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.46
18:23:36.106 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.106 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,23,22,664701000],"instrumentId":"MSFT","price":391.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,22,664845000]}
18:23:36.107 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $391.87
18:23:36.107 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.107 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,23,22,664701000],"instrumentId":"GOOGL","price":136.49,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,22,664871000]}
18:23:36.107 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.49
18:23:36.107 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.107 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,23,22,664701000],"instrumentId":"JPM","price":176.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,22,664907000]}
18:23:36.108 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $176.48
18:23:36.108 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.108 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,23,22,664701000],"instrumentId":"BAC","price":31.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,22,664930000]}
18:23:36.108 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.38
18:23:36.108 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.108 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,23,22,664701000],"instrumentId":"NESN","price":103.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,22,664950000]}
18:23:36.110 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.11
18:23:36.110 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.110 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,23,22,664701000],"instrumentId":"ASML","price":769.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,22,664968000]}
18:23:36.111 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $769.25
18:23:36.111 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.111 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,23,27,661255000],"instrumentId":"AAPL","price":179.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,27,661364000]}
18:23:36.111 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.26
18:23:36.111 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.111 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,23,27,661255000],"instrumentId":"MSFT","price":390.77,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,27,661773000]}
18:23:36.112 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $390.77
18:23:36.112 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.112 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,23,27,661255000],"instrumentId":"GOOGL","price":135.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,27,661866000]}
18:23:36.112 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $135.25
18:23:36.112 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.112 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,23,27,661255000],"instrumentId":"JPM","price":175.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,27,661955000]}
18:23:36.113 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $175.94
18:23:36.113 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.113 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,23,27,661255000],"instrumentId":"BAC","price":31.33,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,27,661999000]}
18:23:36.113 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.33
18:23:36.113 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.113 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,23,27,661255000],"instrumentId":"NESN","price":103.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,27,662064000]}
18:23:36.114 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.13
18:23:36.114 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.114 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,23,27,661255000],"instrumentId":"ASML","price":768.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,27,662099000]}
18:23:36.115 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $768.53
18:23:36.115 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.115 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,23,32,659563000],"instrumentId":"AAPL","price":180.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,32,659593000]}
18:23:36.115 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $180.39
18:23:36.115 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.115 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,23,32,659563000],"instrumentId":"MSFT","price":389.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,32,659665000]}
18:23:36.116 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $389.63
18:23:36.116 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.116 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,23,32,659563000],"instrumentId":"GOOGL","price":135.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,32,659707000]}
18:23:36.116 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $135.39
18:23:36.116 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.116 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,23,32,659563000],"instrumentId":"JPM","price":175.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,32,659719000]}
18:23:36.117 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $175.76
18:23:36.117 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.117 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,23,32,659563000],"instrumentId":"BAC","price":31.35,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,32,659860000]}
18:23:36.117 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.35
18:23:36.117 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.117 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,23,32,659563000],"instrumentId":"NESN","price":103.33,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,32,659878000]}
18:23:36.118 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.33
18:23:36.118 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:36.118 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,23,32,659563000],"instrumentId":"ASML","price":762.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,32,659894000]}
18:23:36.118 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $762.97
18:23:36.118 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:37.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,23,37,661398000],"instrumentId":"AAPL","price":179.62,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,37,661716000]}
18:23:37.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.62
18:23:37.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:37.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,23,37,661398000],"instrumentId":"MSFT","price":392.32,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,37,662793000]}
18:23:37.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $392.32
18:23:37.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:37.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,23,37,661398000],"instrumentId":"GOOGL","price":135.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,37,662981000]}
18:23:37.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $135.14
18:23:37.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:37.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,23,37,661398000],"instrumentId":"JPM","price":174.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,37,663223000]}
18:23:37.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $174.78
18:23:37.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:37.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,23,37,661398000],"instrumentId":"BAC","price":31.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,37,663323000]}
18:23:37.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.52
18:23:37.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:37.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,23,37,661398000],"instrumentId":"NESN","price":103.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,37,663395000]}
18:23:37.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.24
18:23:37.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:37.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,23,37,661398000],"instrumentId":"ASML","price":761.81,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,37,663451000]}
18:23:37.689 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $761.81
18:23:37.689 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:42.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,23,42,657806000],"instrumentId":"AAPL","price":179.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,42,657862000]}
18:23:42.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.92
18:23:42.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:42.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,23,42,657806000],"instrumentId":"MSFT","price":392.66,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,42,658068000]}
18:23:42.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $392.66
18:23:42.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:42.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,23,42,657806000],"instrumentId":"GOOGL","price":134.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,42,658109000]}
18:23:42.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $134.18
18:23:42.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:42.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,23,42,657806000],"instrumentId":"JPM","price":174.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,42,658182000]}
18:23:42.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $174.73
18:23:42.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:42.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,23,42,657806000],"instrumentId":"BAC","price":31.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,42,658204000]}
18:23:42.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.48
18:23:42.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:42.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,23,42,657806000],"instrumentId":"NESN","price":103.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,42,658229000]}
18:23:42.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.21
18:23:42.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:42.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,23,42,657806000],"instrumentId":"ASML","price":762.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,42,658248000]}
18:23:42.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $762.51
18:23:42.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:47.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,23,47,659520000],"instrumentId":"AAPL","price":180.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,47,659660000]}
18:23:47.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $180.56
18:23:47.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:47.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,23,47,659520000],"instrumentId":"MSFT","price":392.40,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,47,660291000]}
18:23:47.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $392.40
18:23:47.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:47.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,23,47,659520000],"instrumentId":"GOOGL","price":134.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,47,660426000]}
18:23:47.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $134.28
18:23:47.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:47.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,23,47,659520000],"instrumentId":"JPM","price":171.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,47,660550000]}
18:23:47.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $171.82
18:23:47.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:47.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,23,47,659520000],"instrumentId":"BAC","price":31.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,47,660591000]}
18:23:47.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.34
18:23:47.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:47.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,23,47,659520000],"instrumentId":"NESN","price":103.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,47,660614000]}
18:23:47.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.70
18:23:47.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:47.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,23,47,659520000],"instrumentId":"ASML","price":759.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,47,660701000]}
18:23:47.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $759.67
18:23:47.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:52.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,23,52,667778000],"instrumentId":"AAPL","price":179.41,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,52,667866000]}
18:23:52.685 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_72472f572814","remainingQuantity":495,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_72472f572814","instrumentId":"BAC","accountId":"ACC001","date":[2025,5,24,18,23,52,663202000],"orderQuantity":495,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":361.70,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,23,52,664568000]}
18:23:52.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.41
18:23:52.691 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_72472f572814 (CREATED BAC)
18:23:52.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:52.691 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:23:52.692 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_f646f0d5d651","remainingQuantity":2,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_f646f0d5d651","instrumentId":"ASML","accountId":"ACC002","date":[2025,5,24,18,23,52,666761000],"orderQuantity":2,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":464.62,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,23,52,666880000]}
18:23:52.692 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,23,52,667778000],"instrumentId":"MSFT","price":392.49,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,52,668267000]}
18:23:52.693 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $392.49
18:23:52.693 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_f646f0d5d651 (CREATED ASML)
18:23:52.693 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:52.693 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:23:52.693 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,23,52,667778000],"instrumentId":"GOOGL","price":134.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,52,668328000]}
18:23:52.693 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_7bfc1f616ab9","remainingQuantity":654,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_7bfc1f616ab9","instrumentId":"ASML","accountId":"ACC004","date":[2025,5,24,18,23,52,667243000],"orderQuantity":654,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":475.16,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,23,52,667331000]}
18:23:52.694 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $134.82
18:23:52.694 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:52.694 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_7bfc1f616ab9 (CREATED ASML)
18:23:52.694 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:23:52.694 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,23,52,667778000],"instrumentId":"JPM","price":172.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,52,668380000]}
18:23:52.695 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $172.44
18:23:52.695 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:52.695 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,23,52,667778000],"instrumentId":"BAC","price":31.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,52,668415000]}
18:23:52.696 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.34
18:23:52.696 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:52.696 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,23,52,667778000],"instrumentId":"NESN","price":103.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,52,668443000]}
18:23:52.697 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.17
18:23:52.697 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:52.697 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,23,52,667778000],"instrumentId":"ASML","price":758.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,52,668473000]}
18:23:52.698 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $758.67
18:23:52.698 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:57.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,23,57,660622000],"instrumentId":"AAPL","price":178.47,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,57,660801000]}
18:23:57.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.47
18:23:57.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:57.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,23,57,660622000],"instrumentId":"MSFT","price":387.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,57,661352000]}
18:23:57.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $387.18
18:23:57.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:57.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,23,57,660622000],"instrumentId":"GOOGL","price":133.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,57,661494000]}
18:23:57.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $133.76
18:23:57.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:57.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,23,57,660622000],"instrumentId":"JPM","price":172.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,57,661563000]}
18:23:57.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $172.15
18:23:57.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:57.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,23,57,660622000],"instrumentId":"BAC","price":31.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,57,661683000]}
18:23:57.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.37
18:23:57.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:57.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,23,57,660622000],"instrumentId":"NESN","price":103.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,57,661819000]}
18:23:57.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.34
18:23:57.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:57.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,23,57,660622000],"instrumentId":"ASML","price":759.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,23,57,661876000]}
18:23:57.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $759.34
18:23:57.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:23:58.489 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
18:23:58.489 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
18:23:58.490 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
18:24:02.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,24,2,661711000],"instrumentId":"AAPL","price":179.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,2,661754000]}
18:24:02.675 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_c435b6d163d1","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_c435b6d163d1","instrumentId":"GOOGL","accountId":"ACC004","date":[2025,5,24,18,24,2,660519000],"orderQuantity":34,"filledQuantity":34,"orderStatus":"PARTIALLY_FILLED","orderPrice":104.69,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,24,2,660851000]}
18:24:02.680 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_c435b6d163d1 (PARTIALLY_FILLED GOOGL)
18:24:02.681 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:02.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.28
18:24:02.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:02.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,24,2,661711000],"instrumentId":"MSFT","price":388.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,2,661896000]}
18:24:02.681 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_d4811dab8bce","remainingQuantity":30,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_d4811dab8bce","instrumentId":"MSFT","accountId":"ACC001","date":[2025,5,24,18,24,2,661363000],"orderQuantity":30,"filledQuantity":0,"orderStatus":"FILLED","orderPrice":63.40,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,24,2,661462000]}
18:24:02.684 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_d4811dab8bce (FILLED MSFT)
18:24:02.684 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:02.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $388.74
18:24:02.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:02.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,24,2,661711000],"instrumentId":"GOOGL","price":134.35,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,2,662054000]}
18:24:02.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $134.35
18:24:02.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:02.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,24,2,661711000],"instrumentId":"JPM","price":175.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,2,662110000]}
18:24:02.687 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $175.18
18:24:02.687 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:02.687 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,24,2,661711000],"instrumentId":"BAC","price":31.32,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,2,662143000]}
18:24:02.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.32
18:24:02.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:02.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,24,2,661711000],"instrumentId":"NESN","price":102.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,2,662205000]}
18:24:02.689 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $102.56
18:24:02.689 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:02.689 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,24,2,661711000],"instrumentId":"ASML","price":762.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,2,662237000]}
18:24:02.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $762.52
18:24:02.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:07.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,24,7,661395000],"instrumentId":"AAPL","price":178.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,7,661503000]}
18:24:07.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.88
18:24:07.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:07.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,24,7,661395000],"instrumentId":"MSFT","price":389.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,7,661935000]}
18:24:07.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $389.74
18:24:07.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:07.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,24,7,661395000],"instrumentId":"GOOGL","price":134.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,7,662051000]}
18:24:07.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $134.58
18:24:07.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:07.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,24,7,661395000],"instrumentId":"JPM","price":174.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,7,662120000]}
18:24:07.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $174.46
18:24:07.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:07.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,24,7,661395000],"instrumentId":"BAC","price":31.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,7,662176000]}
18:24:07.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.20
18:24:07.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:07.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,24,7,661395000],"instrumentId":"NESN","price":102.99,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,7,662201000]}
18:24:07.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $102.99
18:24:07.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:07.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,24,7,661395000],"instrumentId":"ASML","price":765.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,7,662230000]}
18:24:07.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $765.61
18:24:07.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:12.672 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_a2f4178caafd","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_a2f4178caafd","instrumentId":"JPM","accountId":"ACC005","date":[2025,5,24,18,24,12,659137000],"orderQuantity":60,"filledQuantity":60,"orderStatus":"CANCELLED","orderPrice":471.26,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,24,12,659558000]}
18:24:12.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,24,12,660678000],"instrumentId":"AAPL","price":177.57,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,12,660741000]}
18:24:12.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.57
18:24:12.675 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_a2f4178caafd (CANCELLED JPM)
18:24:12.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:12.675 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:12.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,24,12,660678000],"instrumentId":"MSFT","price":390.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,12,660996000]}
18:24:12.675 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_736cfa6462a7","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_736cfa6462a7","instrumentId":"ASML","accountId":"ACC004","date":[2025,5,24,18,24,12,660205000],"orderQuantity":7,"filledQuantity":7,"orderStatus":"FILLED","orderPrice":118.16,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,24,12,660347000]}
18:24:12.677 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_736cfa6462a7 (FILLED ASML)
18:24:12.677 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:12.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $390.46
18:24:12.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:12.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,24,12,660678000],"instrumentId":"GOOGL","price":133.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,12,661299000]}
18:24:12.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $133.50
18:24:12.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:12.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,24,12,660678000],"instrumentId":"JPM","price":175.40,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,12,661416000]}
18:24:12.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $175.40
18:24:12.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:12.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,24,12,660678000],"instrumentId":"BAC","price":30.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,12,661518000]}
18:24:12.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.96
18:24:12.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:12.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,24,12,660678000],"instrumentId":"NESN","price":103.40,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,12,661608000]}
18:24:12.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.40
18:24:12.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:12.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,24,12,660678000],"instrumentId":"ASML","price":771.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,12,661682000]}
18:24:12.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $771.52
18:24:12.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:13.586 [http-nio-8080-exec-2] DEBUG c.v.v.c.ViewServerController - API request: GET /api/stats
18:24:17.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,24,17,657693000],"instrumentId":"AAPL","price":177.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,17,657812000]}
18:24:17.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.02
18:24:17.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:17.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,24,17,657693000],"instrumentId":"MSFT","price":388.77,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,17,658420000]}
18:24:17.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $388.77
18:24:17.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:17.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,24,17,657693000],"instrumentId":"GOOGL","price":133.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,17,658589000]}
18:24:17.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $133.28
18:24:17.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:17.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,24,17,657693000],"instrumentId":"JPM","price":175.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,17,658689000]}
18:24:17.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $175.14
18:24:17.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:17.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,24,17,657693000],"instrumentId":"BAC","price":31.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,17,658735000]}
18:24:17.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.01
18:24:17.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:17.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,24,17,657693000],"instrumentId":"NESN","price":102.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,17,658779000]}
18:24:17.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $102.86
18:24:17.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:17.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,24,17,657693000],"instrumentId":"ASML","price":777.75,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,17,659357000]}
18:24:17.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $777.75
18:24:17.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:20.987 [http-nio-8080-exec-4] DEBUG c.v.v.c.ViewServerController - API request: GET /api/accounts
18:24:21.014 [http-nio-8080-exec-6] DEBUG c.v.v.c.ViewServerController - API request: GET /api/prices
18:24:21.035 [http-nio-8080-exec-8] DEBUG c.v.v.c.ViewServerController - API request: GET /api/orders
18:24:22.679 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_0aefb9f16833","remainingQuantity":43,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_0aefb9f16833","instrumentId":"JPM","accountId":"ACC002","date":[2025,5,24,18,24,22,662691000],"orderQuantity":43,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":82.88,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,24,22,663255000]}
18:24:22.679 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received intraday cash data: {"kafkaKey":"2025-05-24#GBP#ACC004","date":[2025,5,24,18,24,22,658526000],"instrumentId":"GBP","accountId":"ACC004","quantity":-71355.08,"movementType":"REDEMPTION","referenceId":"RED_1748107462659_235","timestamp":[2025,5,24,18,24,22,659653000]}
18:24:22.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,24,22,664242000],"instrumentId":"AAPL","price":176.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,22,664318000]}
18:24:22.680 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_0aefb9f16833 (CREATED JPM)
18:24:22.680 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:22.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.74
18:24:22.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:22.680 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_1d1bbf15dbdd","remainingQuantity":67,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_1d1bbf15dbdd","instrumentId":"ASML","accountId":"ACC001","date":[2025,5,24,18,24,22,663663000],"orderQuantity":67,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":386.92,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,24,22,663733000]}
18:24:22.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,24,22,664242000],"instrumentId":"MSFT","price":388.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,22,664476000]}
18:24:22.682 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_1d1bbf15dbdd (CREATED ASML)
18:24:22.682 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:22.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $388.50
18:24:22.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:22.682 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_a6794874537e","remainingQuantity":484,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_a6794874537e","instrumentId":"GOOGL","accountId":"ACC001","date":[2025,5,24,18,24,22,663854000],"orderQuantity":484,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":229.72,"orderType":"LIMIT","venue":"NYSE","timestamp":[2025,5,24,18,24,22,663898000]}
18:24:22.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,24,22,664242000],"instrumentId":"GOOGL","price":134.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,22,664506000]}
18:24:22.683 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached cash movement: -71355.08 GBP for account ACC004 (REDEMPTION)
18:24:22.683 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_a6794874537e (CREATED GOOGL)
18:24:22.683 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached intraday cash data
18:24:22.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $134.58
18:24:22.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:22.683 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:22.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,24,22,664242000],"instrumentId":"JPM","price":175.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,22,664573000]}
18:24:22.683 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_ec616911ea39","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_ec616911ea39","instrumentId":"MSFT","accountId":"ACC003","date":[2025,5,24,18,24,22,663991000],"orderQuantity":5,"filledQuantity":5,"orderStatus":"FILLED","orderPrice":404.19,"orderType":"LIMIT","venue":"EURONEXT","timestamp":[2025,5,24,18,24,22,664035000]}
18:24:22.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $175.52
18:24:22.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:22.684 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_ec616911ea39 (FILLED MSFT)
18:24:22.684 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:22.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,24,22,664242000],"instrumentId":"BAC","price":30.95,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,22,664599000]}
18:24:22.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.95
18:24:22.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:22.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,24,22,664242000],"instrumentId":"NESN","price":103.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,22,664630000]}
18:24:22.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.03
18:24:22.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:22.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,24,22,664242000],"instrumentId":"ASML","price":775.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,22,664661000]}
18:24:22.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $775.78
18:24:22.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:27.044 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.] with root cause
java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:183)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:160)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:106)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:218)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:171)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
18:24:27.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,24,27,661617000],"instrumentId":"AAPL","price":176.35,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,27,661987000]}
18:24:27.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.35
18:24:27.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:27.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,24,27,661617000],"instrumentId":"MSFT","price":388.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,27,662726000]}
18:24:27.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $388.97
18:24:27.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:27.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,24,27,661617000],"instrumentId":"GOOGL","price":136.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,27,663469000]}
18:24:27.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.03
18:24:27.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:27.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,24,27,661617000],"instrumentId":"JPM","price":177.10,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,27,663598000]}
18:24:27.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $177.10
18:24:27.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:27.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,24,27,661617000],"instrumentId":"BAC","price":31.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,27,663709000]}
18:24:27.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.04
18:24:27.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:27.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,24,27,661617000],"instrumentId":"NESN","price":102.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,27,663753000]}
18:24:27.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $102.70
18:24:27.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:27.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,24,27,661617000],"instrumentId":"ASML","price":772.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,27,663817000]}
18:24:27.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $772.36
18:24:27.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:31.458 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.] with root cause
java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:183)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:160)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:106)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:218)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:171)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
18:24:32.668 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,24,32,658094000],"instrumentId":"AAPL","price":176.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,32,658153000]}
18:24:32.669 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.71
18:24:32.669 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:32.669 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,24,32,658094000],"instrumentId":"MSFT","price":390.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,32,658353000]}
18:24:32.670 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $390.85
18:24:32.670 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:32.670 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,24,32,658094000],"instrumentId":"GOOGL","price":136.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,32,658396000]}
18:24:32.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.37
18:24:32.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:32.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,24,32,658094000],"instrumentId":"JPM","price":178.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,32,658414000]}
18:24:32.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $178.05
18:24:32.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:32.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,24,32,658094000],"instrumentId":"BAC","price":31.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,32,658437000]}
18:24:32.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.07
18:24:32.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:32.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,24,32,658094000],"instrumentId":"NESN","price":102.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,32,658453000]}
18:24:32.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $102.78
18:24:32.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:32.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,24,32,658094000],"instrumentId":"ASML","price":773.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,32,658469000]}
18:24:32.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $773.74
18:24:32.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:37.505 [http-nio-8080-exec-2] DEBUG c.v.v.c.ViewServerController - API request: GET /api/instruments
18:24:37.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,24,37,661412000],"instrumentId":"AAPL","price":175.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,37,661461000]}
18:24:37.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.56
18:24:37.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:37.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,24,37,661412000],"instrumentId":"MSFT","price":389.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,37,661652000]}
18:24:37.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $389.90
18:24:37.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:37.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,24,37,661412000],"instrumentId":"GOOGL","price":135.33,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,37,661675000]}
18:24:37.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $135.33
18:24:37.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:37.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,24,37,661412000],"instrumentId":"JPM","price":177.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,37,661733000]}
18:24:37.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $177.43
18:24:37.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:37.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,24,37,661412000],"instrumentId":"BAC","price":30.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,37,661750000]}
18:24:37.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.87
18:24:37.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:37.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,24,37,661412000],"instrumentId":"NESN","price":102.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,37,661763000]}
18:24:37.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $102.20
18:24:37.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:37.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,24,37,661412000],"instrumentId":"ASML","price":774.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,37,661775000]}
18:24:37.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $774.15
18:24:37.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:42.668 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,24,42,660012000],"instrumentId":"AAPL","price":173.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,42,660038000]}
18:24:42.668 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_ee0bd38e348d","remainingQuantity":57,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_ee0bd38e348d","instrumentId":"NESN","accountId":"ACC005","date":[2025,5,24,18,24,42,659542000],"orderQuantity":57,"filledQuantity":0,"orderStatus":"PARTIALLY_FILLED","orderPrice":228.99,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,24,42,659734000]}
18:24:42.670 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_ee0bd38e348d (PARTIALLY_FILLED NESN)
18:24:42.670 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:42.670 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.86
18:24:42.670 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:42.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,24,42,660012000],"instrumentId":"MSFT","price":390.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,42,660097000]}
18:24:42.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $390.22
18:24:42.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:42.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,24,42,660012000],"instrumentId":"GOOGL","price":136.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,42,660114000]}
18:24:42.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.25
18:24:42.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:42.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,24,42,660012000],"instrumentId":"JPM","price":176.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,42,660124000]}
18:24:42.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $176.56
18:24:42.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:42.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,24,42,660012000],"instrumentId":"BAC","price":31.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,42,660133000]}
18:24:42.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.06
18:24:42.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:42.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,24,42,660012000],"instrumentId":"NESN","price":101.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,42,660145000]}
18:24:42.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $101.48
18:24:42.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:42.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,24,42,660012000],"instrumentId":"ASML","price":774.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,42,660155000]}
18:24:42.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $774.71
18:24:42.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:47.670 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,24,47,659642000],"instrumentId":"AAPL","price":173.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,47,659731000]}
18:24:47.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.02
18:24:47.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:47.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,24,47,659642000],"instrumentId":"MSFT","price":387.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,47,660079000]}
18:24:47.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $387.43
18:24:47.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:47.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,24,47,659642000],"instrumentId":"GOOGL","price":136.83,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,47,660128000]}
18:24:47.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.83
18:24:47.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:47.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,24,47,659642000],"instrumentId":"JPM","price":176.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,47,660153000]}
18:24:47.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $176.78
18:24:47.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:47.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,24,47,659642000],"instrumentId":"BAC","price":31.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,47,660176000]}
18:24:47.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.18
18:24:47.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:47.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,24,47,659642000],"instrumentId":"NESN","price":102.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,47,660190000]}
18:24:47.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $102.11
18:24:47.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:47.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,24,47,659642000],"instrumentId":"ASML","price":774.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,47,660274000]}
18:24:47.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $774.70
18:24:47.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:52.680 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_cc512764e384","remainingQuantity":733,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_cc512764e384","instrumentId":"JPM","accountId":"ACC003","date":[2025,5,24,18,24,52,660677000],"orderQuantity":733,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":355.53,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,24,52,661479000]}
18:24:52.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,24,52,664628000],"instrumentId":"AAPL","price":172.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,52,664716000]}
18:24:52.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $172.61
18:24:52.683 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_cc512764e384 (CREATED JPM)
18:24:52.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:52.684 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:52.684 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_3ad97f6be1f8","remainingQuantity":506,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_3ad97f6be1f8","instrumentId":"NESN","accountId":"ACC001","date":[2025,5,24,18,24,52,662811000],"orderQuantity":506,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":332.19,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,24,52,662976000]}
18:24:52.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,24,52,664628000],"instrumentId":"MSFT","price":386.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,52,664898000]}
18:24:52.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $386.25
18:24:52.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:52.686 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_3ad97f6be1f8 (CREATED NESN)
18:24:52.686 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:52.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,24,52,664628000],"instrumentId":"GOOGL","price":137.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,52,664940000]}
18:24:52.686 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_8d8134bbe286","remainingQuantity":639,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_8d8134bbe286","instrumentId":"NESN","accountId":"ACC004","date":[2025,5,24,18,24,52,663413000],"orderQuantity":639,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":185.18,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,24,52,663504000]}
18:24:52.688 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_8d8134bbe286 (CREATED NESN)
18:24:52.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.04
18:24:52.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:52.688 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:52.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,24,52,664628000],"instrumentId":"JPM","price":175.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,52,665004000]}
18:24:52.688 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_51235dbada1a","remainingQuantity":49,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_51235dbada1a","instrumentId":"BAC","accountId":"ACC001","date":[2025,5,24,18,24,52,663842000],"orderQuantity":49,"filledQuantity":0,"orderStatus":"PARTIALLY_FILLED","orderPrice":24.39,"orderType":"LIMIT","venue":"EURONEXT","timestamp":[2025,5,24,18,24,52,663914000]}
18:24:52.689 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $175.54
18:24:52.689 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_51235dbada1a (PARTIALLY_FILLED BAC)
18:24:52.689 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:52.689 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:52.689 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,24,52,664628000],"instrumentId":"BAC","price":31.10,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,52,665036000]}
18:24:52.689 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_cc755759566e","remainingQuantity":127,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_cc755759566e","instrumentId":"NESN","accountId":"ACC004","date":[2025,5,24,18,24,52,663986000],"orderQuantity":265,"filledQuantity":138,"orderStatus":"FILLED","orderPrice":198.74,"orderType":"LIMIT","venue":"NYSE","timestamp":[2025,5,24,18,24,52,664008000]}
18:24:52.690 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.10
18:24:52.690 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:52.690 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_cc755759566e (FILLED NESN)
18:24:52.690 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:24:52.690 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,24,52,664628000],"instrumentId":"NESN","price":101.60,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,52,665062000]}
18:24:52.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $101.60
18:24:52.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:52.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,24,52,664628000],"instrumentId":"ASML","price":778.10,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,52,665096000]}
18:24:52.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $778.10
18:24:52.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:57.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,24,57,663086000],"instrumentId":"AAPL","price":173.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,57,663301000]}
18:24:57.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.14
18:24:57.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:57.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,24,57,663086000],"instrumentId":"MSFT","price":387.59,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,57,663897000]}
18:24:57.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $387.59
18:24:57.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:57.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,24,57,663086000],"instrumentId":"GOOGL","price":137.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,57,663943000]}
18:24:57.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.25
18:24:57.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:57.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,24,57,663086000],"instrumentId":"JPM","price":175.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,57,663971000]}
18:24:57.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $175.42
18:24:57.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:57.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,24,57,663086000],"instrumentId":"BAC","price":30.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,57,663998000]}
18:24:57.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.97
18:24:57.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:57.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,24,57,663086000],"instrumentId":"NESN","price":101.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,57,664041000]}
18:24:57.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $101.50
18:24:57.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:24:57.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,24,57,663086000],"instrumentId":"ASML","price":782.33,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,24,57,664063000]}
18:24:57.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $782.33
18:24:57.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:02.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,25,2,662667000],"instrumentId":"AAPL","price":172.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,2,662748000]}
18:25:02.675 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_1e39897837a3","remainingQuantity":96,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_1e39897837a3","instrumentId":"GOOGL","accountId":"ACC005","date":[2025,5,24,18,25,2,661675000],"orderQuantity":96,"filledQuantity":0,"orderStatus":"FILLED","orderPrice":423.54,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,25,2,662044000]}
18:25:02.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $172.48
18:25:02.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:02.678 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_1e39897837a3 (FILLED GOOGL)
18:25:02.678 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:25:02.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,25,2,662667000],"instrumentId":"MSFT","price":386.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,2,662977000]}
18:25:02.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $386.21
18:25:02.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:02.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,25,2,662667000],"instrumentId":"GOOGL","price":137.91,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,2,663112000]}
18:25:02.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.91
18:25:02.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:02.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,25,2,662667000],"instrumentId":"JPM","price":176.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,2,663189000]}
18:25:02.687 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $176.61
18:25:02.687 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:02.687 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,25,2,662667000],"instrumentId":"BAC","price":30.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,2,663253000]}
18:25:02.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.98
18:25:02.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:02.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,25,2,662667000],"instrumentId":"NESN","price":101.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,2,663292000]}
18:25:02.690 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $101.73
18:25:02.690 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:02.690 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,25,2,662667000],"instrumentId":"ASML","price":784.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,2,663325000]}
18:25:02.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $784.97
18:25:02.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:07.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,25,7,660987000],"instrumentId":"AAPL","price":172.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,7,661096000]}
18:25:07.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $172.53
18:25:07.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:07.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,25,7,660987000],"instrumentId":"MSFT","price":387.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,7,661517000]}
18:25:07.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $387.39
18:25:07.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:07.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,25,7,660987000],"instrumentId":"GOOGL","price":138.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,7,661664000]}
18:25:07.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.72
18:25:07.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:07.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,25,7,660987000],"instrumentId":"JPM","price":177.32,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,7,661811000]}
18:25:07.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $177.32
18:25:07.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:07.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,25,7,660987000],"instrumentId":"BAC","price":30.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,7,661916000]}
18:25:07.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.98
18:25:07.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:07.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,25,7,660987000],"instrumentId":"NESN","price":101.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,7,662022000]}
18:25:07.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $101.76
18:25:07.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:07.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,25,7,660987000],"instrumentId":"ASML","price":779.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,7,662063000]}
18:25:07.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $779.98
18:25:07.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:12.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,25,12,662193000],"instrumentId":"AAPL","price":171.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,12,662594000]}
18:25:12.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $171.70
18:25:12.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:12.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,25,12,662193000],"instrumentId":"MSFT","price":388.59,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,12,663609000]}
18:25:12.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $388.59
18:25:12.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:12.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,25,12,662193000],"instrumentId":"GOOGL","price":138.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,12,663803000]}
18:25:12.690 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.16
18:25:12.690 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:12.690 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,25,12,662193000],"instrumentId":"JPM","price":178.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,12,664024000]}
18:25:12.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $178.24
18:25:12.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:12.691 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,25,12,662193000],"instrumentId":"BAC","price":31.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,12,664084000]}
18:25:12.693 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.26
18:25:12.693 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:12.693 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,25,12,662193000],"instrumentId":"NESN","price":101.93,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,12,664130000]}
18:25:12.695 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $101.93
18:25:12.695 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:12.695 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,25,12,662193000],"instrumentId":"ASML","price":778.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,12,664197000]}
18:25:12.697 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $778.53
18:25:12.697 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:17.667 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,25,17,657243000],"instrumentId":"AAPL","price":173.08,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,17,657402000]}
18:25:17.669 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.08
18:25:17.669 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:17.669 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,25,17,657243000],"instrumentId":"MSFT","price":377.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,17,657783000]}
18:25:17.670 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $377.02
18:25:17.670 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:17.670 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,25,17,657243000],"instrumentId":"GOOGL","price":138.95,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,17,657856000]}
18:25:17.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.95
18:25:17.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:17.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,25,17,657243000],"instrumentId":"JPM","price":178.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,17,657889000]}
18:25:17.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $178.94
18:25:17.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:17.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,25,17,657243000],"instrumentId":"BAC","price":31.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,17,657925000]}
18:25:17.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.04
18:25:17.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:17.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,25,17,657243000],"instrumentId":"NESN","price":102.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,17,657954000]}
18:25:17.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $102.18
18:25:17.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:17.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,25,17,657243000],"instrumentId":"ASML","price":774.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,17,657978000]}
18:25:17.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $774.56
18:25:17.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:22.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,25,22,663606000],"instrumentId":"AAPL","price":173.32,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,22,663653000]}
18:25:22.676 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_744c6f841946","remainingQuantity":623,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_744c6f841946","instrumentId":"GOOGL","accountId":"ACC002","date":[2025,5,24,18,25,22,662042000],"orderQuantity":623,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":147.59,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,25,22,662756000]}
18:25:22.679 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_744c6f841946 (CREATED GOOGL)
18:25:22.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.32
18:25:22.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:22.679 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:25:22.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,25,22,663606000],"instrumentId":"MSFT","price":380.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,22,663752000]}
18:25:22.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $380.20
18:25:22.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:22.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,25,22,663606000],"instrumentId":"GOOGL","price":139.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,22,663775000]}
18:25:22.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.26
18:25:22.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:22.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,25,22,663606000],"instrumentId":"JPM","price":175.99,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,22,663830000]}
18:25:22.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $175.99
18:25:22.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:22.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,25,22,663606000],"instrumentId":"BAC","price":31.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,22,663850000]}
18:25:22.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.02
18:25:22.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:22.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,25,22,663606000],"instrumentId":"NESN","price":99.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,22,663924000]}
18:25:22.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $99.22
18:25:22.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:22.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,25,22,663606000],"instrumentId":"ASML","price":779.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,22,663947000]}
18:25:22.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $779.52
18:25:22.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:27.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,25,27,659832000],"instrumentId":"AAPL","price":173.83,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,27,659911000]}
18:25:27.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.83
18:25:27.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:27.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,25,27,659832000],"instrumentId":"MSFT","price":376.68,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,27,660225000]}
18:25:27.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $376.68
18:25:27.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:27.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,25,27,659832000],"instrumentId":"GOOGL","price":139.08,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,27,660276000]}
18:25:27.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.08
18:25:27.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:27.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,25,27,659832000],"instrumentId":"JPM","price":176.57,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,27,660323000]}
18:25:27.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $176.57
18:25:27.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:27.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,25,27,659832000],"instrumentId":"BAC","price":30.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,27,660351000]}
18:25:27.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.79
18:25:27.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:27.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,25,27,659832000],"instrumentId":"NESN","price":99.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,27,660376000]}
18:25:27.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $99.70
18:25:27.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:27.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,25,27,659832000],"instrumentId":"ASML","price":779.75,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,27,660413000]}
18:25:27.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $779.75
18:25:27.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:32.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,25,32,663455000],"instrumentId":"AAPL","price":173.47,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,32,663545000]}
18:25:32.677 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_38f87d01596f","remainingQuantity":264,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_38f87d01596f","instrumentId":"AAPL","accountId":"ACC004","date":[2025,5,24,18,25,32,662071000],"orderQuantity":264,"filledQuantity":0,"orderStatus":"FILLED","orderPrice":253.51,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,25,32,662574000]}
18:25:32.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.47
18:25:32.681 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_38f87d01596f (FILLED AAPL)
18:25:32.681 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:25:32.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:32.681 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,25,32,663455000],"instrumentId":"MSFT","price":377.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,32,663865000]}
18:25:32.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $377.67
18:25:32.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:32.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,25,32,663455000],"instrumentId":"GOOGL","price":137.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,32,663933000]}
18:25:32.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.92
18:25:32.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:32.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,25,32,663455000],"instrumentId":"JPM","price":176.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,32,663976000]}
18:25:32.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $176.96
18:25:32.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:32.683 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,25,32,663455000],"instrumentId":"BAC","price":30.81,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,32,664000000]}
18:25:32.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.81
18:25:32.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:32.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,25,32,663455000],"instrumentId":"NESN","price":99.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,32,664050000]}
18:25:32.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $99.61
18:25:32.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:32.685 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,25,32,663455000],"instrumentId":"ASML","price":775.81,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,32,664072000]}
18:25:32.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $775.81
18:25:32.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:37.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,25,37,661720000],"instrumentId":"AAPL","price":173.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,37,661822000]}
18:25:37.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.73
18:25:37.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:37.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,25,37,661720000],"instrumentId":"MSFT","price":379.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,37,662272000]}
18:25:37.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $379.20
18:25:37.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:37.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,25,37,661720000],"instrumentId":"GOOGL","price":137.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,37,662389000]}
18:25:37.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.79
18:25:37.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:37.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,25,37,661720000],"instrumentId":"JPM","price":177.45,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,37,662467000]}
18:25:37.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $177.45
18:25:37.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:37.684 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,25,37,661720000],"instrumentId":"BAC","price":30.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,37,662515000]}
18:25:37.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.88
18:25:37.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:37.686 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,25,37,661720000],"instrumentId":"NESN","price":99.32,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,37,662550000]}
18:25:37.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $99.32
18:25:37.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:37.688 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,25,37,661720000],"instrumentId":"ASML","price":779.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,37,662603000]}
18:25:37.690 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $779.34
18:25:37.690 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:42.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,25,42,663355000],"instrumentId":"AAPL","price":172.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,42,663386000]}
18:25:42.674 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_2f172100b2fb","remainingQuantity":78,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_2f172100b2fb","instrumentId":"ASML","accountId":"ACC001","date":[2025,5,24,18,25,42,661206000],"orderQuantity":151,"filledQuantity":73,"orderStatus":"FILLED","orderPrice":136.36,"orderType":"LIMIT","venue":"EURONEXT","timestamp":[2025,5,24,18,25,42,661401000]}
18:25:42.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $172.86
18:25:42.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:42.675 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_2f172100b2fb (FILLED ASML)
18:25:42.675 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:25:42.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,25,42,663355000],"instrumentId":"MSFT","price":376.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,42,663474000]}
18:25:42.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $376.97
18:25:42.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:42.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,25,42,663355000],"instrumentId":"GOOGL","price":137.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,42,663493000]}
18:25:42.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.00
18:25:42.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:42.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,25,42,663355000],"instrumentId":"JPM","price":177.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,42,663521000]}
18:25:42.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $177.70
18:25:42.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:42.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,25,42,663355000],"instrumentId":"BAC","price":30.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,42,663536000]}
18:25:42.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.87
18:25:42.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:42.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,25,42,663355000],"instrumentId":"NESN","price":99.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,42,663548000]}
18:25:42.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $99.05
18:25:42.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:42.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,25,42,663355000],"instrumentId":"ASML","price":785.64,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,42,663565000]}
18:25:42.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $785.64
18:25:42.679 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:47.669 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,25,47,659861000],"instrumentId":"AAPL","price":172.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,47,659930000]}
18:25:47.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $172.56
18:25:47.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:47.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,25,47,659861000],"instrumentId":"MSFT","price":377.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,47,660204000]}
18:25:47.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $377.51
18:25:47.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:47.672 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,25,47,659861000],"instrumentId":"GOOGL","price":138.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,47,660326000]}
18:25:47.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.03
18:25:47.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:47.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,25,47,659861000],"instrumentId":"JPM","price":177.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,47,660371000]}
18:25:47.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $177.69
18:25:47.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:47.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,25,47,659861000],"instrumentId":"BAC","price":31.08,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,47,660461000]}
18:25:47.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.08
18:25:47.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:47.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,25,47,659861000],"instrumentId":"NESN","price":98.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,47,660524000]}
18:25:47.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $98.94
18:25:47.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:47.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,25,47,659861000],"instrumentId":"ASML","price":787.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,47,660542000]}
18:25:47.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $787.17
18:25:47.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:52.671 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,25,52,662210000],"instrumentId":"AAPL","price":172.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,52,662227000]}
18:25:52.671 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_7cb8dde3403e","remainingQuantity":871,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_7cb8dde3403e","instrumentId":"MSFT","accountId":"ACC003","date":[2025,5,24,18,25,52,661711000],"orderQuantity":871,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":323.72,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,25,52,661793000]}
18:25:52.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $172.11
18:25:52.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:52.673 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_7cb8dde3403e (CREATED MSFT)
18:25:52.673 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:25:52.673 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,25,52,662210000],"instrumentId":"MSFT","price":367.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,52,662273000]}
18:25:52.673 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_1fa3b3b65641","remainingQuantity":787,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_1fa3b3b65641","instrumentId":"JPM","accountId":"ACC003","date":[2025,5,24,18,25,52,662006000],"orderQuantity":787,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":270.24,"orderType":"LIMIT","venue":"NYSE","timestamp":[2025,5,24,18,25,52,662051000]}
18:25:52.674 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_1fa3b3b65641 (CREATED JPM)
18:25:52.674 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:25:52.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $367.11
18:25:52.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:52.674 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_bd0b6efb80ca","remainingQuantity":2,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_bd0b6efb80ca","instrumentId":"MSFT","accountId":"ACC005","date":[2025,5,24,18,25,52,662122000],"orderQuantity":2,"filledQuantity":0,"orderStatus":"PARTIALLY_FILLED","orderPrice":478.50,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,25,52,662135000]}
18:25:52.674 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,25,52,662210000],"instrumentId":"GOOGL","price":137.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,52,662289000]}
18:25:52.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.43
18:25:52.675 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_bd0b6efb80ca (PARTIALLY_FILLED MSFT)
18:25:52.675 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:25:52.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:52.675 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_28e7752e8961","remainingQuantity":15,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_28e7752e8961","instrumentId":"GOOGL","accountId":"ACC004","date":[2025,5,24,18,25,52,662164000],"orderQuantity":15,"filledQuantity":0,"orderStatus":"FILLED","orderPrice":380.46,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,25,52,662174000]}
18:25:52.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,25,52,662210000],"instrumentId":"JPM","price":178.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,52,662304000]}
18:25:52.675 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_28e7752e8961 (FILLED GOOGL)
18:25:52.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $178.79
18:25:52.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:52.675 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:25:52.675 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,25,52,662210000],"instrumentId":"BAC","price":31.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,52,662328000]}
18:25:52.676 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.07
18:25:52.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:52.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,25,52,662210000],"instrumentId":"NESN","price":99.68,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,52,662346000]}
18:25:52.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $99.68
18:25:52.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:52.677 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,25,52,662210000],"instrumentId":"ASML","price":785.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,52,662363000]}
18:25:52.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $785.13
18:25:52.678 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:59.514 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received intraday cash data: {"kafkaKey":"2025-05-24#EUR#ACC004","date":[2025,5,24,18,25,59,190705000],"instrumentId":"EUR","accountId":"ACC004","quantity":74770.23,"movementType":"SUBSCRIPTION","referenceId":"SUB_1748107559191_206","timestamp":[2025,5,24,18,25,59,191801000]}
18:25:59.514 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC001","accountId":"ACC001","accountName":"Global Growth Fund","timestamp":[2025,5,24,18,25,59,132398000]}
18:25:59.515 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached cash movement: 74770.23 EUR for account ACC004 (SUBSCRIPTION)
18:25:59.515 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached intraday cash data
18:25:59.515 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC001
18:25:59.515 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:25:59.515 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received intraday cash data: {"kafkaKey":"2025-05-24#EUR#ACC001","date":[2025,5,24,18,25,59,190705000],"instrumentId":"EUR","accountId":"ACC001","quantity":484.05,"movementType":"DIVIDEND","referenceId":"DIV_1748107559500_122","timestamp":[2025,5,24,18,25,59,500545000]}
18:25:59.515 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC002","accountId":"ACC002","accountName":"US Value Strategy","timestamp":[2025,5,24,18,25,59,132419000]}
18:25:59.516 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC002
18:25:59.516 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:25:59.516 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC003","accountId":"ACC003","accountName":"Emerging Markets Equity","timestamp":[2025,5,24,18,25,59,132423000]}
18:25:59.516 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached cash movement: 484.05 EUR for account ACC001 (DIVIDEND)
18:25:59.516 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached intraday cash data
18:25:59.516 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC003
18:25:59.516 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:25:59.516 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC004","accountId":"ACC004","accountName":"European Small Cap","timestamp":[2025,5,24,18,25,59,132425000]}
18:25:59.517 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC004
18:25:59.517 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:25:59.517 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC005","accountId":"ACC005","accountName":"Technology Innovation Fund","timestamp":[2025,5,24,18,25,59,132427000]}
18:25:59.518 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC005
18:25:59.518 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:25:59.524 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"AAPL","cash":false,"instrumentId":"AAPL","instrumentName":"Apple Inc","countryOfRisk":"US","countryOfDomicile":"US","sector":"Technology","subSectors":["Consumer Electronics","Software"],"timestamp":[2025,5,24,18,25,59,132514000]}
18:25:59.525 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,25,59,513009000],"instrumentId":"AAPL","price":180.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,59,513499000]}
18:25:59.525 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_906fc5d72d86","remainingQuantity":81,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_906fc5d72d86","instrumentId":"MSFT","accountId":"ACC004","date":[2025,5,24,18,25,59,501668000],"orderQuantity":81,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":441.86,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,25,59,502133000]}
18:25:59.526 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $180.82
18:25:59.526 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:59.527 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_906fc5d72d86 (CREATED MSFT)
18:25:59.527 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:25:59.527 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_8d5daca8ab8b","remainingQuantity":67,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_8d5daca8ab8b","instrumentId":"MSFT","accountId":"ACC005","date":[2025,5,24,18,25,59,511969000],"orderQuantity":67,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":197.42,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,25,59,512077000]}
18:25:59.527 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,25,59,513009000],"instrumentId":"MSFT","price":418.33,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,59,516694000]}
18:25:59.527 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $418.33
18:25:59.527 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:59.527 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,25,59,513009000],"instrumentId":"GOOGL","price":140.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,59,516940000]}
18:25:59.528 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.36
18:25:59.528 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:59.528 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,25,59,513009000],"instrumentId":"JPM","price":165.08,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,59,517108000]}
18:25:59.528 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.08
18:25:59.528 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:59.528 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,25,59,513009000],"instrumentId":"BAC","price":33.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,59,520280000]}
18:25:59.529 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.06
18:25:59.529 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:59.529 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,25,59,513009000],"instrumentId":"NESN","price":105.89,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,59,520564000]}
18:25:59.529 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.89
18:25:59.529 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:59.529 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,25,59,513009000],"instrumentId":"ASML","price":722.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,25,59,520733000]}
18:25:59.531 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $722.53
18:25:59.531 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:25:59.532 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_8d5daca8ab8b (CREATED MSFT)
18:25:59.532 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:25:59.532 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_d68166ae6f16","remainingQuantity":1,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_d68166ae6f16","instrumentId":"MSFT","accountId":"ACC004","date":[2025,5,24,18,25,59,512466000],"orderQuantity":4,"filledQuantity":3,"orderStatus":"PARTIALLY_FILLED","orderPrice":221.87,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,25,59,512550000]}
18:25:59.533 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_d68166ae6f16 (PARTIALLY_FILLED MSFT)
18:25:59.533 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:25:59.533 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_001a391cfb70","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_001a391cfb70","instrumentId":"BAC","accountId":"ACC002","date":[2025,5,24,18,25,59,512703000],"orderQuantity":43,"filledQuantity":43,"orderStatus":"FILLED","orderPrice":51.80,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,25,59,512748000]}
18:25:59.534 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_001a391cfb70 (FILLED BAC)
18:25:59.534 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:25:59.537 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: AAPL
18:25:59.537 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:25:59.537 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"MSFT","cash":false,"instrumentId":"MSFT","instrumentName":"Microsoft Corp","countryOfRisk":"US","countryOfDomicile":"US","sector":"Technology","subSectors":["Software","Cloud Computing"],"timestamp":[2025,5,24,18,25,59,132520000]}
18:25:59.537 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: MSFT
18:25:59.537 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:25:59.537 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"GOOGL","cash":false,"instrumentId":"GOOGL","instrumentName":"Alphabet Inc","countryOfRisk":"US","countryOfDomicile":"US","sector":"Technology","subSectors":["Internet Services","Advertising"],"timestamp":[2025,5,24,18,25,59,132525000]}
18:25:59.538 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: GOOGL
18:25:59.538 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:25:59.538 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"JPM","cash":false,"instrumentId":"JPM","instrumentName":"JPMorgan Chase & Co","countryOfRisk":"US","countryOfDomicile":"US","sector":"Financials","subSectors":["Banking","Investment Banking"],"timestamp":[2025,5,24,18,25,59,132528000]}
18:25:59.538 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: JPM
18:25:59.538 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:25:59.538 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"BAC","cash":false,"instrumentId":"BAC","instrumentName":"Bank of America Corp","countryOfRisk":"US","countryOfDomicile":"US","sector":"Financials","subSectors":["Banking","Retail Banking"],"timestamp":[2025,5,24,18,25,59,132530000]}
18:25:59.539 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: BAC
18:25:59.539 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:25:59.539 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"NESN","cash":false,"instrumentId":"NESN","instrumentName":"Nestle SA","countryOfRisk":"CH","countryOfDomicile":"CH","sector":"Consumer Staples","subSectors":["Food Products","Beverages"],"timestamp":[2025,5,24,18,25,59,132535000]}
18:25:59.539 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: NESN
18:25:59.539 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:25:59.539 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"ASML","cash":false,"instrumentId":"ASML","instrumentName":"ASML Holding NV","countryOfRisk":"NL","countryOfDomicile":"NL","sector":"Technology","subSectors":["Semiconductors","Manufacturing Equipment"],"timestamp":[2025,5,24,18,25,59,132539000]}
18:25:59.540 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: ASML
18:25:59.540 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:25:59.540 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"USD","cash":true,"instrumentId":"USD","instrumentName":"US Dollar Cash","countryOfRisk":"US","countryOfDomicile":"US","sector":"Cash","subSectors":["Currency"],"timestamp":[2025,5,24,18,25,59,132542000]}
18:25:59.540 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: USD
18:25:59.540 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:25:59.540 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"EUR","cash":true,"instrumentId":"EUR","instrumentName":"Euro Cash","countryOfRisk":"EU","countryOfDomicile":"EU","sector":"Cash","subSectors":["Currency"],"timestamp":[2025,5,24,18,25,59,132544000]}
18:25:59.540 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: EUR
18:25:59.540 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:25:59.540 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"GBP","cash":true,"instrumentId":"GBP","instrumentName":"British Pound Cash","countryOfRisk":"GB","countryOfDomicile":"GB","sector":"Cash","subSectors":["Currency"],"timestamp":[2025,5,24,18,25,59,132547000]}
18:25:59.541 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: GBP
18:25:59.541 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:26:04.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,26,4,195943000],"instrumentId":"AAPL","price":181.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,4,196289000]}
18:26:04.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $181.70
18:26:04.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:04.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,26,4,195943000],"instrumentId":"MSFT","price":416.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,4,198598000]}
18:26:04.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $416.51
18:26:04.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:04.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,26,4,195943000],"instrumentId":"GOOGL","price":140.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,4,199292000]}
18:26:04.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.04
18:26:04.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:04.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,26,4,195943000],"instrumentId":"JPM","price":165.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,4,199809000]}
18:26:04.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.03
18:26:04.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:04.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,26,4,195943000],"instrumentId":"BAC","price":33.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,4,200209000]}
18:26:04.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.00
18:26:04.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:04.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,26,4,195943000],"instrumentId":"NESN","price":105.89,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,4,200577000]}
18:26:04.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.89
18:26:04.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:04.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,26,4,195943000],"instrumentId":"ASML","price":724.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,4,201155000]}
18:26:04.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $724.24
18:26:04.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:09.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,26,9,198074000],"instrumentId":"AAPL","price":181.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,9,198266000]}
18:26:09.212 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_8e468f5c211c","remainingQuantity":324,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_8e468f5c211c","instrumentId":"JPM","accountId":"ACC002","date":[2025,5,24,18,26,9,195057000],"orderQuantity":460,"filledQuantity":136,"orderStatus":"FILLED","orderPrice":365.27,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,26,9,196056000]}
18:26:09.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $181.05
18:26:09.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:09.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_8e468f5c211c (FILLED JPM)
18:26:09.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:26:09.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,26,9,198074000],"instrumentId":"MSFT","price":414.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,9,199043000]}
18:26:09.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $414.43
18:26:09.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:09.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,26,9,198074000],"instrumentId":"GOOGL","price":139.19,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,9,200233000]}
18:26:09.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.19
18:26:09.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:09.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,26,9,198074000],"instrumentId":"JPM","price":167.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,9,200770000]}
18:26:09.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $167.16
18:26:09.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:09.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,26,9,198074000],"instrumentId":"BAC","price":33.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,9,201607000]}
18:26:09.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.26
18:26:09.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:09.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,26,9,198074000],"instrumentId":"NESN","price":106.10,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,9,202375000]}
18:26:09.225 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.10
18:26:09.225 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:09.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,26,9,198074000],"instrumentId":"ASML","price":722.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,9,202772000]}
18:26:09.231 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $722.11
18:26:09.231 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:14.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,26,14,191913000],"instrumentId":"AAPL","price":179.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,14,192119000]}
18:26:14.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.52
18:26:14.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:14.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,26,14,191913000],"instrumentId":"MSFT","price":413.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,14,192791000]}
18:26:14.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $413.50
18:26:14.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:14.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,26,14,191913000],"instrumentId":"GOOGL","price":138.62,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,14,193113000]}
18:26:14.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.62
18:26:14.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:14.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,26,14,191913000],"instrumentId":"JPM","price":167.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,14,193687000]}
18:26:14.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $167.63
18:26:14.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:14.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,26,14,191913000],"instrumentId":"BAC","price":33.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,14,193998000]}
18:26:14.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.22
18:26:14.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:14.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,26,14,191913000],"instrumentId":"NESN","price":105.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,14,194315000]}
18:26:14.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.86
18:26:14.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:14.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,26,14,191913000],"instrumentId":"ASML","price":723.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,14,194725000]}
18:26:14.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $723.17
18:26:14.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:19.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,26,19,195769000],"instrumentId":"AAPL","price":180.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,19,196251000]}
18:26:19.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $180.54
18:26:19.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:19.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,26,19,195769000],"instrumentId":"MSFT","price":415.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,19,198591000]}
18:26:19.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.07
18:26:19.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:19.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,26,19,195769000],"instrumentId":"GOOGL","price":138.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,19,199317000]}
18:26:19.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.86
18:26:19.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:19.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,26,19,195769000],"instrumentId":"JPM","price":166.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,19,199752000]}
18:26:19.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.70
18:26:19.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:19.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,26,19,195769000],"instrumentId":"BAC","price":33.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,19,200069000]}
18:26:19.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.07
18:26:19.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:19.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,26,19,195769000],"instrumentId":"NESN","price":105.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,19,200335000]}
18:26:19.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.55
18:26:19.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:19.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,26,19,195769000],"instrumentId":"ASML","price":716.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,19,200606000]}
18:26:19.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $716.97
18:26:19.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:24.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,26,24,191081000],"instrumentId":"AAPL","price":181.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,24,191276000]}
18:26:24.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $181.72
18:26:24.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:24.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,26,24,191081000],"instrumentId":"MSFT","price":416.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,24,192042000]}
18:26:24.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $416.97
18:26:24.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:24.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,26,24,191081000],"instrumentId":"GOOGL","price":139.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,24,192494000]}
18:26:24.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.39
18:26:24.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:24.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,26,24,191081000],"instrumentId":"JPM","price":167.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,24,192811000]}
18:26:24.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $167.16
18:26:24.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:24.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,26,24,191081000],"instrumentId":"BAC","price":33.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,24,193080000]}
18:26:24.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.12
18:26:24.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:24.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,26,24,191081000],"instrumentId":"NESN","price":105.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,24,193374000]}
18:26:24.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.67
18:26:24.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:24.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,26,24,191081000],"instrumentId":"ASML","price":720.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,24,193623000]}
18:26:24.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $720.38
18:26:24.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:29.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,26,29,197745000],"instrumentId":"AAPL","price":180.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,29,197863000]}
18:26:29.208 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_644596a1e70b","remainingQuantity":47,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_644596a1e70b","instrumentId":"JPM","accountId":"ACC001","date":[2025,5,24,18,26,29,193675000],"orderQuantity":47,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":70.06,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,26,29,194139000]}
18:26:29.210 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_644596a1e70b (CREATED JPM)
18:26:29.210 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:26:29.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $180.82
18:26:29.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:29.210 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_ced5de703ae8","remainingQuantity":41,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_ced5de703ae8","instrumentId":"MSFT","accountId":"ACC004","date":[2025,5,24,18,26,29,196265000],"orderQuantity":41,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":235.08,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,26,29,196482000]}
18:26:29.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,26,29,197745000],"instrumentId":"MSFT","price":425.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,29,198216000]}
18:26:29.211 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_ced5de703ae8 (CREATED MSFT)
18:26:29.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $425.20
18:26:29.211 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:26:29.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:29.212 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_0f7f21a6e085","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_0f7f21a6e085","instrumentId":"GOOGL","accountId":"ACC003","date":[2025,5,24,18,26,29,196955000],"orderQuantity":92,"filledQuantity":92,"orderStatus":"FILLED","orderPrice":447.57,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,26,29,197130000]}
18:26:29.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,26,29,197745000],"instrumentId":"GOOGL","price":139.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,29,198476000]}
18:26:29.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.34
18:26:29.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:29.212 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_0f7f21a6e085 (FILLED GOOGL)
18:26:29.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,26,29,197745000],"instrumentId":"JPM","price":167.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,29,198726000]}
18:26:29.212 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:26:29.212 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_f8d8de35400e","remainingQuantity":219,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_f8d8de35400e","instrumentId":"JPM","accountId":"ACC003","date":[2025,5,24,18,26,29,197389000],"orderQuantity":880,"filledQuantity":661,"orderStatus":"FILLED","orderPrice":283.95,"orderType":"MARKET","venue":"LSE","timestamp":[2025,5,24,18,26,29,197496000]}
18:26:29.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $167.31
18:26:29.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:29.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_f8d8de35400e (FILLED JPM)
18:26:29.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:26:29.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,26,29,197745000],"instrumentId":"BAC","price":33.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,29,198986000]}
18:26:29.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.22
18:26:29.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:29.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,26,29,197745000],"instrumentId":"NESN","price":105.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,29,199271000]}
18:26:29.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.70
18:26:29.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:29.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,26,29,197745000],"instrumentId":"ASML","price":720.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,29,199532000]}
18:26:29.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $720.97
18:26:29.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:34.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,26,34,194535000],"instrumentId":"AAPL","price":180.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,34,194771000]}
18:26:34.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $180.96
18:26:34.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:34.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,26,34,194535000],"instrumentId":"MSFT","price":422.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,34,195984000]}
18:26:34.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $422.15
18:26:34.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:34.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,26,34,194535000],"instrumentId":"GOOGL","price":139.35,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,34,196431000]}
18:26:34.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.35
18:26:34.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:34.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,26,34,194535000],"instrumentId":"JPM","price":166.32,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,34,196710000]}
18:26:34.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.32
18:26:34.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:34.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,26,34,194535000],"instrumentId":"BAC","price":33.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,34,197001000]}
18:26:34.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.16
18:26:34.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:34.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,26,34,194535000],"instrumentId":"NESN","price":105.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,34,197277000]}
18:26:34.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.80
18:26:34.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:34.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,26,34,194535000],"instrumentId":"ASML","price":721.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,34,197535000]}
18:26:34.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $721.92
18:26:34.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:39.206 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_4273dc91cc7e","remainingQuantity":229,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_4273dc91cc7e","instrumentId":"JPM","accountId":"ACC001","date":[2025,5,24,18,26,39,191979000],"orderQuantity":265,"filledQuantity":36,"orderStatus":"FILLED","orderPrice":370.92,"orderType":"LIMIT","venue":"NYSE","timestamp":[2025,5,24,18,26,39,192521000]}
18:26:39.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,26,39,195593000],"instrumentId":"AAPL","price":180.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,39,195785000]}
18:26:39.207 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_4273dc91cc7e (FILLED JPM)
18:26:39.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $180.25
18:26:39.207 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:26:39.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:39.207 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_ce6bb7038ca0","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_ce6bb7038ca0","instrumentId":"GOOGL","accountId":"ACC003","date":[2025,5,24,18,26,39,194601000],"orderQuantity":623,"filledQuantity":623,"orderStatus":"FILLED","orderPrice":212.13,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,26,39,194801000]}
18:26:39.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,26,39,195593000],"instrumentId":"MSFT","price":419.29,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,39,196361000]}
18:26:39.208 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_ce6bb7038ca0 (FILLED GOOGL)
18:26:39.208 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:26:39.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $419.29
18:26:39.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:39.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,26,39,195593000],"instrumentId":"GOOGL","price":139.66,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,39,196667000]}
18:26:39.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.66
18:26:39.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:39.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,26,39,195593000],"instrumentId":"JPM","price":164.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,39,196924000]}
18:26:39.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $164.78
18:26:39.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:39.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,26,39,195593000],"instrumentId":"BAC","price":33.10,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,39,197166000]}
18:26:39.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.10
18:26:39.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:39.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,26,39,195593000],"instrumentId":"NESN","price":105.59,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,39,197564000]}
18:26:39.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.59
18:26:39.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:39.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,26,39,195593000],"instrumentId":"ASML","price":717.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,39,198007000]}
18:26:39.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $717.72
18:26:39.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:44.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,26,44,195698000],"instrumentId":"AAPL","price":178.49,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,44,196283000]}
18:26:44.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.49
18:26:44.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:44.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,26,44,195698000],"instrumentId":"MSFT","price":421.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,44,198198000]}
18:26:44.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $421.42
18:26:44.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:44.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,26,44,195698000],"instrumentId":"GOOGL","price":139.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,44,198408000]}
18:26:44.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.88
18:26:44.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:44.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,26,44,195698000],"instrumentId":"JPM","price":164.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,44,198567000]}
18:26:44.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $164.88
18:26:44.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:44.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,26,44,195698000],"instrumentId":"BAC","price":32.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,44,198676000]}
18:26:44.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.90
18:26:44.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:44.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,26,44,195698000],"instrumentId":"NESN","price":105.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,44,198798000]}
18:26:44.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.11
18:26:44.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:44.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,26,44,195698000],"instrumentId":"ASML","price":718.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,44,198923000]}
18:26:44.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $718.52
18:26:44.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:49.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,26,49,196766000],"instrumentId":"AAPL","price":178.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,49,196899000]}
18:26:49.209 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_9dce99623cd5","remainingQuantity":344,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_9dce99623cd5","instrumentId":"AAPL","accountId":"ACC004","date":[2025,5,24,18,26,49,193640000],"orderQuantity":689,"filledQuantity":345,"orderStatus":"FILLED","orderPrice":264.16,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,26,49,194271000]}
18:26:49.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.71
18:26:49.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_9dce99623cd5 (FILLED AAPL)
18:26:49.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:49.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:26:49.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,26,49,196766000],"instrumentId":"MSFT","price":420.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,49,197184000]}
18:26:49.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_2820f278e3b6","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_2820f278e3b6","instrumentId":"ASML","accountId":"ACC001","date":[2025,5,24,18,26,49,196261000],"orderQuantity":460,"filledQuantity":460,"orderStatus":"FILLED","orderPrice":46.91,"orderType":"MARKET","venue":"LSE","timestamp":[2025,5,24,18,26,49,196422000]}
18:26:49.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $420.55
18:26:49.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_2820f278e3b6 (FILLED ASML)
18:26:49.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:49.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:26:49.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,26,49,196766000],"instrumentId":"GOOGL","price":140.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,49,197389000]}
18:26:49.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.39
18:26:49.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:49.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,26,49,196766000],"instrumentId":"JPM","price":165.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,49,197600000]}
18:26:49.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.17
18:26:49.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:49.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,26,49,196766000],"instrumentId":"BAC","price":32.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,49,197801000]}
18:26:49.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.73
18:26:49.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:49.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,26,49,196766000],"instrumentId":"NESN","price":104.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,49,197983000]}
18:26:49.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.85
18:26:49.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:49.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,26,49,196766000],"instrumentId":"ASML","price":717.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,49,198189000]}
18:26:49.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $717.06
18:26:49.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:54.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,26,54,195190000],"instrumentId":"AAPL","price":178.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,54,195545000]}
18:26:54.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.31
18:26:54.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:54.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,26,54,195190000],"instrumentId":"MSFT","price":421.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,54,196855000]}
18:26:54.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $421.80
18:26:54.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:54.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,26,54,195190000],"instrumentId":"GOOGL","price":140.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,54,197374000]}
18:26:54.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.21
18:26:54.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:54.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,26,54,195190000],"instrumentId":"JPM","price":165.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,54,197746000]}
18:26:54.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.26
18:26:54.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:54.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,26,54,195190000],"instrumentId":"BAC","price":32.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,54,197954000]}
18:26:54.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.90
18:26:54.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:54.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,26,54,195190000],"instrumentId":"NESN","price":105.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,54,198170000]}
18:26:54.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.02
18:26:54.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:54.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,26,54,195190000],"instrumentId":"ASML","price":714.30,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,54,198360000]}
18:26:54.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $714.30
18:26:54.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:59.207 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_8121d34f7ebc","remainingQuantity":85,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_8121d34f7ebc","instrumentId":"MSFT","accountId":"ACC002","date":[2025,5,24,18,26,59,194606000],"orderQuantity":85,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":278.89,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,26,59,196168000]}
18:26:59.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,26,59,199594000],"instrumentId":"AAPL","price":178.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,59,199671000]}
18:26:59.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.02
18:26:59.209 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_8121d34f7ebc (CREATED MSFT)
18:26:59.209 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:26:59.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:59.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,26,59,199594000],"instrumentId":"MSFT","price":420.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,59,199907000]}
18:26:59.209 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_91848881dfda","remainingQuantity":265,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_91848881dfda","instrumentId":"MSFT","accountId":"ACC003","date":[2025,5,24,18,26,59,198477000],"orderQuantity":265,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":464.11,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,26,59,198655000]}
18:26:59.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $420.16
18:26:59.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:59.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,26,59,199594000],"instrumentId":"GOOGL","price":139.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,59,200005000]}
18:26:59.210 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_91848881dfda (CREATED MSFT)
18:26:59.210 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:26:59.210 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_e741e6d25ede","remainingQuantity":22,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_e741e6d25ede","instrumentId":"ASML","accountId":"ACC001","date":[2025,5,24,18,26,59,198857000],"orderQuantity":22,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":483.72,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,26,59,198916000]}
18:26:59.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.80
18:26:59.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:59.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,26,59,199594000],"instrumentId":"JPM","price":165.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,59,200129000]}
18:26:59.211 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_e741e6d25ede (CREATED ASML)
18:26:59.211 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:26:59.211 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_f490782f4634","remainingQuantity":290,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_f490782f4634","instrumentId":"ASML","accountId":"ACC004","date":[2025,5,24,18,26,59,199286000],"orderQuantity":493,"filledQuantity":203,"orderStatus":"PARTIALLY_FILLED","orderPrice":59.60,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,26,59,199437000]}
18:26:59.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.00
18:26:59.212 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_f490782f4634 (PARTIALLY_FILLED ASML)
18:26:59.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:59.212 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:26:59.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,26,59,199594000],"instrumentId":"BAC","price":33.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,59,200220000]}
18:26:59.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.22
18:26:59.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:59.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,26,59,199594000],"instrumentId":"NESN","price":105.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,59,200301000]}
18:26:59.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.39
18:26:59.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:26:59.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,26,59,199594000],"instrumentId":"ASML","price":715.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,26,59,200395000]}
18:26:59.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $715.72
18:26:59.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:04.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,27,4,193578000],"instrumentId":"AAPL","price":179.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,4,193785000]}
18:27:04.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.15
18:27:04.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:04.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,27,4,193578000],"instrumentId":"MSFT","price":420.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,4,195300000]}
18:27:04.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $420.18
18:27:04.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:04.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,27,4,193578000],"instrumentId":"GOOGL","price":139.64,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,4,195584000]}
18:27:04.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.64
18:27:04.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:04.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,27,4,193578000],"instrumentId":"JPM","price":164.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,4,195725000]}
18:27:04.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $164.23
18:27:04.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:04.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,27,4,193578000],"instrumentId":"BAC","price":32.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,4,195884000]}
18:27:04.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.90
18:27:04.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:04.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,27,4,193578000],"instrumentId":"NESN","price":105.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,4,195994000]}
18:27:04.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.67
18:27:04.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:04.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,27,4,193578000],"instrumentId":"ASML","price":720.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,4,196205000]}
18:27:04.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $720.74
18:27:04.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:09.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,27,9,197412000],"instrumentId":"AAPL","price":178.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,9,197562000]}
18:27:09.212 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_25304d94c629","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_25304d94c629","instrumentId":"GOOGL","accountId":"ACC001","date":[2025,5,24,18,27,9,195096000],"orderQuantity":66,"filledQuantity":66,"orderStatus":"FILLED","orderPrice":111.31,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,27,9,195551000]}
18:27:09.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.20
18:27:09.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_25304d94c629 (FILLED GOOGL)
18:27:09.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:09.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:27:09.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,27,9,197412000],"instrumentId":"MSFT","price":420.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,9,198039000]}
18:27:09.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $420.00
18:27:09.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:09.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,27,9,197412000],"instrumentId":"GOOGL","price":139.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,9,198263000]}
18:27:09.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.39
18:27:09.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:09.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,27,9,197412000],"instrumentId":"JPM","price":164.57,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,9,198466000]}
18:27:09.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $164.57
18:27:09.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:09.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,27,9,197412000],"instrumentId":"BAC","price":33.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,9,198639000]}
18:27:09.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.00
18:27:09.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:09.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,27,9,197412000],"instrumentId":"NESN","price":105.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,9,198835000]}
18:27:09.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.54
18:27:09.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:09.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,27,9,197412000],"instrumentId":"ASML","price":720.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,9,199024000]}
18:27:09.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $720.82
18:27:09.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:14.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,27,14,195206000],"instrumentId":"AAPL","price":178.95,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,14,195450000]}
18:27:14.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.95
18:27:14.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:14.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,27,14,195206000],"instrumentId":"MSFT","price":418.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,14,196105000]}
18:27:14.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $418.24
18:27:14.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:14.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,27,14,195206000],"instrumentId":"GOOGL","price":140.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,14,196359000]}
18:27:14.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.39
18:27:14.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:14.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,27,14,195206000],"instrumentId":"JPM","price":165.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,14,196437000]}
18:27:14.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.28
18:27:14.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:14.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,27,14,195206000],"instrumentId":"BAC","price":33.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,14,196528000]}
18:27:14.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.07
18:27:14.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:14.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,27,14,195206000],"instrumentId":"NESN","price":105.99,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,14,196605000]}
18:27:14.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.99
18:27:14.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:14.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,27,14,195206000],"instrumentId":"ASML","price":722.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,14,196699000]}
18:27:14.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $722.52
18:27:14.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:19.210 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_4e5256baac51","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_4e5256baac51","instrumentId":"MSFT","accountId":"ACC003","date":[2025,5,24,18,27,19,194448000],"orderQuantity":955,"filledQuantity":955,"orderStatus":"FILLED","orderPrice":57.76,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,27,19,194751000]}
18:27:19.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,27,19,195718000],"instrumentId":"AAPL","price":179.75,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,19,195822000]}
18:27:19.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_4e5256baac51 (FILLED MSFT)
18:27:19.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.75
18:27:19.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:27:19.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:19.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,27,19,195718000],"instrumentId":"MSFT","price":406.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,19,196105000]}
18:27:19.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $406.96
18:27:19.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:19.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,27,19,195718000],"instrumentId":"GOOGL","price":139.30,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,19,196256000]}
18:27:19.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.30
18:27:19.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:19.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,27,19,195718000],"instrumentId":"JPM","price":164.81,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,19,196391000]}
18:27:19.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $164.81
18:27:19.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:19.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,27,19,195718000],"instrumentId":"BAC","price":33.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,19,196543000]}
18:27:19.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.13
18:27:19.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:19.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,27,19,195718000],"instrumentId":"NESN","price":106.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,19,196676000]}
18:27:19.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.14
18:27:19.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:19.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,27,19,195718000],"instrumentId":"ASML","price":733.35,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,19,196814000]}
18:27:19.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $733.35
18:27:19.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:24.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,27,24,195109000],"instrumentId":"AAPL","price":181.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,24,195289000]}
18:27:24.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $181.27
18:27:24.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:24.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,27,24,195109000],"instrumentId":"MSFT","price":406.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,24,195650000]}
18:27:24.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $406.17
18:27:24.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:24.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,27,24,195109000],"instrumentId":"GOOGL","price":139.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,24,195760000]}
18:27:24.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.25
18:27:24.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:24.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,27,24,195109000],"instrumentId":"JPM","price":165.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,24,195845000]}
18:27:24.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.39
18:27:24.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:24.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,27,24,195109000],"instrumentId":"BAC","price":33.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,24,195930000]}
18:27:24.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.04
18:27:24.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:24.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,27,24,195109000],"instrumentId":"NESN","price":106.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,24,196016000]}
18:27:24.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.22
18:27:24.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:27:24.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,27,24,195109000],"instrumentId":"ASML","price":738.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,27,24,196105000]}
18:27:24.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $738.76
18:27:24.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:05.925 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_53412f4c5596","remainingQuantity":75,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_53412f4c5596","instrumentId":"NESN","accountId":"ACC001","date":[2025,5,24,18,29,5,610020000],"orderQuantity":75,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":218.02,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,29,5,625119000]}
18:29:05.925 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC001","accountId":"ACC001","accountName":"Global Growth Fund","timestamp":[2025,5,24,18,29,5,554516000]}
18:29:05.942 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,29,5,908834000],"instrumentId":"AAPL","price":180.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,5,909253000]}
18:29:05.942 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"AAPL","cash":false,"instrumentId":"AAPL","instrumentName":"Apple Inc","countryOfRisk":"US","countryOfDomicile":"US","sector":"Technology","subSectors":["Consumer Electronics","Software"],"timestamp":[2025,5,24,18,29,5,554624000]}
18:29:05.942 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_53412f4c5596 (CREATED NESN)
18:29:05.942 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:29:05.942 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_4f681c969ec7","remainingQuantity":89,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_4f681c969ec7","instrumentId":"BAC","accountId":"ACC004","date":[2025,5,24,18,29,5,907119000],"orderQuantity":89,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":350.25,"orderType":"LIMIT","venue":"NYSE","timestamp":[2025,5,24,18,29,5,907269000]}
18:29:05.942 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC001
18:29:05.942 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:29:05.943 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC002","accountId":"ACC002","accountName":"US Value Strategy","timestamp":[2025,5,24,18,29,5,554532000]}
18:29:05.945 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_4f681c969ec7 (CREATED BAC)
18:29:05.945 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: AAPL
18:29:05.945 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $180.09
18:29:05.945 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:05.945 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC002
18:29:05.945 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:29:05.945 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:29:05.945 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:29:05.945 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"MSFT","cash":false,"instrumentId":"MSFT","instrumentName":"Microsoft Corp","countryOfRisk":"US","countryOfDomicile":"US","sector":"Technology","subSectors":["Software","Cloud Computing"],"timestamp":[2025,5,24,18,29,5,554629000]}
18:29:05.945 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_a348c63bc573","remainingQuantity":596,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_a348c63bc573","instrumentId":"BAC","accountId":"ACC002","date":[2025,5,24,18,29,5,908053000],"orderQuantity":596,"filledQuantity":0,"orderStatus":"REJECTED","orderPrice":467.07,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,29,5,908141000]}
18:29:05.945 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC003","accountId":"ACC003","accountName":"Emerging Markets Equity","timestamp":[2025,5,24,18,29,5,554535000]}
18:29:05.945 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,29,5,908834000],"instrumentId":"MSFT","price":413.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,5,918275000]}
18:29:05.947 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: MSFT
18:29:05.947 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:29:05.947 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"GOOGL","cash":false,"instrumentId":"GOOGL","instrumentName":"Alphabet Inc","countryOfRisk":"US","countryOfDomicile":"US","sector":"Technology","subSectors":["Internet Services","Advertising"],"timestamp":[2025,5,24,18,29,5,554633000]}
18:29:05.948 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_a348c63bc573 (REJECTED BAC)
18:29:05.948 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:29:05.948 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: GOOGL
18:29:05.948 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:29:05.948 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC003
18:29:05.948 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_acb1c166e74b","remainingQuantity":380,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_acb1c166e74b","instrumentId":"AAPL","accountId":"ACC005","date":[2025,5,24,18,29,5,908358000],"orderQuantity":536,"filledQuantity":156,"orderStatus":"PARTIALLY_FILLED","orderPrice":314.66,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,29,5,908572000]}
18:29:05.948 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"JPM","cash":false,"instrumentId":"JPM","instrumentName":"JPMorgan Chase & Co","countryOfRisk":"US","countryOfDomicile":"US","sector":"Financials","subSectors":["Banking","Investment Banking"],"timestamp":[2025,5,24,18,29,5,554637000]}
18:29:05.948 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $413.51
18:29:05.948 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:05.948 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:29:05.948 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,29,5,908834000],"instrumentId":"GOOGL","price":140.10,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,5,918543000]}
18:29:05.948 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC004","accountId":"ACC004","accountName":"European Small Cap","timestamp":[2025,5,24,18,29,5,554539000]}
18:29:05.949 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: JPM
18:29:05.949 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC004
18:29:05.949 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_acb1c166e74b (PARTIALLY_FILLED AAPL)
18:29:05.949 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:29:05.949 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:29:05.949 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"BAC","cash":false,"instrumentId":"BAC","instrumentName":"Bank of America Corp","countryOfRisk":"US","countryOfDomicile":"US","sector":"Financials","subSectors":["Banking","Retail Banking"],"timestamp":[2025,5,24,18,29,5,554639000]}
18:29:05.949 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.10
18:29:05.949 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:05.949 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:29:05.949 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC005","accountId":"ACC005","accountName":"Technology Innovation Fund","timestamp":[2025,5,24,18,29,5,554541000]}
18:29:05.949 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,29,5,908834000],"instrumentId":"JPM","price":165.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,5,918744000]}
18:29:05.950 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: BAC
18:29:05.950 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:29:05.950 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC005
18:29:05.950 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:29:05.950 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.04
18:29:05.950 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"NESN","cash":false,"instrumentId":"NESN","instrumentName":"Nestle SA","countryOfRisk":"CH","countryOfDomicile":"CH","sector":"Consumer Staples","subSectors":["Food Products","Beverages"],"timestamp":[2025,5,24,18,29,5,554643000]}
18:29:05.950 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:05.950 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,29,5,908834000],"instrumentId":"BAC","price":32.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,5,918921000]}
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: NESN
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.87
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"ASML","cash":false,"instrumentId":"ASML","instrumentName":"ASML Holding NV","countryOfRisk":"NL","countryOfDomicile":"NL","sector":"Technology","subSectors":["Semiconductors","Manufacturing Equipment"],"timestamp":[2025,5,24,18,29,5,554646000]}
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,29,5,908834000],"instrumentId":"NESN","price":105.65,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,5,919088000]}
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: ASML
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"USD","cash":true,"instrumentId":"USD","instrumentName":"US Dollar Cash","countryOfRisk":"US","countryOfDomicile":"US","sector":"Cash","subSectors":["Currency"],"timestamp":[2025,5,24,18,29,5,554649000]}
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.65
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,29,5,908834000],"instrumentId":"ASML","price":726.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,5,919285000]}
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: USD
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:29:05.951 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"EUR","cash":true,"instrumentId":"EUR","instrumentName":"Euro Cash","countryOfRisk":"EU","countryOfDomicile":"EU","sector":"Cash","subSectors":["Currency"],"timestamp":[2025,5,24,18,29,5,554651000]}
18:29:05.952 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $726.09
18:29:05.952 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:05.953 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: EUR
18:29:05.953 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:29:05.953 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"GBP","cash":true,"instrumentId":"GBP","instrumentName":"British Pound Cash","countryOfRisk":"GB","countryOfDomicile":"GB","sector":"Cash","subSectors":["Currency"],"timestamp":[2025,5,24,18,29,5,554654000]}
18:29:05.953 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: GBP
18:29:05.953 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:29:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,29,10,614242000],"instrumentId":"AAPL","price":179.99,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,10,614780000]}
18:29:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.99
18:29:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,29,10,614242000],"instrumentId":"MSFT","price":413.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,10,616986000]}
18:29:10.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $413.02
18:29:10.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:10.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,29,10,614242000],"instrumentId":"GOOGL","price":141.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,10,617579000]}
18:29:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.42
18:29:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,29,10,614242000],"instrumentId":"JPM","price":165.99,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,10,617979000]}
18:29:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.99
18:29:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,29,10,614242000],"instrumentId":"BAC","price":33.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,10,618363000]}
18:29:10.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.79
18:29:10.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:10.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,29,10,614242000],"instrumentId":"NESN","price":103.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,10,619199000]}
18:29:10.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.73
18:29:10.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:10.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,29,10,614242000],"instrumentId":"ASML","price":724.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,10,619681000]}
18:29:10.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $724.00
18:29:10.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:15.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,29,15,611073000],"instrumentId":"AAPL","price":180.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,15,611316000]}
18:29:15.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $180.39
18:29:15.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:15.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,29,15,611073000],"instrumentId":"MSFT","price":415.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,15,612893000]}
18:29:15.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.00
18:29:15.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:15.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,29,15,611073000],"instrumentId":"GOOGL","price":141.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,15,613261000]}
18:29:15.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.39
18:29:15.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:15.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,29,15,611073000],"instrumentId":"JPM","price":166.30,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,15,613606000]}
18:29:15.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.30
18:29:15.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:15.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,29,15,611073000],"instrumentId":"BAC","price":33.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,15,613911000]}
18:29:15.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.71
18:29:15.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:15.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,29,15,611073000],"instrumentId":"NESN","price":103.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,15,614220000]}
18:29:15.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.96
18:29:15.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:15.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,29,15,611073000],"instrumentId":"ASML","price":723.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,15,614578000]}
18:29:15.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $723.39
18:29:15.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:19.260 [http-nio-8080-exec-4] DEBUG c.v.v.c.ViewServerController - API request: GET /api/stats
18:29:20.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,29,20,613829000],"instrumentId":"AAPL","price":180.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,20,614051000]}
18:29:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $180.13
18:29:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,29,20,613829000],"instrumentId":"MSFT","price":416.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,20,614936000]}
18:29:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $416.90
18:29:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,29,20,613829000],"instrumentId":"GOOGL","price":142.45,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,20,615330000]}
18:29:20.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $142.45
18:29:20.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:20.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,29,20,613829000],"instrumentId":"JPM","price":166.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,20,615655000]}
18:29:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.61
18:29:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,29,20,613829000],"instrumentId":"BAC","price":33.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,20,615961000]}
18:29:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.63
18:29:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,29,20,613829000],"instrumentId":"NESN","price":103.84,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,20,616273000]}
18:29:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.84
18:29:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,29,20,613829000],"instrumentId":"ASML","price":729.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,20,616563000]}
18:29:20.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $729.20
18:29:20.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,29,25,615206000],"instrumentId":"AAPL","price":180.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,25,615306000]}
18:29:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_db96b552e7eb","remainingQuantity":52,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_db96b552e7eb","instrumentId":"JPM","accountId":"ACC001","date":[2025,5,24,18,29,25,613839000],"orderQuantity":416,"filledQuantity":364,"orderStatus":"PARTIALLY_FILLED","orderPrice":65.48,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,29,25,614234000]}
18:29:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $180.94
18:29:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_db96b552e7eb (PARTIALLY_FILLED JPM)
18:29:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:29:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,29,25,615206000],"instrumentId":"MSFT","price":417.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,25,615639000]}
18:29:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $417.79
18:29:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,29,25,615206000],"instrumentId":"GOOGL","price":141.99,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,25,615860000]}
18:29:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.99
18:29:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,29,25,615206000],"instrumentId":"JPM","price":166.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,25,616077000]}
18:29:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.55
18:29:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,29,25,615206000],"instrumentId":"BAC","price":33.77,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,25,616311000]}
18:29:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.77
18:29:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,29,25,615206000],"instrumentId":"NESN","price":103.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,25,616512000]}
18:29:25.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.73
18:29:25.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:25.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,29,25,615206000],"instrumentId":"ASML","price":731.10,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,25,616720000]}
18:29:25.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $731.10
18:29:25.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:26.026 [http-nio-8080-exec-6] DEBUG c.v.v.c.ViewServerController - API request: GET /api/accounts
18:29:26.038 [http-nio-8080-exec-8] DEBUG c.v.v.c.ViewServerController - API request: GET /api/instruments
18:29:26.053 [http-nio-8080-exec-10] DEBUG c.v.v.c.ViewServerController - API request: GET /api/prices
18:29:30.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,29,30,613935000],"instrumentId":"AAPL","price":182.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,30,614237000]}
18:29:30.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $182.36
18:29:30.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:30.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,29,30,613935000],"instrumentId":"MSFT","price":416.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,30,615757000]}
18:29:30.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $416.48
18:29:30.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:30.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,29,30,613935000],"instrumentId":"GOOGL","price":141.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,30,616626000]}
18:29:30.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.51
18:29:30.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:30.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,29,30,613935000],"instrumentId":"JPM","price":166.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,30,617186000]}
18:29:30.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.54
18:29:30.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:30.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,29,30,613935000],"instrumentId":"BAC","price":33.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,30,617593000]}
18:29:30.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.73
18:29:30.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:30.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,29,30,613935000],"instrumentId":"NESN","price":103.75,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,30,617952000]}
18:29:30.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.75
18:29:30.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:30.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,29,30,613935000],"instrumentId":"ASML","price":736.62,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,30,618308000]}
18:29:30.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $736.62
18:29:30.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:31.482 [http-nio-8080-exec-2] DEBUG c.v.v.c.ViewServerController - API request: GET /api/orders
18:29:31.536 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.] with root cause
java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:183)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:160)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:106)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:218)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:171)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
18:29:35.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,29,35,614544000],"instrumentId":"AAPL","price":182.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,35,614620000]}
18:29:35.626 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_d3c9b054bfaa","remainingQuantity":49,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_d3c9b054bfaa","instrumentId":"MSFT","accountId":"ACC002","date":[2025,5,24,18,29,35,613310000],"orderQuantity":49,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":345.73,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,29,35,613528000]}
18:29:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $182.44
18:29:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_d3c9b054bfaa (CREATED MSFT)
18:29:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:29:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,29,35,614544000],"instrumentId":"MSFT","price":414.41,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,35,614813000]}
18:29:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_ec97c4864b40","remainingQuantity":4,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_ec97c4864b40","instrumentId":"GOOGL","accountId":"ACC004","date":[2025,5,24,18,29,35,614002000],"orderQuantity":4,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":345.04,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,29,35,614088000]}
18:29:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $414.41
18:29:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_ec97c4864b40 (CREATED GOOGL)
18:29:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:29:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,29,35,614544000],"instrumentId":"GOOGL","price":140.62,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,35,614968000]}
18:29:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_9b75cdc5583e","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_9b75cdc5583e","instrumentId":"NESN","accountId":"ACC004","date":[2025,5,24,18,29,35,614315000],"orderQuantity":852,"filledQuantity":852,"orderStatus":"PARTIALLY_FILLED","orderPrice":481.23,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,29,35,614395000]}
18:29:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_9b75cdc5583e (PARTIALLY_FILLED NESN)
18:29:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.62
18:29:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:29:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,29,35,614544000],"instrumentId":"JPM","price":165.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,35,615109000]}
18:29:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.46
18:29:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,29,35,614544000],"instrumentId":"BAC","price":33.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,35,615268000]}
18:29:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.71
18:29:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,29,35,614544000],"instrumentId":"NESN","price":103.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,35,615408000]}
18:29:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.25
18:29:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,29,35,614544000],"instrumentId":"ASML","price":730.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,35,615552000]}
18:29:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $730.23
18:29:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:36.310 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.] with root cause
java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:183)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:160)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:106)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:218)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:171)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
18:29:40.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,29,40,611234000],"instrumentId":"AAPL","price":183.35,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,40,611487000]}
18:29:40.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $183.35
18:29:40.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:40.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,29,40,611234000],"instrumentId":"MSFT","price":414.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,40,612277000]}
18:29:40.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $414.80
18:29:40.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:40.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,29,40,611234000],"instrumentId":"GOOGL","price":140.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,40,612503000]}
18:29:40.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.71
18:29:40.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:40.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,29,40,611234000],"instrumentId":"JPM","price":164.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,40,612674000]}
18:29:40.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $164.82
18:29:40.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:40.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,29,40,611234000],"instrumentId":"BAC","price":33.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,40,612853000]}
18:29:40.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.76
18:29:40.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:40.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,29,40,611234000],"instrumentId":"NESN","price":103.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,40,613018000]}
18:29:40.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.72
18:29:40.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:40.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,29,40,611234000],"instrumentId":"ASML","price":732.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,40,613189000]}
18:29:40.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $732.55
18:29:40.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:45.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,29,45,616019000],"instrumentId":"AAPL","price":183.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,45,616122000]}
18:29:45.626 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_806246824b7a","remainingQuantity":19,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_806246824b7a","instrumentId":"AAPL","accountId":"ACC004","date":[2025,5,24,18,29,45,613938000],"orderQuantity":22,"filledQuantity":3,"orderStatus":"PARTIALLY_FILLED","orderPrice":331.13,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,29,45,614223000]}
18:29:45.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_806246824b7a (PARTIALLY_FILLED AAPL)
18:29:45.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $183.12
18:29:45.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:29:45.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:45.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,29,45,616019000],"instrumentId":"MSFT","price":416.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,45,616457000]}
18:29:45.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_44bc99418f97","remainingQuantity":8,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_44bc99418f97","instrumentId":"JPM","accountId":"ACC002","date":[2025,5,24,18,29,45,615444000],"orderQuantity":14,"filledQuantity":6,"orderStatus":"PARTIALLY_FILLED","orderPrice":456.46,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,29,45,615608000]}
18:29:45.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $416.01
18:29:45.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:45.630 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_44bc99418f97 (PARTIALLY_FILLED JPM)
18:29:45.630 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:29:45.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,29,45,616019000],"instrumentId":"GOOGL","price":141.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,45,616665000]}
18:29:45.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.50
18:29:45.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:45.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,29,45,616019000],"instrumentId":"JPM","price":165.93,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,45,616875000]}
18:29:45.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.93
18:29:45.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:45.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,29,45,616019000],"instrumentId":"BAC","price":33.84,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,45,617086000]}
18:29:45.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.84
18:29:45.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:45.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,29,45,616019000],"instrumentId":"NESN","price":104.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,45,617298000]}
18:29:45.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.24
18:29:45.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:45.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,29,45,616019000],"instrumentId":"ASML","price":731.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,45,617510000]}
18:29:45.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $731.24
18:29:45.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:50.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,29,50,610624000],"instrumentId":"AAPL","price":183.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,50,610852000]}
18:29:50.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $183.69
18:29:50.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:50.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,29,50,610624000],"instrumentId":"MSFT","price":414.75,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,50,611649000]}
18:29:50.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $414.75
18:29:50.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:50.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,29,50,610624000],"instrumentId":"GOOGL","price":141.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,50,612178000]}
18:29:50.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.92
18:29:50.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:50.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,29,50,610624000],"instrumentId":"JPM","price":165.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,50,612397000]}
18:29:50.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.78
18:29:50.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:50.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,29,50,610624000],"instrumentId":"BAC","price":34.35,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,50,612542000]}
18:29:50.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.35
18:29:50.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:50.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,29,50,610624000],"instrumentId":"NESN","price":104.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,50,612716000]}
18:29:50.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.38
18:29:50.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:50.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,29,50,610624000],"instrumentId":"ASML","price":724.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,50,612917000]}
18:29:50.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $724.02
18:29:50.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:55.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,29,55,614151000],"instrumentId":"AAPL","price":184.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,55,614522000]}
18:29:55.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $184.43
18:29:55.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:55.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,29,55,614151000],"instrumentId":"MSFT","price":412.41,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,55,616759000]}
18:29:55.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $412.41
18:29:55.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:55.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,29,55,614151000],"instrumentId":"GOOGL","price":141.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,55,617207000]}
18:29:55.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.94
18:29:55.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:55.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,29,55,614151000],"instrumentId":"JPM","price":166.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,55,617571000]}
18:29:55.639 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.23
18:29:55.639 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:55.639 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,29,55,614151000],"instrumentId":"BAC","price":34.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,55,617933000]}
18:29:55.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.52
18:29:55.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:55.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,29,55,614151000],"instrumentId":"NESN","price":104.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,55,618255000]}
18:29:55.642 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.73
18:29:55.642 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:29:55.642 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,29,55,614151000],"instrumentId":"ASML","price":724.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,29,55,618543000]}
18:29:55.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $724.97
18:29:55.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:00.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,30,0,613930000],"instrumentId":"AAPL","price":184.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,0,614359000]}
18:30:00.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $184.98
18:30:00.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:00.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,30,0,613930000],"instrumentId":"MSFT","price":413.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,0,615595000]}
18:30:00.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $413.26
18:30:00.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:00.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,30,0,613930000],"instrumentId":"GOOGL","price":142.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,0,616053000]}
18:30:00.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $142.28
18:30:00.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:00.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,30,0,613930000],"instrumentId":"JPM","price":166.68,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,0,616372000]}
18:30:00.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.68
18:30:00.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:00.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,30,0,613930000],"instrumentId":"BAC","price":34.64,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,0,616701000]}
18:30:00.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.64
18:30:00.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:00.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,30,0,613930000],"instrumentId":"NESN","price":104.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,0,616981000]}
18:30:00.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.03
18:30:00.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:00.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,30,0,613930000],"instrumentId":"ASML","price":722.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,0,617305000]}
18:30:00.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $722.96
18:30:00.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:05.621 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,30,5,612850000],"instrumentId":"AAPL","price":184.99,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,5,613052000]}
18:30:05.621 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_f376d765e616","remainingQuantity":75,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_f376d765e616","instrumentId":"AAPL","accountId":"ACC004","date":[2025,5,24,18,30,5,609883000],"orderQuantity":75,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":399.86,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,30,5,610420000]}
18:30:05.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $184.99
18:30:05.623 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_f376d765e616 (CREATED AAPL)
18:30:05.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:05.623 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:30:05.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,30,5,612850000],"instrumentId":"MSFT","price":415.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,5,613456000]}
18:30:05.623 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_a1bab3bf9e6b","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_a1bab3bf9e6b","instrumentId":"ASML","accountId":"ACC004","date":[2025,5,24,18,30,5,611792000],"orderQuantity":27,"filledQuantity":27,"orderStatus":"PARTIALLY_FILLED","orderPrice":95.94,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,30,5,611956000]}
18:30:05.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.43
18:30:05.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:05.623 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_a1bab3bf9e6b (PARTIALLY_FILLED ASML)
18:30:05.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,30,5,612850000],"instrumentId":"GOOGL","price":143.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,5,613703000]}
18:30:05.623 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:30:05.623 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_57c9ac49377a","remainingQuantity":33,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_57c9ac49377a","instrumentId":"NESN","accountId":"ACC002","date":[2025,5,24,18,30,5,612374000],"orderQuantity":52,"filledQuantity":19,"orderStatus":"PARTIALLY_FILLED","orderPrice":466.08,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,30,5,612526000]}
18:30:05.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $143.15
18:30:05.624 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_57c9ac49377a (PARTIALLY_FILLED NESN)
18:30:05.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:05.624 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:30:05.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,30,5,612850000],"instrumentId":"JPM","price":166.84,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,5,613947000]}
18:30:05.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.84
18:30:05.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:05.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,30,5,612850000],"instrumentId":"BAC","price":34.45,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,5,614132000]}
18:30:05.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.45
18:30:05.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:05.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,30,5,612850000],"instrumentId":"NESN","price":104.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,5,614330000]}
18:30:05.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.14
18:30:05.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:05.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,30,5,612850000],"instrumentId":"ASML","price":727.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,5,614531000]}
18:30:05.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $727.52
18:30:05.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:06.476 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.] with root cause
java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:183)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:160)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:106)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:218)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:171)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
18:30:06.486 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.] with root cause
java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:183)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:160)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:106)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:218)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:171)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
18:30:10.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,30,10,610522000],"instrumentId":"AAPL","price":186.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,10,611150000]}
18:30:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $186.56
18:30:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,30,10,610522000],"instrumentId":"MSFT","price":417.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,10,612930000]}
18:30:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $417.67
18:30:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,30,10,610522000],"instrumentId":"GOOGL","price":144.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,10,613452000]}
18:30:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.17
18:30:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,30,10,610522000],"instrumentId":"JPM","price":166.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,10,613732000]}
18:30:10.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.25
18:30:10.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:10.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,30,10,610522000],"instrumentId":"BAC","price":34.33,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,10,614021000]}
18:30:10.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.33
18:30:10.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:10.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,30,10,610522000],"instrumentId":"NESN","price":105.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,10,614265000]}
18:30:10.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.71
18:30:10.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:10.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,30,10,610522000],"instrumentId":"ASML","price":729.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,10,614528000]}
18:30:10.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $729.21
18:30:10.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:15.452 [http-nio-8080-exec-8] DEBUG c.v.v.c.ViewServerController - API request: GET /api/stats
18:30:15.465 [http-nio-8080-exec-10] DEBUG c.v.v.c.ViewServerController - API request: GET /api/accounts
18:30:15.477 [http-nio-8080-exec-2] DEBUG c.v.v.c.ViewServerController - API request: GET /api/instruments
18:30:15.491 [http-nio-8080-exec-4] DEBUG c.v.v.c.ViewServerController - API request: GET /api/prices
18:30:15.503 [http-nio-8080-exec-6] DEBUG c.v.v.c.ViewServerController - API request: GET /api/orders
18:30:15.563 [http-nio-8080-exec-8] DEBUG c.v.v.c.ViewServerController - API request: GET /api/stats
18:30:15.621 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,30,15,613141000],"instrumentId":"AAPL","price":187.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,15,613261000]}
18:30:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $187.25
18:30:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,30,15,613141000],"instrumentId":"MSFT","price":415.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,15,614332000]}
18:30:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.78
18:30:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,30,15,613141000],"instrumentId":"GOOGL","price":144.60,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,15,614464000]}
18:30:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.60
18:30:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,30,15,613141000],"instrumentId":"JPM","price":166.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,15,614556000]}
18:30:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.54
18:30:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,30,15,613141000],"instrumentId":"BAC","price":34.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,15,614639000]}
18:30:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.18
18:30:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,30,15,613141000],"instrumentId":"NESN","price":105.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,15,614732000]}
18:30:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.88
18:30:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,30,15,613141000],"instrumentId":"ASML","price":726.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,15,614810000]}
18:30:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $726.78
18:30:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:20.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,30,20,614162000],"instrumentId":"AAPL","price":187.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,20,614523000]}
18:30:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $187.01
18:30:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:20.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,30,20,614162000],"instrumentId":"MSFT","price":414.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,20,616244000]}
18:30:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $414.97
18:30:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,30,20,614162000],"instrumentId":"GOOGL","price":144.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,20,616941000]}
18:30:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.72
18:30:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,30,20,614162000],"instrumentId":"JPM","price":165.33,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,20,617500000]}
18:30:20.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.33
18:30:20.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:20.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,30,20,614162000],"instrumentId":"BAC","price":34.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,20,617930000]}
18:30:20.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.02
18:30:20.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:20.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,30,20,614162000],"instrumentId":"NESN","price":105.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,20,618207000]}
18:30:20.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.90
18:30:20.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:20.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,30,20,614162000],"instrumentId":"ASML","price":730.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,20,618439000]}
18:30:20.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $730.46
18:30:20.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:21.379 [http-nio-8080-exec-10] DEBUG c.v.v.c.ViewServerController - API request: GET /api/accounts
18:30:21.392 [http-nio-8080-exec-2] DEBUG c.v.v.c.ViewServerController - API request: GET /api/instruments
18:30:21.405 [http-nio-8080-exec-4] DEBUG c.v.v.c.ViewServerController - API request: GET /api/prices
18:30:21.419 [http-nio-8080-exec-6] DEBUG c.v.v.c.ViewServerController - API request: GET /api/orders
18:30:25.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,30,25,614901000],"instrumentId":"AAPL","price":188.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,25,615024000]}
18:30:25.625 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_ab685eff9d2b","remainingQuantity":2,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_ab685eff9d2b","instrumentId":"BAC","accountId":"ACC003","date":[2025,5,24,18,30,25,613632000],"orderQuantity":2,"filledQuantity":0,"orderStatus":"FILLED","orderPrice":469.62,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,30,25,614015000]}
18:30:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $188.01
18:30:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_ab685eff9d2b (FILLED BAC)
18:30:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:30:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,30,25,614901000],"instrumentId":"MSFT","price":417.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,25,615380000]}
18:30:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $417.71
18:30:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,30,25,614901000],"instrumentId":"GOOGL","price":144.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,25,615598000]}
18:30:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.51
18:30:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,30,25,614901000],"instrumentId":"JPM","price":166.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,25,615773000]}
18:30:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.61
18:30:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,30,25,614901000],"instrumentId":"BAC","price":34.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,25,615979000]}
18:30:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.05
18:30:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,30,25,614901000],"instrumentId":"NESN","price":106.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,25,616192000]}
18:30:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.39
18:30:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,30,25,614901000],"instrumentId":"ASML","price":733.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,25,616356000]}
18:30:25.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $733.02
18:30:25.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,30,30,614056000],"instrumentId":"AAPL","price":188.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,30,614228000]}
18:30:30.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $188.05
18:30:30.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:30.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,30,30,614056000],"instrumentId":"MSFT","price":415.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,30,614795000]}
18:30:30.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.52
18:30:30.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:30.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,30,30,614056000],"instrumentId":"GOOGL","price":144.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,30,614983000]}
18:30:30.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.11
18:30:30.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:30.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,30,30,614056000],"instrumentId":"JPM","price":165.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,30,615250000]}
18:30:30.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.71
18:30:30.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:30.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,30,30,614056000],"instrumentId":"BAC","price":33.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,30,615374000]}
18:30:30.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.98
18:30:30.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:30.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,30,30,614056000],"instrumentId":"NESN","price":107.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,30,615491000]}
18:30:30.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $107.37
18:30:30.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:30.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,30,30,614056000],"instrumentId":"ASML","price":732.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,30,615601000]}
18:30:30.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $732.03
18:30:30.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:35.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,30,35,615451000],"instrumentId":"AAPL","price":187.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,35,615533000]}
18:30:35.626 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_9864586781ea","remainingQuantity":481,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_9864586781ea","instrumentId":"GOOGL","accountId":"ACC003","date":[2025,5,24,18,30,35,614085000],"orderQuantity":481,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":256.27,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,30,35,614304000]}
18:30:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $187.00
18:30:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_9864586781ea (CREATED GOOGL)
18:30:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:30:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,30,35,615451000],"instrumentId":"MSFT","price":415.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,35,615796000]}
18:30:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_3f6c55ec26e0","remainingQuantity":66,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_3f6c55ec26e0","instrumentId":"BAC","accountId":"ACC003","date":[2025,5,24,18,30,35,614832000],"orderQuantity":66,"filledQuantity":0,"orderStatus":"PARTIALLY_FILLED","orderPrice":313.79,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,30,35,614946000]}
18:30:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.27
18:30:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_3f6c55ec26e0 (PARTIALLY_FILLED BAC)
18:30:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:30:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,30,35,615451000],"instrumentId":"GOOGL","price":144.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,35,617278000]}
18:30:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_34f9c555bb89","remainingQuantity":209,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_34f9c555bb89","instrumentId":"BAC","accountId":"ACC001","date":[2025,5,24,18,30,35,615134000],"orderQuantity":209,"filledQuantity":0,"orderStatus":"PARTIALLY_FILLED","orderPrice":341.87,"orderType":"LIMIT","venue":"EURONEXT","timestamp":[2025,5,24,18,30,35,615240000]}
18:30:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.55
18:30:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_34f9c555bb89 (PARTIALLY_FILLED BAC)
18:30:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:30:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,30,35,615451000],"instrumentId":"JPM","price":165.99,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,35,617573000]}
18:30:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.99
18:30:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,30,35,615451000],"instrumentId":"BAC","price":34.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,35,617729000]}
18:30:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.00
18:30:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,30,35,615451000],"instrumentId":"NESN","price":108.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,35,617860000]}
18:30:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.07
18:30:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,30,35,615451000],"instrumentId":"ASML","price":732.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,35,617996000]}
18:30:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $732.06
18:30:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:40.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,30,40,614786000],"instrumentId":"AAPL","price":186.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,40,615404000]}
18:30:40.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $186.71
18:30:40.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:40.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,30,40,614786000],"instrumentId":"MSFT","price":413.57,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,40,617699000]}
18:30:40.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $413.57
18:30:40.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:40.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,30,40,614786000],"instrumentId":"GOOGL","price":144.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,40,618142000]}
18:30:40.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.22
18:30:40.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:40.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,30,40,614786000],"instrumentId":"JPM","price":165.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,40,618416000]}
18:30:40.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.23
18:30:40.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:40.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,30,40,614786000],"instrumentId":"BAC","price":34.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,40,618647000]}
18:30:40.639 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.06
18:30:40.639 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:40.639 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,30,40,614786000],"instrumentId":"NESN","price":107.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,40,618851000]}
18:30:40.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $107.80
18:30:40.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:40.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,30,40,614786000],"instrumentId":"ASML","price":739.33,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,40,619033000]}
18:30:40.641 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $739.33
18:30:40.641 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:45.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,30,45,616845000],"instrumentId":"AAPL","price":187.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,45,617368000]}
18:30:45.632 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_dff5c73443e5","remainingQuantity":14,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_dff5c73443e5","instrumentId":"BAC","accountId":"ACC005","date":[2025,5,24,18,30,45,614292000],"orderQuantity":46,"filledQuantity":32,"orderStatus":"FILLED","orderPrice":64.14,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,30,45,615265000]}
18:30:45.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $187.27
18:30:45.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:45.635 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_dff5c73443e5 (FILLED BAC)
18:30:45.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,30,45,616845000],"instrumentId":"MSFT","price":412.65,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,45,617995000]}
18:30:45.635 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:30:45.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $412.65
18:30:45.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:45.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,30,45,616845000],"instrumentId":"GOOGL","price":144.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,45,618357000]}
18:30:45.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.92
18:30:45.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:45.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,30,45,616845000],"instrumentId":"JPM","price":165.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,45,618612000]}
18:30:45.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.12
18:30:45.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:45.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,30,45,616845000],"instrumentId":"BAC","price":34.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,45,618858000]}
18:30:45.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.13
18:30:45.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:45.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,30,45,616845000],"instrumentId":"NESN","price":108.40,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,45,619122000]}
18:30:45.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.40
18:30:45.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:45.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,30,45,616845000],"instrumentId":"ASML","price":734.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,45,619541000]}
18:30:45.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $734.50
18:30:45.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:50.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,30,50,613696000],"instrumentId":"AAPL","price":187.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,50,614115000]}
18:30:50.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $187.52
18:30:50.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:50.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,30,50,613696000],"instrumentId":"MSFT","price":410.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,50,616244000]}
18:30:50.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $410.28
18:30:50.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:50.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,30,50,613696000],"instrumentId":"GOOGL","price":145.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,50,616803000]}
18:30:50.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $145.14
18:30:50.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:50.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,30,50,613696000],"instrumentId":"JPM","price":164.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,50,617184000]}
18:30:50.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $164.36
18:30:50.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:50.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,30,50,613696000],"instrumentId":"BAC","price":34.29,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,50,617830000]}
18:30:50.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.29
18:30:50.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:50.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,30,50,613696000],"instrumentId":"NESN","price":107.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,50,618158000]}
18:30:50.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $107.37
18:30:50.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:50.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,30,50,613696000],"instrumentId":"ASML","price":737.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,50,618406000]}
18:30:50.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $737.34
18:30:50.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:55.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,30,55,614408000],"instrumentId":"AAPL","price":187.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,55,614711000]}
18:30:55.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $187.17
18:30:55.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:55.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,30,55,614408000],"instrumentId":"MSFT","price":410.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,55,616044000]}
18:30:55.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $410.61
18:30:55.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:55.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,30,55,614408000],"instrumentId":"GOOGL","price":145.59,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,55,616547000]}
18:30:55.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $145.59
18:30:55.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:55.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,30,55,614408000],"instrumentId":"JPM","price":164.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,55,616910000]}
18:30:55.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $164.96
18:30:55.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:55.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,30,55,614408000],"instrumentId":"BAC","price":34.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,55,617343000]}
18:30:55.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.36
18:30:55.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:55.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,30,55,614408000],"instrumentId":"NESN","price":107.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,55,617809000]}
18:30:55.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $107.87
18:30:55.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:30:55.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,30,55,614408000],"instrumentId":"ASML","price":732.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,30,55,618111000]}
18:30:55.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $732.87
18:30:55.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:00.645 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,31,0,615567000],"instrumentId":"AAPL","price":192.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,0,616932000]}
18:31:00.649 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $192.04
18:31:00.649 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:00.649 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,31,0,615567000],"instrumentId":"MSFT","price":407.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,0,620383000]}
18:31:00.650 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $407.23
18:31:00.650 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:00.650 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,31,0,615567000],"instrumentId":"GOOGL","price":145.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,0,620793000]}
18:31:00.650 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $145.34
18:31:00.650 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:00.650 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,31,0,615567000],"instrumentId":"JPM","price":165.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,0,620988000]}
18:31:00.651 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.58
18:31:00.651 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:00.651 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,31,0,615567000],"instrumentId":"BAC","price":34.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,0,621161000]}
18:31:00.652 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.21
18:31:00.652 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:00.652 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,31,0,615567000],"instrumentId":"NESN","price":107.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,0,621314000]}
18:31:00.652 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $107.90
18:31:00.652 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:00.652 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,31,0,615567000],"instrumentId":"ASML","price":731.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,0,621487000]}
18:31:00.653 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $731.09
18:31:00.653 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:05.641 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,31,5,630466000],"instrumentId":"AAPL","price":192.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,5,630521000]}
18:31:05.641 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_385ab332a166","remainingQuantity":33,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_385ab332a166","instrumentId":"GOOGL","accountId":"ACC003","date":[2025,5,24,18,31,5,629462000],"orderQuantity":33,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":213.43,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,31,5,629669000]}
18:31:05.641 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received intraday cash data: {"kafkaKey":"2025-05-24#USD#ACC005","date":[2025,5,24,18,31,5,614300000],"instrumentId":"USD","accountId":"ACC005","quantity":-43747.68,"movementType":"TRADE_SETTLEMENT","referenceId":"TRD_1748107865617_209","timestamp":[2025,5,24,18,31,5,621285000]}
18:31:05.642 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $192.27
18:31:05.642 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:05.643 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached cash movement: -43747.68 USD for account ACC005 (TRADE_SETTLEMENT)
18:31:05.643 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached intraday cash data
18:31:05.643 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_385ab332a166 (CREATED GOOGL)
18:31:05.643 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:31:05.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,31,5,630466000],"instrumentId":"MSFT","price":408.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,5,630671000]}
18:31:05.643 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_11cebfa7c168","remainingQuantity":998,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_11cebfa7c168","instrumentId":"AAPL","accountId":"ACC004","date":[2025,5,24,18,31,5,629918000],"orderQuantity":998,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":281.64,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,31,5,629997000]}
18:31:05.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $408.34
18:31:05.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:05.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,31,5,630466000],"instrumentId":"GOOGL","price":144.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,5,630771000]}
18:31:05.643 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_11cebfa7c168 (CREATED AAPL)
18:31:05.643 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:31:05.643 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_d438a77ae014","remainingQuantity":720,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_d438a77ae014","instrumentId":"JPM","accountId":"ACC005","date":[2025,5,24,18,31,5,630107000],"orderQuantity":720,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":309.00,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,31,5,630164000]}
18:31:05.644 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.86
18:31:05.644 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:05.644 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_d438a77ae014 (CREATED JPM)
18:31:05.644 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,31,5,630466000],"instrumentId":"JPM","price":165.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,5,630881000]}
18:31:05.644 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:31:05.644 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_310c504ebb30","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_310c504ebb30","instrumentId":"BAC","accountId":"ACC005","date":[2025,5,24,18,31,5,630278000],"orderQuantity":69,"filledQuantity":69,"orderStatus":"FILLED","orderPrice":166.87,"orderType":"LIMIT","venue":"NYSE","timestamp":[2025,5,24,18,31,5,630334000]}
18:31:05.644 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_310c504ebb30 (FILLED BAC)
18:31:05.644 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:31:05.644 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.78
18:31:05.644 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:05.644 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,31,5,630466000],"instrumentId":"BAC","price":34.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,5,630983000]}
18:31:05.645 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.14
18:31:05.645 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:05.645 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,31,5,630466000],"instrumentId":"NESN","price":108.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,5,631084000]}
18:31:05.645 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.07
18:31:05.645 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:05.645 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,31,5,630466000],"instrumentId":"ASML","price":726.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,5,631179000]}
18:31:05.645 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $726.71
18:31:05.645 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:10.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,31,10,614218000],"instrumentId":"AAPL","price":190.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,10,614323000]}
18:31:10.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $190.85
18:31:10.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:10.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,31,10,614218000],"instrumentId":"MSFT","price":404.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,10,615485000]}
18:31:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $404.78
18:31:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,31,10,614218000],"instrumentId":"GOOGL","price":145.57,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,10,615589000]}
18:31:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $145.57
18:31:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,31,10,614218000],"instrumentId":"JPM","price":165.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,10,615666000]}
18:31:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.86
18:31:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,31,10,614218000],"instrumentId":"BAC","price":34.19,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,10,615727000]}
18:31:10.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.19
18:31:10.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:10.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,31,10,614218000],"instrumentId":"NESN","price":108.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,10,615802000]}
18:31:10.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.79
18:31:10.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:10.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,31,10,614218000],"instrumentId":"ASML","price":723.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,10,615869000]}
18:31:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $723.36
18:31:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:13.593 [http-nio-8080-exec-8] DEBUG c.v.v.c.ViewServerController - API request: GET /api/stats
18:31:15.621 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,31,15,612089000],"instrumentId":"AAPL","price":191.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,15,612138000]}
18:31:15.621 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_3be063991ade","remainingQuantity":8,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_3be063991ade","instrumentId":"NESN","accountId":"ACC003","date":[2025,5,24,18,31,15,610966000],"orderQuantity":13,"filledQuantity":5,"orderStatus":"FILLED","orderPrice":497.86,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,31,15,611147000]}
18:31:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $191.37
18:31:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_3be063991ade (FILLED NESN)
18:31:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:31:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,31,15,612089000],"instrumentId":"MSFT","price":406.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,15,612296000]}
18:31:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_8644427a0a50","remainingQuantity":11,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_8644427a0a50","instrumentId":"ASML","accountId":"ACC001","date":[2025,5,24,18,31,15,611772000],"orderQuantity":38,"filledQuantity":27,"orderStatus":"FILLED","orderPrice":313.23,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,31,15,611859000]}
18:31:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $406.14
18:31:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,31,15,612089000],"instrumentId":"GOOGL","price":145.60,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,15,612396000]}
18:31:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_8644427a0a50 (FILLED ASML)
18:31:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:31:15.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $145.60
18:31:15.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:15.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,31,15,612089000],"instrumentId":"JPM","price":166.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,15,612465000]}
18:31:15.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.50
18:31:15.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:15.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,31,15,612089000],"instrumentId":"BAC","price":34.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,15,612533000]}
18:31:15.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.28
18:31:15.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:15.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,31,15,612089000],"instrumentId":"NESN","price":108.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,15,612593000]}
18:31:15.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.73
18:31:15.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:15.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,31,15,612089000],"instrumentId":"ASML","price":721.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,15,612652000]}
18:31:15.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $721.26
18:31:15.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:20.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,31,20,613200000],"instrumentId":"AAPL","price":192.30,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,20,613382000]}
18:31:20.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $192.30
18:31:20.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:20.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,31,20,613200000],"instrumentId":"MSFT","price":404.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,20,614463000]}
18:31:20.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $404.43
18:31:20.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:20.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,31,20,613200000],"instrumentId":"GOOGL","price":145.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,20,614778000]}
18:31:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $145.27
18:31:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,31,20,613200000],"instrumentId":"JPM","price":167.08,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,20,614938000]}
18:31:20.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $167.08
18:31:20.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:20.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,31,20,613200000],"instrumentId":"BAC","price":34.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,20,615076000]}
18:31:20.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.22
18:31:20.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:20.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,31,20,613200000],"instrumentId":"NESN","price":108.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,20,615242000]}
18:31:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.52
18:31:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,31,20,613200000],"instrumentId":"ASML","price":723.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,20,615394000]}
18:31:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $723.98
18:31:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:25.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,31,25,611894000],"instrumentId":"AAPL","price":193.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,25,612303000]}
18:31:25.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $193.18
18:31:25.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:25.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,31,25,611894000],"instrumentId":"MSFT","price":405.66,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,25,613421000]}
18:31:25.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $405.66
18:31:25.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:25.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,31,25,611894000],"instrumentId":"GOOGL","price":144.68,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,25,613680000]}
18:31:25.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.68
18:31:25.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:25.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,31,25,611894000],"instrumentId":"JPM","price":167.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,25,613921000]}
18:31:25.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $167.38
18:31:25.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:25.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,31,25,611894000],"instrumentId":"BAC","price":34.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,25,614098000]}
18:31:25.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.07
18:31:25.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:25.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,31,25,611894000],"instrumentId":"NESN","price":108.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,25,614265000]}
18:31:25.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.34
18:31:25.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:25.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,31,25,611894000],"instrumentId":"ASML","price":722.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,25,614405000]}
18:31:25.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $722.01
18:31:25.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:27.055 [http-nio-8080-exec-9] DEBUG c.v.v.c.ViewServerController - API request: GET /api/stats
18:31:27.069 [http-nio-8080-exec-1] DEBUG c.v.v.c.ViewServerController - API request: GET /api/accounts
18:31:27.081 [http-nio-8080-exec-3] DEBUG c.v.v.c.ViewServerController - API request: GET /api/instruments
18:31:27.093 [http-nio-8080-exec-5] DEBUG c.v.v.c.ViewServerController - API request: GET /api/prices
18:31:27.104 [http-nio-8080-exec-7] DEBUG c.v.v.c.ViewServerController - API request: GET /api/orders
18:31:30.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,31,30,611448000],"instrumentId":"AAPL","price":192.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,30,611618000]}
18:31:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $192.58
18:31:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,31,30,611448000],"instrumentId":"MSFT","price":405.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,30,612958000]}
18:31:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $405.98
18:31:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,31,30,611448000],"instrumentId":"GOOGL","price":144.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,30,613072000]}
18:31:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.58
18:31:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,31,30,611448000],"instrumentId":"JPM","price":168.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,30,613176000]}
18:31:30.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $168.13
18:31:30.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:30.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,31,30,611448000],"instrumentId":"BAC","price":34.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,30,613264000]}
18:31:30.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.31
18:31:30.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:30.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,31,30,611448000],"instrumentId":"NESN","price":108.45,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,30,613355000]}
18:31:30.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.45
18:31:30.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:30.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,31,30,611448000],"instrumentId":"ASML","price":719.35,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,30,613448000]}
18:31:30.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $719.35
18:31:30.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:31.368 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.] with root cause
java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:183)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:160)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:106)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:218)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:171)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
18:31:31.378 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.] with root cause
java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:183)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:160)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:106)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:218)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:171)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
18:31:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_846af95c975a","remainingQuantity":60,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_846af95c975a","instrumentId":"JPM","accountId":"ACC002","date":[2025,5,24,18,31,35,614763000],"orderQuantity":60,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":110.80,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,31,35,615690000]}
18:31:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,31,35,619438000],"instrumentId":"AAPL","price":191.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,35,619620000]}
18:31:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_846af95c975a (CREATED JPM)
18:31:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:31:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $191.13
18:31:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_3107fbef8ae3","remainingQuantity":249,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_3107fbef8ae3","instrumentId":"JPM","accountId":"ACC004","date":[2025,5,24,18,31,35,617953000],"orderQuantity":783,"filledQuantity":534,"orderStatus":"FILLED","orderPrice":361.69,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,31,35,618208000]}
18:31:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,31,35,619438000],"instrumentId":"MSFT","price":403.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,35,620312000]}
18:31:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_3107fbef8ae3 (FILLED JPM)
18:31:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:31:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $403.98
18:31:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,31,35,619438000],"instrumentId":"GOOGL","price":144.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,35,620717000]}
18:31:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.51
18:31:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,31,35,619438000],"instrumentId":"JPM","price":169.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,35,620992000]}
18:31:35.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $169.18
18:31:35.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:35.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,31,35,619438000],"instrumentId":"BAC","price":34.35,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,35,621313000]}
18:31:35.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.35
18:31:35.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:35.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,31,35,619438000],"instrumentId":"NESN","price":110.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,35,621524000]}
18:31:35.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.25
18:31:35.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:35.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,31,35,619438000],"instrumentId":"ASML","price":722.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,35,621726000]}
18:31:35.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $722.05
18:31:35.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:36.294 [http-nio-8080-exec-1] DEBUG c.v.v.c.ViewServerController - API request: GET /api/orders
18:31:36.376 [http-nio-8080-exec-3] DEBUG c.v.v.c.ViewServerController - API request: GET /api/orders
18:31:36.430 [http-nio-8080-exec-5] DEBUG c.v.v.c.ViewServerController - API request: GET /api/orders
18:31:36.481 [http-nio-8080-exec-7] DEBUG c.v.v.c.ViewServerController - API request: GET /api/orders
18:31:36.540 [http-nio-8080-exec-9] DEBUG c.v.v.c.ViewServerController - API request: GET /api/orders
18:31:40.479 [http-nio-8080-exec-1] DEBUG c.v.v.c.ViewServerController - API request: GET /api/prices
18:31:40.493 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.] with root cause
java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:183)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:160)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:106)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:218)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:171)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
18:31:40.502 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.] with root cause
java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:183)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:160)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:106)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:218)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:171)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
18:31:40.513 [http-nio-8080-exec-5] DEBUG c.v.v.c.ViewServerController - API request: GET /api/prices
18:31:40.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,31,40,613915000],"instrumentId":"AAPL","price":191.45,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,40,613987000]}
18:31:40.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $191.45
18:31:40.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:40.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,31,40,613915000],"instrumentId":"MSFT","price":403.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,40,615049000]}
18:31:40.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $403.18
18:31:40.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:40.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,31,40,613915000],"instrumentId":"GOOGL","price":145.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,40,615150000]}
18:31:40.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $145.72
18:31:40.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:40.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,31,40,613915000],"instrumentId":"JPM","price":170.08,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,40,615214000]}
18:31:40.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $170.08
18:31:40.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:40.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,31,40,613915000],"instrumentId":"BAC","price":34.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,40,615274000]}
18:31:40.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.17
18:31:40.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:40.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,31,40,613915000],"instrumentId":"NESN","price":110.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,40,615353000]}
18:31:40.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.86
18:31:40.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:40.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,31,40,613915000],"instrumentId":"ASML","price":721.19,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,40,615414000]}
18:31:40.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $721.19
18:31:40.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:45.632 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_9d924f57b5fb","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_9d924f57b5fb","instrumentId":"NESN","accountId":"ACC005","date":[2025,5,24,18,31,45,614435000],"orderQuantity":142,"filledQuantity":142,"orderStatus":"PARTIALLY_FILLED","orderPrice":66.77,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,31,45,614996000]}
18:31:45.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,31,45,617857000],"instrumentId":"AAPL","price":191.91,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,45,617989000]}
18:31:45.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $191.91
18:31:45.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:45.634 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_9d924f57b5fb (PARTIALLY_FILLED NESN)
18:31:45.634 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:31:45.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,31,45,617857000],"instrumentId":"MSFT","price":402.08,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,45,618486000]}
18:31:45.634 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_639d87c2a293","remainingQuantity":99,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_639d87c2a293","instrumentId":"BAC","accountId":"ACC003","date":[2025,5,24,18,31,45,617132000],"orderQuantity":99,"filledQuantity":0,"orderStatus":"FILLED","orderPrice":281.37,"orderType":"MARKET","venue":"LSE","timestamp":[2025,5,24,18,31,45,617332000]}
18:31:45.636 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_639d87c2a293 (FILLED BAC)
18:31:45.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $402.08
18:31:45.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:45.636 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:31:45.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,31,45,617857000],"instrumentId":"GOOGL","price":144.95,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,45,618785000]}
18:31:45.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.95
18:31:45.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:45.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,31,45,617857000],"instrumentId":"JPM","price":170.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,45,619080000]}
18:31:45.639 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $170.82
18:31:45.639 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:45.639 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,31,45,617857000],"instrumentId":"BAC","price":34.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,45,619742000]}
18:31:45.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.16
18:31:45.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:45.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,31,45,617857000],"instrumentId":"NESN","price":111.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,45,619962000]}
18:31:45.641 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.34
18:31:45.641 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:45.641 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,31,45,617857000],"instrumentId":"ASML","price":722.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,45,620227000]}
18:31:45.642 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $722.50
18:31:45.642 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:46.419 [http-nio-8080-exec-7] DEBUG c.v.v.c.ViewServerController - API request: GET /api/accounts
18:31:46.440 [http-nio-8080-exec-9] DEBUG c.v.v.c.ViewServerController - API request: GET /api/prices
18:31:46.456 [http-nio-8080-exec-1] DEBUG c.v.v.c.ViewServerController - API request: GET /api/instruments
18:31:50.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,31,50,610964000],"instrumentId":"AAPL","price":192.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,50,611233000]}
18:31:50.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $192.61
18:31:50.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:50.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,31,50,610964000],"instrumentId":"MSFT","price":401.83,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,50,612408000]}
18:31:50.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $401.83
18:31:50.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:50.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,31,50,610964000],"instrumentId":"GOOGL","price":145.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,50,612642000]}
18:31:50.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $145.72
18:31:50.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:50.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,31,50,610964000],"instrumentId":"JPM","price":171.32,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,50,612824000]}
18:31:50.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $171.32
18:31:50.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:50.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,31,50,610964000],"instrumentId":"BAC","price":34.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,50,612973000]}
18:31:50.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.14
18:31:50.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:50.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,31,50,610964000],"instrumentId":"NESN","price":111.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,50,613086000]}
18:31:50.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.58
18:31:50.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:50.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,31,50,610964000],"instrumentId":"ASML","price":725.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,50,613224000]}
18:31:50.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $725.58
18:31:50.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:55.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,31,55,617449000],"instrumentId":"AAPL","price":192.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,55,617588000]}
18:31:55.634 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_f60b3b21bb33","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_f60b3b21bb33","instrumentId":"MSFT","accountId":"ACC004","date":[2025,5,24,18,31,55,614760000],"orderQuantity":23,"filledQuantity":23,"orderStatus":"FILLED","orderPrice":241.87,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,31,55,615358000]}
18:31:55.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $192.50
18:31:55.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:55.638 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_f60b3b21bb33 (FILLED MSFT)
18:31:55.638 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:31:55.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,31,55,617449000],"instrumentId":"MSFT","price":399.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,55,617946000]}
18:31:55.638 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_bff529a64d5a","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_bff529a64d5a","instrumentId":"GOOGL","accountId":"ACC002","date":[2025,5,24,18,31,55,616728000],"orderQuantity":86,"filledQuantity":86,"orderStatus":"FILLED","orderPrice":22.73,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,31,55,616943000]}
18:31:55.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $399.05
18:31:55.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:55.640 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_bff529a64d5a (FILLED GOOGL)
18:31:55.640 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:31:55.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,31,55,617449000],"instrumentId":"GOOGL","price":146.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,55,618173000]}
18:31:55.641 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $146.27
18:31:55.641 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:55.641 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,31,55,617449000],"instrumentId":"JPM","price":172.60,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,55,618392000]}
18:31:55.642 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $172.60
18:31:55.642 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:55.642 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,31,55,617449000],"instrumentId":"BAC","price":34.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,55,618560000]}
18:31:55.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.17
18:31:55.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:55.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,31,55,617449000],"instrumentId":"NESN","price":111.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,55,618797000]}
18:31:55.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.01
18:31:55.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:55.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,31,55,617449000],"instrumentId":"ASML","price":726.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,31,55,618967000]}
18:31:55.646 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $726.72
18:31:55.646 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:31:57.973 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.] with root cause
java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:183)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:160)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:106)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:218)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:171)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
18:31:57.983 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.] with root cause
java.lang.IllegalArgumentException: Name for argument of type [java.lang.String] not specified, and parameter name information not found in class file either.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.updateNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:183)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.getNamedValueInfo(AbstractNamedValueMethodArgumentResolver.java:160)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:106)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:218)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:171)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1575)
18:32:00.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,32,0,613921000],"instrumentId":"AAPL","price":191.75,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,0,614040000]}
18:32:00.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $191.75
18:32:00.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:00.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,32,0,613921000],"instrumentId":"MSFT","price":399.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,0,615156000]}
18:32:00.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $399.55
18:32:00.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:00.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,32,0,613921000],"instrumentId":"GOOGL","price":145.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,0,615247000]}
18:32:00.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $145.17
18:32:00.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:00.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,32,0,613921000],"instrumentId":"JPM","price":172.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,0,615325000]}
18:32:00.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $172.34
18:32:00.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:00.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,32,0,613921000],"instrumentId":"BAC","price":34.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,0,615378000]}
18:32:00.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.38
18:32:00.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:00.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,32,0,613921000],"instrumentId":"NESN","price":110.49,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,0,615434000]}
18:32:00.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.49
18:32:00.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:00.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,32,0,613921000],"instrumentId":"ASML","price":729.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,0,615482000]}
18:32:00.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $729.05
18:32:00.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:05.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,32,5,613321000],"instrumentId":"AAPL","price":191.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,5,613366000]}
18:32:05.625 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_67d7698a9a4d","remainingQuantity":76,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_67d7698a9a4d","instrumentId":"MSFT","accountId":"ACC005","date":[2025,5,24,18,32,5,612662000],"orderQuantity":76,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":104.43,"orderType":"LIMIT","venue":"NYSE","timestamp":[2025,5,24,18,32,5,612810000]}
18:32:05.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $191.34
18:32:05.626 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_67d7698a9a4d (CREATED MSFT)
18:32:05.626 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:32:05.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:05.626 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_0799b4edacc8","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_0799b4edacc8","instrumentId":"GOOGL","accountId":"ACC004","date":[2025,5,24,18,32,5,613180000],"orderQuantity":391,"filledQuantity":391,"orderStatus":"PARTIALLY_FILLED","orderPrice":132.07,"orderType":"LIMIT","venue":"NYSE","timestamp":[2025,5,24,18,32,5,613230000]}
18:32:05.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,32,5,613321000],"instrumentId":"MSFT","price":399.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,5,613462000]}
18:32:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $399.54
18:32:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_0799b4edacc8 (PARTIALLY_FILLED GOOGL)
18:32:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:32:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,32,5,613321000],"instrumentId":"GOOGL","price":145.41,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,5,613526000]}
18:32:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $145.41
18:32:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,32,5,613321000],"instrumentId":"JPM","price":172.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,5,613589000]}
18:32:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $172.01
18:32:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,32,5,613321000],"instrumentId":"BAC","price":34.32,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,5,613651000]}
18:32:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.32
18:32:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,32,5,613321000],"instrumentId":"NESN","price":110.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,5,613712000]}
18:32:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.44
18:32:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,32,5,613321000],"instrumentId":"ASML","price":727.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,5,613767000]}
18:32:05.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $727.23
18:32:05.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,32,10,614493000],"instrumentId":"AAPL","price":192.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,10,614812000]}
18:32:10.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $192.88
18:32:10.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:10.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,32,10,614493000],"instrumentId":"MSFT","price":399.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,10,615837000]}
18:32:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $399.70
18:32:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,32,10,614493000],"instrumentId":"GOOGL","price":144.08,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,10,616039000]}
18:32:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $144.08
18:32:10.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:10.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,32,10,614493000],"instrumentId":"JPM","price":171.32,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,10,616203000]}
18:32:10.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $171.32
18:32:10.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:10.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,32,10,614493000],"instrumentId":"BAC","price":34.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,10,616349000]}
18:32:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.17
18:32:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,32,10,614493000],"instrumentId":"NESN","price":110.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,10,616496000]}
18:32:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.13
18:32:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:10.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,32,10,614493000],"instrumentId":"ASML","price":731.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,10,616625000]}
18:32:10.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $731.55
18:32:10.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:15.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,32,15,614764000],"instrumentId":"AAPL","price":192.47,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,15,615070000]}
18:32:15.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $192.47
18:32:15.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:15.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,32,15,614764000],"instrumentId":"MSFT","price":401.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,15,617156000]}
18:32:15.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $401.44
18:32:15.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:15.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,32,15,614764000],"instrumentId":"GOOGL","price":143.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,15,617595000]}
18:32:15.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $143.72
18:32:15.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:15.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,32,15,614764000],"instrumentId":"JPM","price":171.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,15,617845000]}
18:32:15.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $171.22
18:32:15.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:15.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,32,15,614764000],"instrumentId":"BAC","price":34.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,15,618048000]}
18:32:15.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.63
18:32:15.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:15.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,32,15,614764000],"instrumentId":"NESN","price":110.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,15,618253000]}
18:32:15.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.88
18:32:15.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:15.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,32,15,614764000],"instrumentId":"ASML","price":733.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,15,618416000]}
18:32:15.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $733.53
18:32:15.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:20.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,32,20,611505000],"instrumentId":"AAPL","price":193.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,20,611725000]}
18:32:20.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $193.00
18:32:20.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:20.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,32,20,611505000],"instrumentId":"MSFT","price":404.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,20,613864000]}
18:32:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $404.96
18:32:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:20.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,32,20,611505000],"instrumentId":"GOOGL","price":143.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,20,614218000]}
18:32:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $143.86
18:32:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,32,20,611505000],"instrumentId":"JPM","price":171.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,20,614532000]}
18:32:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $171.70
18:32:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,32,20,611505000],"instrumentId":"BAC","price":34.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,20,614712000]}
18:32:20.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.85
18:32:20.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:20.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,32,20,611505000],"instrumentId":"NESN","price":111.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,20,614892000]}
18:32:20.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.78
18:32:20.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:20.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,32,20,611505000],"instrumentId":"ASML","price":735.47,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,20,615014000]}
18:32:20.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $735.47
18:32:20.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:25.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,32,25,613986000],"instrumentId":"AAPL","price":192.33,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,25,614059000]}
18:32:25.625 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_038e86d4a4fc","remainingQuantity":69,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_038e86d4a4fc","instrumentId":"MSFT","accountId":"ACC001","date":[2025,5,24,18,32,25,612714000],"orderQuantity":69,"filledQuantity":0,"orderStatus":"PARTIALLY_FILLED","orderPrice":299.46,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,32,25,613119000]}
18:32:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_038e86d4a4fc (PARTIALLY_FILLED MSFT)
18:32:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $192.33
18:32:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,32,25,613986000],"instrumentId":"MSFT","price":405.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,25,614247000]}
18:32:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:32:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $405.21
18:32:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:25.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,32,25,613986000],"instrumentId":"GOOGL","price":143.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,25,614311000]}
18:32:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $143.71
18:32:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,32,25,613986000],"instrumentId":"JPM","price":172.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,25,614359000]}
18:32:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $172.39
18:32:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,32,25,613986000],"instrumentId":"BAC","price":34.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,25,614413000]}
18:32:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.82
18:32:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,32,25,613986000],"instrumentId":"NESN","price":111.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,25,614468000]}
18:32:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.61
18:32:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:25.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,32,25,613986000],"instrumentId":"ASML","price":735.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,25,614516000]}
18:32:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $735.72
18:32:25.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:30.621 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,32,30,610236000],"instrumentId":"AAPL","price":190.68,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,30,610376000]}
18:32:30.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $190.68
18:32:30.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:30.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,32,30,610236000],"instrumentId":"MSFT","price":408.08,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,30,611762000]}
18:32:30.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $408.08
18:32:30.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:30.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,32,30,610236000],"instrumentId":"GOOGL","price":142.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,30,612079000]}
18:32:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $142.76
18:32:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,32,30,610236000],"instrumentId":"JPM","price":171.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,30,612218000]}
18:32:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $171.98
18:32:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,32,30,610236000],"instrumentId":"BAC","price":34.84,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,30,612303000]}
18:32:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.84
18:32:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,32,30,610236000],"instrumentId":"NESN","price":111.65,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,30,612387000]}
18:32:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.65
18:32:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,32,30,610236000],"instrumentId":"ASML","price":736.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,30,612456000]}
18:32:30.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $736.87
18:32:30.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:32.681 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Node -1 disconnected.
18:32:32.740 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Node -1 disconnected.
18:32:32.745 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Node -1 disconnected.
18:32:32.745 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Node -1 disconnected.
18:32:32.861 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Node -1 disconnected.
18:32:32.887 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Node -1 disconnected.
18:32:35.627 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_a6e144d82e32","remainingQuantity":23,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_a6e144d82e32","instrumentId":"GOOGL","accountId":"ACC004","date":[2025,5,24,18,32,35,614660000],"orderQuantity":23,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":366.29,"orderType":"MARKET","venue":"LSE","timestamp":[2025,5,24,18,32,35,614837000]}
18:32:35.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,32,35,615682000],"instrumentId":"AAPL","price":190.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,35,615780000]}
18:32:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $190.69
18:32:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_a6e144d82e32 (CREATED GOOGL)
18:32:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,32,35,615682000],"instrumentId":"MSFT","price":407.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,35,615933000]}
18:32:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:32:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_c8f57353f2f8","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_c8f57353f2f8","instrumentId":"GOOGL","accountId":"ACC001","date":[2025,5,24,18,32,35,615465000],"orderQuantity":833,"filledQuantity":833,"orderStatus":"PARTIALLY_FILLED","orderPrice":202.32,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,32,35,615543000]}
18:32:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $407.69
18:32:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,32,35,615682000],"instrumentId":"GOOGL","price":141.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,35,616011000]}
18:32:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_c8f57353f2f8 (PARTIALLY_FILLED GOOGL)
18:32:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:32:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.80
18:32:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,32,35,615682000],"instrumentId":"JPM","price":172.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,35,616103000]}
18:32:35.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $172.71
18:32:35.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:35.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,32,35,615682000],"instrumentId":"BAC","price":34.95,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,35,616214000]}
18:32:35.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.95
18:32:35.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:35.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,32,35,615682000],"instrumentId":"NESN","price":111.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,35,616291000]}
18:32:35.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.11
18:32:35.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:35.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,32,35,615682000],"instrumentId":"ASML","price":735.35,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,35,616363000]}
18:32:35.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $735.35
18:32:35.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:40.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,32,40,614614000],"instrumentId":"AAPL","price":190.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,40,614792000]}
18:32:40.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $190.25
18:32:40.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:40.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,32,40,614614000],"instrumentId":"MSFT","price":409.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,40,615791000]}
18:32:40.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $409.05
18:32:40.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:40.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,32,40,614614000],"instrumentId":"GOOGL","price":140.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,40,615936000]}
18:32:40.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.98
18:32:40.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:40.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,32,40,614614000],"instrumentId":"JPM","price":171.83,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,40,616031000]}
18:32:40.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $171.83
18:32:40.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:40.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,32,40,614614000],"instrumentId":"BAC","price":35.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,40,616131000]}
18:32:40.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $35.00
18:32:40.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:40.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,32,40,614614000],"instrumentId":"NESN","price":111.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,40,616213000]}
18:32:40.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.39
18:32:40.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:40.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,32,40,614614000],"instrumentId":"ASML","price":735.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,40,616293000]}
18:32:40.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $735.42
18:32:40.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:45.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,32,45,615526000],"instrumentId":"AAPL","price":188.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,45,615589000]}
18:32:45.627 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_16e70291e6e1","remainingQuantity":584,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_16e70291e6e1","instrumentId":"JPM","accountId":"ACC004","date":[2025,5,24,18,32,45,613029000],"orderQuantity":853,"filledQuantity":269,"orderStatus":"FILLED","orderPrice":375.80,"orderType":"LIMIT","venue":"EURONEXT","timestamp":[2025,5,24,18,32,45,613437000]}
18:32:45.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $188.72
18:32:45.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:45.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_16e70291e6e1 (FILLED JPM)
18:32:45.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:32:45.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,32,45,615526000],"instrumentId":"MSFT","price":407.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,45,615871000]}
18:32:45.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_76ec664c4a0e","remainingQuantity":28,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_76ec664c4a0e","instrumentId":"MSFT","accountId":"ACC004","date":[2025,5,24,18,32,45,615103000],"orderQuantity":91,"filledQuantity":63,"orderStatus":"FILLED","orderPrice":328.09,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,32,45,615257000]}
18:32:45.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $407.69
18:32:45.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_76ec664c4a0e (FILLED MSFT)
18:32:45.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:45.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:32:45.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,32,45,615526000],"instrumentId":"GOOGL","price":140.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,45,615991000]}
18:32:45.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.98
18:32:45.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:45.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,32,45,615526000],"instrumentId":"JPM","price":172.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,45,616137000]}
18:32:45.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $172.01
18:32:45.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:45.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,32,45,615526000],"instrumentId":"BAC","price":35.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,45,616236000]}
18:32:45.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $35.09
18:32:45.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:45.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,32,45,615526000],"instrumentId":"NESN","price":110.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,45,616333000]}
18:32:45.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.92
18:32:45.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:45.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,32,45,615526000],"instrumentId":"ASML","price":738.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,45,616426000]}
18:32:45.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $738.71
18:32:45.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:50.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,32,50,614682000],"instrumentId":"AAPL","price":189.84,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,50,614915000]}
18:32:50.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $189.84
18:32:50.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:50.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,32,50,614682000],"instrumentId":"MSFT","price":407.66,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,50,616754000]}
18:32:50.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $407.66
18:32:50.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:50.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,32,50,614682000],"instrumentId":"GOOGL","price":140.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,50,617047000]}
18:32:50.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.92
18:32:50.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:50.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,32,50,614682000],"instrumentId":"JPM","price":171.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,50,617294000]}
18:32:50.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $171.82
18:32:50.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:50.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,32,50,614682000],"instrumentId":"BAC","price":34.81,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,50,617425000]}
18:32:50.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.81
18:32:50.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:50.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,32,50,614682000],"instrumentId":"NESN","price":110.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,50,617548000]}
18:32:50.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.56
18:32:50.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:50.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,32,50,614682000],"instrumentId":"ASML","price":735.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,50,617868000]}
18:32:50.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $735.23
18:32:50.637 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:55.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,32,55,614966000],"instrumentId":"AAPL","price":189.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,55,615220000]}
18:32:55.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $189.88
18:32:55.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:55.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,32,55,614966000],"instrumentId":"MSFT","price":406.40,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,55,616232000]}
18:32:55.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $406.40
18:32:55.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:55.636 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,32,55,614966000],"instrumentId":"GOOGL","price":140.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,55,616593000]}
18:32:55.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.28
18:32:55.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:55.638 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,32,55,614966000],"instrumentId":"JPM","price":171.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,55,616835000]}
18:32:55.639 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $171.12
18:32:55.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:55.640 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,32,55,614966000],"instrumentId":"BAC","price":34.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,55,617048000]}
18:32:55.641 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.61
18:32:55.641 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:55.641 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,32,55,614966000],"instrumentId":"NESN","price":111.60,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,55,617282000]}
18:32:55.642 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.60
18:32:55.642 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:32:55.642 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,32,55,614966000],"instrumentId":"ASML","price":730.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,32,55,617452000]}
18:32:55.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $730.17
18:32:55.643 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:00.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,33,0,614670000],"instrumentId":"AAPL","price":188.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,0,615100000]}
18:33:00.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $188.07
18:33:00.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:00.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,33,0,614670000],"instrumentId":"MSFT","price":407.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,0,617603000]}
18:33:00.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $407.63
18:33:00.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:00.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,33,0,614670000],"instrumentId":"GOOGL","price":139.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,0,618085000]}
18:33:00.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.36
18:33:00.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:00.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,33,0,614670000],"instrumentId":"JPM","price":170.40,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,0,618281000]}
18:33:00.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $170.40
18:33:00.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:00.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,33,0,614670000],"instrumentId":"BAC","price":34.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,0,618401000]}
18:33:00.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.38
18:33:00.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:00.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,33,0,614670000],"instrumentId":"NESN","price":111.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,0,618536000]}
18:33:00.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.31
18:33:00.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:00.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,33,0,614670000],"instrumentId":"ASML","price":737.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,0,618628000]}
18:33:00.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $737.17
18:33:00.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:05.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,33,5,615848000],"instrumentId":"AAPL","price":188.95,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,5,615934000]}
18:33:05.625 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_b1fc57253119","remainingQuantity":16,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_b1fc57253119","instrumentId":"MSFT","accountId":"ACC003","date":[2025,5,24,18,33,5,614533000],"orderQuantity":16,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":54.02,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,33,5,615013000]}
18:33:05.625 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received intraday cash data: {"kafkaKey":"2025-05-24#EUR#ACC001","date":[2025,5,24,18,33,5,613001000],"instrumentId":"EUR","accountId":"ACC001","quantity":42903.14,"movementType":"SUBSCRIPTION","referenceId":"SUB_1748107985613_346","timestamp":[2025,5,24,18,33,5,613501000]}
18:33:05.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $188.95
18:33:05.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:05.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,33,5,615848000],"instrumentId":"MSFT","price":410.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,5,616143000]}
18:33:05.627 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_b1fc57253119 (CREATED MSFT)
18:33:05.627 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached cash movement: 42903.14 EUR for account ACC001 (SUBSCRIPTION)
18:33:05.627 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:33:05.627 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached intraday cash data
18:33:05.627 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_841878b19f00","remainingQuantity":20,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_841878b19f00","instrumentId":"GOOGL","accountId":"ACC005","date":[2025,5,24,18,33,5,615400000],"orderQuantity":20,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":289.87,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,33,5,615445000]}
18:33:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $410.25
18:33:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,33,5,615848000],"instrumentId":"GOOGL","price":138.84,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,5,616274000]}
18:33:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_841878b19f00 (CREATED GOOGL)
18:33:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:33:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_3f63a1f2ce20","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_3f63a1f2ce20","instrumentId":"ASML","accountId":"ACC003","date":[2025,5,24,18,33,5,615618000],"orderQuantity":57,"filledQuantity":57,"orderStatus":"CANCELLED","orderPrice":271.91,"orderType":"MARKET","venue":"LSE","timestamp":[2025,5,24,18,33,5,615695000]}
18:33:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.84
18:33:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:05.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,33,5,615848000],"instrumentId":"JPM","price":170.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,5,616372000]}
18:33:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_3f63a1f2ce20 (CANCELLED ASML)
18:33:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $170.69
18:33:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:33:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,33,5,615848000],"instrumentId":"BAC","price":34.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,5,616464000]}
18:33:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.09
18:33:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:05.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,33,5,615848000],"instrumentId":"NESN","price":110.66,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,5,616555000]}
18:33:05.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.66
18:33:05.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:05.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,33,5,615848000],"instrumentId":"ASML","price":743.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,5,616654000]}
18:33:05.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $743.15
18:33:05.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:10.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,33,10,611957000],"instrumentId":"AAPL","price":190.65,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,10,612326000]}
18:33:10.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $190.65
18:33:10.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:10.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,33,10,611957000],"instrumentId":"MSFT","price":411.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,10,613818000]}
18:33:10.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $411.54
18:33:10.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:10.626 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,33,10,611957000],"instrumentId":"GOOGL","price":138.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,10,613933000]}
18:33:10.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.97
18:33:10.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:10.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,33,10,611957000],"instrumentId":"JPM","price":171.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,10,614011000]}
18:33:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $171.51
18:33:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,33,10,611957000],"instrumentId":"BAC","price":34.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,10,614126000]}
18:33:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.23
18:33:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:10.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,33,10,611957000],"instrumentId":"NESN","price":111.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,10,614191000]}
18:33:10.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.23
18:33:10.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:10.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,33,10,611957000],"instrumentId":"ASML","price":744.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,10,614256000]}
18:33:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $744.70
18:33:10.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:15.621 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,33,15,611108000],"instrumentId":"AAPL","price":190.75,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,15,611183000]}
18:33:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $190.75
18:33:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,33,15,611108000],"instrumentId":"MSFT","price":413.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,15,611620000]}
18:33:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $413.02
18:33:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:15.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,33,15,611108000],"instrumentId":"GOOGL","price":139.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,15,611929000]}
18:33:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.18
18:33:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,33,15,611108000],"instrumentId":"JPM","price":170.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,15,612279000]}
18:33:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $170.25
18:33:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:15.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,33,15,611108000],"instrumentId":"BAC","price":34.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,15,612336000]}
18:33:15.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.37
18:33:15.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:15.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,33,15,611108000],"instrumentId":"NESN","price":112.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,15,612394000]}
18:33:15.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $112.48
18:33:15.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:15.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,33,15,611108000],"instrumentId":"ASML","price":739.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,15,612440000]}
18:33:15.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $739.31
18:33:15.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:20.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,33,20,614807000],"instrumentId":"AAPL","price":187.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,20,615002000]}
18:33:20.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $187.09
18:33:20.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:20.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,33,20,614807000],"instrumentId":"MSFT","price":414.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,20,616565000]}
18:33:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $414.31
18:33:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:20.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,33,20,614807000],"instrumentId":"GOOGL","price":139.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,20,616692000]}
18:33:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.50
18:33:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:20.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,33,20,614807000],"instrumentId":"JPM","price":169.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,20,616791000]}
18:33:20.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $169.43
18:33:20.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:20.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,33,20,614807000],"instrumentId":"BAC","price":34.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,20,616870000]}
18:33:20.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.46
18:33:20.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:20.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,33,20,614807000],"instrumentId":"NESN","price":112.83,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,20,616962000]}
18:33:20.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $112.83
18:33:20.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:20.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,33,20,614807000],"instrumentId":"ASML","price":741.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,20,617044000]}
18:33:20.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $741.87
18:33:20.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:25.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,33,25,615058000],"instrumentId":"AAPL","price":188.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,25,615323000]}
18:33:25.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $188.12
18:33:25.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:25.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,33,25,615058000],"instrumentId":"MSFT","price":415.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,25,616188000]}
18:33:25.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.50
18:33:25.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:25.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,33,25,615058000],"instrumentId":"GOOGL","price":139.95,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,25,616471000]}
18:33:25.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.95
18:33:25.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:25.632 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,33,25,615058000],"instrumentId":"JPM","price":169.91,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,25,616913000]}
18:33:25.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $169.91
18:33:25.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:25.633 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,33,25,615058000],"instrumentId":"BAC","price":34.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,25,617111000]}
18:33:25.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.54
18:33:25.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:25.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,33,25,615058000],"instrumentId":"NESN","price":113.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,25,617238000]}
18:33:25.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $113.14
18:33:25.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:25.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,33,25,615058000],"instrumentId":"ASML","price":743.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,25,617365000]}
18:33:25.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $743.50
18:33:25.634 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:30.622 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,33,30,613192000],"instrumentId":"AAPL","price":189.08,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,30,613277000]}
18:33:30.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $189.08
18:33:30.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:30.623 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,33,30,613192000],"instrumentId":"MSFT","price":415.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,30,613986000]}
18:33:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.97
18:33:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,33,30,613192000],"instrumentId":"GOOGL","price":140.29,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,30,614056000]}
18:33:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.29
18:33:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,33,30,613192000],"instrumentId":"JPM","price":170.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,30,614102000]}
18:33:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $170.56
18:33:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:30.624 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,33,30,613192000],"instrumentId":"BAC","price":34.66,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,30,614146000]}
18:33:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.66
18:33:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,33,30,613192000],"instrumentId":"NESN","price":113.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,30,614185000]}
18:33:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $113.98
18:33:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,33,30,613192000],"instrumentId":"ASML","price":722.83,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,30,614233000]}
18:33:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $722.83
18:33:30.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:35.625 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,33,35,615808000],"instrumentId":"AAPL","price":189.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,35,615838000]}
18:33:35.625 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_59b4d1b36b69","remainingQuantity":21,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_59b4d1b36b69","instrumentId":"MSFT","accountId":"ACC001","date":[2025,5,24,18,33,35,614769000],"orderQuantity":21,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":182.10,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,33,35,614994000]}
18:33:35.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $189.06
18:33:35.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:35.627 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,33,35,615808000],"instrumentId":"MSFT","price":418.10,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,35,616006000]}
18:33:35.627 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_59b4d1b36b69 (CREATED MSFT)
18:33:35.627 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:33:35.627 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_d57763b7a1ae","remainingQuantity":43,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_d57763b7a1ae","instrumentId":"BAC","accountId":"ACC005","date":[2025,5,24,18,33,35,615370000],"orderQuantity":43,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":271.60,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,33,35,615454000]}
18:33:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $418.10
18:33:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,33,35,615808000],"instrumentId":"GOOGL","price":141.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,35,616117000]}
18:33:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_d57763b7a1ae (CREATED BAC)
18:33:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:33:35.628 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_539c9a8a2a6a","remainingQuantity":97,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_539c9a8a2a6a","instrumentId":"MSFT","accountId":"ACC002","date":[2025,5,24,18,33,35,615620000],"orderQuantity":97,"filledQuantity":0,"orderStatus":"PARTIALLY_FILLED","orderPrice":264.30,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,33,35,615678000]}
18:33:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.04
18:33:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,33,35,615808000],"instrumentId":"JPM","price":170.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,35,616201000]}
18:33:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_539c9a8a2a6a (PARTIALLY_FILLED MSFT)
18:33:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:33:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $170.09
18:33:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,33,35,615808000],"instrumentId":"BAC","price":34.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,35,616292000]}
18:33:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.85
18:33:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:35.629 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,33,35,615808000],"instrumentId":"NESN","price":112.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,35,616380000]}
18:33:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $112.86
18:33:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:35.630 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,33,35,615808000],"instrumentId":"ASML","price":721.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,35,616511000]}
18:33:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $721.27
18:33:35.631 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:42.512 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC001","accountId":"ACC001","accountName":"Global Growth Fund","timestamp":[2025,5,24,18,33,42,144896000]}
18:33:42.512 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_46a38e45bc93","remainingQuantity":389,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_46a38e45bc93","instrumentId":"BAC","accountId":"ACC004","date":[2025,5,24,18,33,42,198425000],"orderQuantity":389,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":56.94,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,33,42,211232000]}
18:33:42.513 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_46a38e45bc93 (CREATED BAC)
18:33:42.514 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:33:42.514 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_b41b5ac306cc","remainingQuantity":10,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_b41b5ac306cc","instrumentId":"NESN","accountId":"ACC001","date":[2025,5,24,18,33,42,492248000],"orderQuantity":10,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":390.92,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,33,42,492399000]}
18:33:42.514 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC001
18:33:42.514 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:33:42.514 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC002","accountId":"ACC002","accountName":"US Value Strategy","timestamp":[2025,5,24,18,33,42,144911000]}
18:33:42.514 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,33,42,493278000],"instrumentId":"AAPL","price":179.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,42,493878000]}
18:33:42.514 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"AAPL","cash":false,"instrumentId":"AAPL","instrumentName":"Apple Inc","countryOfRisk":"US","countryOfDomicile":"US","sector":"Technology","subSectors":["Consumer Electronics","Software"],"timestamp":[2025,5,24,18,33,42,145013000]}
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_b41b5ac306cc (CREATED NESN)
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC002
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.56
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC003","accountId":"ACC003","accountName":"Emerging Markets Equity","timestamp":[2025,5,24,18,33,42,144915000]}
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,33,42,493278000],"instrumentId":"MSFT","price":415.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,42,504563000]}
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: AAPL
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC003
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.97
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"MSFT","cash":false,"instrumentId":"MSFT","instrumentName":"Microsoft Corp","countryOfRisk":"US","countryOfDomicile":"US","sector":"Technology","subSectors":["Software","Cloud Computing"],"timestamp":[2025,5,24,18,33,42,145019000]}
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC004","accountId":"ACC004","accountName":"European Small Cap","timestamp":[2025,5,24,18,33,42,144918000]}
18:33:42.515 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,33,42,493278000],"instrumentId":"GOOGL","price":139.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,42,504863000]}
18:33:42.516 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: MSFT
18:33:42.516 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:33:42.516 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC004
18:33:42.516 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"GOOGL","cash":false,"instrumentId":"GOOGL","instrumentName":"Alphabet Inc","countryOfRisk":"US","countryOfDomicile":"US","sector":"Technology","subSectors":["Internet Services","Advertising"],"timestamp":[2025,5,24,18,33,42,145022000]}
18:33:42.516 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.70
18:33:42.516 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:33:42.516 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:42.516 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received account data: {"kafkaKey":"ACC005","accountId":"ACC005","accountName":"Technology Innovation Fund","timestamp":[2025,5,24,18,33,42,144920000]}
18:33:42.516 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,33,42,493278000],"instrumentId":"JPM","price":165.08,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,42,505088000]}
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: GOOGL
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"JPM","cash":false,"instrumentId":"JPM","instrumentName":"JPMorgan Chase & Co","countryOfRisk":"US","countryOfDomicile":"US","sector":"Financials","subSectors":["Banking","Investment Banking"],"timestamp":[2025,5,24,18,33,42,145026000]}
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached account: ACC005
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached account data
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.08
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,33,42,493278000],"instrumentId":"BAC","price":32.65,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,42,505311000]}
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: JPM
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.65
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"BAC","cash":false,"instrumentId":"BAC","instrumentName":"Bank of America Corp","countryOfRisk":"US","countryOfDomicile":"US","sector":"Financials","subSectors":["Banking","Retail Banking"],"timestamp":[2025,5,24,18,33,42,145028000]}
18:33:42.517 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,33,42,493278000],"instrumentId":"NESN","price":105.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,42,505512000]}
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: BAC
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"NESN","cash":false,"instrumentId":"NESN","instrumentName":"Nestle SA","countryOfRisk":"CH","countryOfDomicile":"CH","sector":"Consumer Staples","subSectors":["Food Products","Beverages"],"timestamp":[2025,5,24,18,33,42,145032000]}
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.34
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,33,42,493278000],"instrumentId":"ASML","price":721.77,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,42,505708000]}
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: NESN
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"ASML","cash":false,"instrumentId":"ASML","instrumentName":"ASML Holding NV","countryOfRisk":"NL","countryOfDomicile":"NL","sector":"Technology","subSectors":["Semiconductors","Manufacturing Equipment"],"timestamp":[2025,5,24,18,33,42,145036000]}
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $721.77
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: ASML
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:33:42.518 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"USD","cash":true,"instrumentId":"USD","instrumentName":"US Dollar Cash","countryOfRisk":"US","countryOfDomicile":"US","sector":"Cash","subSectors":["Currency"],"timestamp":[2025,5,24,18,33,42,145040000]}
18:33:42.519 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: USD
18:33:42.519 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:33:42.519 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"EUR","cash":true,"instrumentId":"EUR","instrumentName":"Euro Cash","countryOfRisk":"EU","countryOfDomicile":"EU","sector":"Cash","subSectors":["Currency"],"timestamp":[2025,5,24,18,33,42,145043000]}
18:33:42.519 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: EUR
18:33:42.519 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:33:42.519 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received instrument data: {"kafkaKey":"GBP","cash":true,"instrumentId":"GBP","instrumentName":"British Pound Cash","countryOfRisk":"GB","countryOfDomicile":"GB","sector":"Cash","subSectors":["Currency"],"timestamp":[2025,5,24,18,33,42,145045000]}
18:33:42.520 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached instrument: GBP
18:33:42.520 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached instrument data
18:33:47.226 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,33,47,204761000],"instrumentId":"AAPL","price":179.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,47,206992000]}
18:33:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.97
18:33:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,33,47,204761000],"instrumentId":"MSFT","price":419.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,47,217091000]}
18:33:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $419.26
18:33:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,33,47,204761000],"instrumentId":"GOOGL","price":140.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,47,220149000]}
18:33:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.54
18:33:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,33,47,204761000],"instrumentId":"JPM","price":164.40,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,47,220855000]}
18:33:47.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $164.40
18:33:47.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:47.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,33,47,204761000],"instrumentId":"BAC","price":32.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,47,221279000]}
18:33:47.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.54
18:33:47.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:47.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,33,47,204761000],"instrumentId":"NESN","price":104.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,47,221764000]}
18:33:47.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.86
18:33:47.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:47.230 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,33,47,204761000],"instrumentId":"ASML","price":718.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,47,222576000]}
18:33:47.230 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $718.14
18:33:47.230 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:52.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,33,52,203946000],"instrumentId":"AAPL","price":178.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,52,204039000]}
18:33:52.223 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_f3e49b7925d0","remainingQuantity":38,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_f3e49b7925d0","instrumentId":"JPM","accountId":"ACC003","date":[2025,5,24,18,33,52,202016000],"orderQuantity":57,"filledQuantity":19,"orderStatus":"FILLED","orderPrice":264.67,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,33,52,202395000]}
18:33:52.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.78
18:33:52.227 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_f3e49b7925d0 (FILLED JPM)
18:33:52.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:52.227 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:33:52.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,33,52,203946000],"instrumentId":"MSFT","price":420.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,52,204394000]}
18:33:52.227 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_3a5063ec19f1","remainingQuantity":15,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_3a5063ec19f1","instrumentId":"ASML","accountId":"ACC004","date":[2025,5,24,18,33,52,203439000],"orderQuantity":27,"filledQuantity":12,"orderStatus":"FILLED","orderPrice":360.22,"orderType":"LIMIT","venue":"NYSE","timestamp":[2025,5,24,18,33,52,203582000]}
18:33:52.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $420.67
18:33:52.228 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_3a5063ec19f1 (FILLED ASML)
18:33:52.228 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:33:52.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:52.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,33,52,203946000],"instrumentId":"GOOGL","price":139.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,52,204669000]}
18:33:52.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.43
18:33:52.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:52.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,33,52,203946000],"instrumentId":"JPM","price":164.60,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,52,204888000]}
18:33:52.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $164.60
18:33:52.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:52.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,33,52,203946000],"instrumentId":"BAC","price":32.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,52,205130000]}
18:33:52.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.48
18:33:52.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:52.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,33,52,203946000],"instrumentId":"NESN","price":105.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,52,205359000]}
18:33:52.230 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.37
18:33:52.230 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:52.230 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,33,52,203946000],"instrumentId":"ASML","price":723.68,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,52,205601000]}
18:33:52.231 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $723.68
18:33:52.231 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:57.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,33,57,197324000],"instrumentId":"AAPL","price":179.66,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,57,197599000]}
18:33:57.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.66
18:33:57.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:57.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,33,57,197324000],"instrumentId":"MSFT","price":421.29,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,57,198531000]}
18:33:57.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $421.29
18:33:57.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:57.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,33,57,197324000],"instrumentId":"GOOGL","price":138.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,57,198817000]}
18:33:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.53
18:33:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,33,57,197324000],"instrumentId":"JPM","price":164.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,57,199023000]}
18:33:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $164.54
18:33:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,33,57,197324000],"instrumentId":"BAC","price":32.59,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,57,199225000]}
18:33:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.59
18:33:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,33,57,197324000],"instrumentId":"NESN","price":105.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,57,199422000]}
18:33:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.24
18:33:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:33:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,33,57,197324000],"instrumentId":"ASML","price":702.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,33,57,199602000]}
18:33:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $702.38
18:33:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:02.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,34,2,201944000],"instrumentId":"AAPL","price":179.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,2,202033000]}
18:34:02.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.13
18:34:02.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:02.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,34,2,201944000],"instrumentId":"MSFT","price":419.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,2,202604000]}
18:34:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $419.92
18:34:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,34,2,201944000],"instrumentId":"GOOGL","price":138.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,2,202782000]}
18:34:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.79
18:34:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,34,2,201944000],"instrumentId":"JPM","price":166.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,2,202926000]}
18:34:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.16
18:34:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,34,2,201944000],"instrumentId":"BAC","price":32.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,2,203047000]}
18:34:02.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.74
18:34:02.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:02.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,34,2,201944000],"instrumentId":"NESN","price":105.66,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,2,203190000]}
18:34:02.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.66
18:34:02.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:02.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,34,2,201944000],"instrumentId":"ASML","price":698.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,2,203314000]}
18:34:02.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $698.38
18:34:02.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:07.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,34,7,201966000],"instrumentId":"AAPL","price":178.49,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,7,202049000]}
18:34:07.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.49
18:34:07.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:07.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,34,7,201966000],"instrumentId":"MSFT","price":418.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,7,202459000]}
18:34:07.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $418.50
18:34:07.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:07.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,34,7,201966000],"instrumentId":"GOOGL","price":137.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,7,202599000]}
18:34:07.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.55
18:34:07.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:07.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,34,7,201966000],"instrumentId":"JPM","price":165.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,7,202723000]}
18:34:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.98
18:34:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,34,7,201966000],"instrumentId":"BAC","price":32.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,7,202838000]}
18:34:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.76
18:34:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,34,7,201966000],"instrumentId":"NESN","price":106.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,7,202962000]}
18:34:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.25
18:34:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,34,7,201966000],"instrumentId":"ASML","price":698.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,7,203090000]}
18:34:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $698.04
18:34:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,34,12,204117000],"instrumentId":"AAPL","price":178.40,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,12,204188000]}
18:34:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_3bea09555f64","remainingQuantity":128,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_3bea09555f64","instrumentId":"AAPL","accountId":"ACC002","date":[2025,5,24,18,34,12,202007000],"orderQuantity":128,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":264.07,"orderType":"MARKET","venue":"LSE","timestamp":[2025,5,24,18,34,12,202275000]}
18:34:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.40
18:34:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_3bea09555f64 (CREATED AAPL)
18:34:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:34:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,34,12,204117000],"instrumentId":"MSFT","price":418.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,12,204397000]}
18:34:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_e5e698695393","remainingQuantity":735,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_e5e698695393","instrumentId":"ASML","accountId":"ACC005","date":[2025,5,24,18,34,12,203073000],"orderQuantity":735,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":308.07,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,34,12,203195000]}
18:34:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $418.96
18:34:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_e5e698695393 (CREATED ASML)
18:34:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:34:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,34,12,204117000],"instrumentId":"GOOGL","price":138.47,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,12,204553000]}
18:34:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_6e92d0f22b30","remainingQuantity":30,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_6e92d0f22b30","instrumentId":"NESN","accountId":"ACC003","date":[2025,5,24,18,34,12,203368000],"orderQuantity":30,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":107.12,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,34,12,203441000]}
18:34:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.47
18:34:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_6e92d0f22b30 (CREATED NESN)
18:34:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:34:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,34,12,204117000],"instrumentId":"JPM","price":166.10,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,12,204708000]}
18:34:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_868a3f08d6a5","remainingQuantity":14,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_868a3f08d6a5","instrumentId":"BAC","accountId":"ACC005","date":[2025,5,24,18,34,12,203627000],"orderQuantity":66,"filledQuantity":52,"orderStatus":"REJECTED","orderPrice":134.03,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,34,12,203717000]}
18:34:12.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.10
18:34:12.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:12.218 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_868a3f08d6a5 (REJECTED BAC)
18:34:12.218 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:34:12.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,34,12,204117000],"instrumentId":"BAC","price":33.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,12,204882000]}
18:34:12.218 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_2b5ec44fe948","remainingQuantity":10,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_2b5ec44fe948","instrumentId":"MSFT","accountId":"ACC004","date":[2025,5,24,18,34,12,203899000],"orderQuantity":78,"filledQuantity":68,"orderStatus":"FILLED","orderPrice":159.48,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,34,12,203958000]}
18:34:12.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.07
18:34:12.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:12.219 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_2b5ec44fe948 (FILLED MSFT)
18:34:12.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,34,12,204117000],"instrumentId":"NESN","price":106.77,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,12,205040000]}
18:34:12.219 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:34:12.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.77
18:34:12.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:12.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,34,12,204117000],"instrumentId":"ASML","price":692.10,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,12,205209000]}
18:34:12.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $692.10
18:34:12.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:17.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,34,17,202155000],"instrumentId":"AAPL","price":178.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,17,202370000]}
18:34:17.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.11
18:34:17.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:17.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,34,17,202155000],"instrumentId":"MSFT","price":418.19,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,17,202886000]}
18:34:17.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $418.19
18:34:17.225 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:17.225 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,34,17,202155000],"instrumentId":"GOOGL","price":138.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,17,203064000]}
18:34:17.226 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.27
18:34:17.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:17.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,34,17,202155000],"instrumentId":"JPM","price":166.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,17,203240000]}
18:34:17.233 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.61
18:34:17.233 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:17.233 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,34,17,202155000],"instrumentId":"BAC","price":33.08,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,17,203377000]}
18:34:17.235 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.08
18:34:17.235 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:17.235 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,34,17,202155000],"instrumentId":"NESN","price":107.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,17,203514000]}
18:34:17.235 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $107.22
18:34:17.235 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:17.235 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,34,17,202155000],"instrumentId":"ASML","price":696.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,17,203643000]}
18:34:17.236 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $696.07
18:34:17.236 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,34,22,204252000],"instrumentId":"AAPL","price":178.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,22,204346000]}
18:34:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_14743f83e522","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_14743f83e522","instrumentId":"AAPL","accountId":"ACC001","date":[2025,5,24,18,34,22,202333000],"orderQuantity":402,"filledQuantity":402,"orderStatus":"PARTIALLY_FILLED","orderPrice":219.76,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,34,22,202647000]}
18:34:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.72
18:34:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_14743f83e522 (PARTIALLY_FILLED AAPL)
18:34:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:34:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,34,22,204252000],"instrumentId":"MSFT","price":417.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,22,204579000]}
18:34:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_6ff31c6b7cd4","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_6ff31c6b7cd4","instrumentId":"MSFT","accountId":"ACC003","date":[2025,5,24,18,34,22,203901000],"orderQuantity":19,"filledQuantity":19,"orderStatus":"FILLED","orderPrice":432.47,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,34,22,204012000]}
18:34:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $417.17
18:34:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,34,22,204252000],"instrumentId":"GOOGL","price":138.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,22,204748000]}
18:34:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_6ff31c6b7cd4 (FILLED MSFT)
18:34:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:34:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.54
18:34:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,34,22,204252000],"instrumentId":"JPM","price":166.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,22,204951000]}
18:34:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.20
18:34:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,34,22,204252000],"instrumentId":"BAC","price":33.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,22,205143000]}
18:34:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.06
18:34:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,34,22,204252000],"instrumentId":"NESN","price":106.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,22,205324000]}
18:34:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.76
18:34:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,34,22,204252000],"instrumentId":"ASML","price":694.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,22,205504000]}
18:34:22.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $694.15
18:34:22.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:27.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,34,27,202113000],"instrumentId":"AAPL","price":179.65,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,27,202289000]}
18:34:27.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.65
18:34:27.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:27.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,34,27,202113000],"instrumentId":"MSFT","price":417.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,27,202787000]}
18:34:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $417.79
18:34:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,34,27,202113000],"instrumentId":"GOOGL","price":137.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,27,203012000]}
18:34:27.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.63
18:34:27.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:27.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,34,27,202113000],"instrumentId":"JPM","price":165.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,27,203231000]}
18:34:27.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $165.80
18:34:27.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:27.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,34,27,202113000],"instrumentId":"BAC","price":33.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,27,203379000]}
18:34:27.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.15
18:34:27.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:27.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,34,27,202113000],"instrumentId":"NESN","price":106.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,27,203530000]}
18:34:27.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.46
18:34:27.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:27.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,34,27,202113000],"instrumentId":"ASML","price":691.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,27,203687000]}
18:34:27.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $691.38
18:34:27.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:32.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,34,32,203320000],"instrumentId":"AAPL","price":179.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,32,203405000]}
18:34:32.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_6eec719fa94d","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_6eec719fa94d","instrumentId":"ASML","accountId":"ACC004","date":[2025,5,24,18,34,32,201539000],"orderQuantity":14,"filledQuantity":14,"orderStatus":"FILLED","orderPrice":235.32,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,34,32,201709000]}
18:34:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_6eec719fa94d (FILLED ASML)
18:34:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:34:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.56
18:34:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_b57eeb6df06d","remainingQuantity":39,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_b57eeb6df06d","instrumentId":"BAC","accountId":"ACC004","date":[2025,5,24,18,34,32,202987000],"orderQuantity":39,"filledQuantity":0,"orderStatus":"PARTIALLY_FILLED","orderPrice":72.43,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,34,32,203086000]}
18:34:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,34,32,203320000],"instrumentId":"MSFT","price":417.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,32,203623000]}
18:34:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $417.69
18:34:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_b57eeb6df06d (PARTIALLY_FILLED BAC)
18:34:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:34:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,34,32,203320000],"instrumentId":"GOOGL","price":137.84,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,32,203808000]}
18:34:32.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.84
18:34:32.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:32.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,34,32,203320000],"instrumentId":"JPM","price":166.45,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,32,203959000]}
18:34:32.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.45
18:34:32.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:32.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,34,32,203320000],"instrumentId":"BAC","price":33.47,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,32,204113000]}
18:34:32.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.47
18:34:32.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:32.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,34,32,203320000],"instrumentId":"NESN","price":105.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,32,204269000]}
18:34:32.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.78
18:34:32.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:32.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,34,32,203320000],"instrumentId":"ASML","price":689.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,32,204417000]}
18:34:32.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $689.37
18:34:32.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:37.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,34,37,198529000],"instrumentId":"AAPL","price":178.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,37,198708000]}
18:34:37.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.69
18:34:37.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:37.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,34,37,198529000],"instrumentId":"MSFT","price":424.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,37,199267000]}
18:34:37.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $424.82
18:34:37.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:37.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,34,37,198529000],"instrumentId":"GOOGL","price":137.45,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,37,199509000]}
18:34:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.45
18:34:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,34,37,198529000],"instrumentId":"JPM","price":166.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,37,199701000]}
18:34:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.14
18:34:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,34,37,198529000],"instrumentId":"BAC","price":33.35,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,37,199882000]}
18:34:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.35
18:34:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,34,37,198529000],"instrumentId":"NESN","price":105.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,37,200078000]}
18:34:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.43
18:34:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,34,37,198529000],"instrumentId":"ASML","price":695.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,37,200283000]}
18:34:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $695.13
18:34:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,34,42,203705000],"instrumentId":"AAPL","price":178.49,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,42,203793000]}
18:34:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_c55df0b604a0","remainingQuantity":84,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_c55df0b604a0","instrumentId":"JPM","accountId":"ACC001","date":[2025,5,24,18,34,42,202199000],"orderQuantity":84,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":43.57,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,34,42,202422000]}
18:34:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_c55df0b604a0 (CREATED JPM)
18:34:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:34:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.49
18:34:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_1eb38b9cc3c9","remainingQuantity":66,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_1eb38b9cc3c9","instrumentId":"BAC","accountId":"ACC005","date":[2025,5,24,18,34,42,203344000],"orderQuantity":66,"filledQuantity":0,"orderStatus":"FILLED","orderPrice":25.09,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,34,42,203456000]}
18:34:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,34,42,203705000],"instrumentId":"MSFT","price":427.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,42,204050000]}
18:34:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_1eb38b9cc3c9 (FILLED BAC)
18:34:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:34:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $427.20
18:34:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,34,42,203705000],"instrumentId":"GOOGL","price":136.84,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,42,204250000]}
18:34:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.84
18:34:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,34,42,203705000],"instrumentId":"JPM","price":166.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,42,204437000]}
18:34:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.00
18:34:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,34,42,203705000],"instrumentId":"BAC","price":33.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,42,204629000]}
18:34:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.12
18:34:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,34,42,203705000],"instrumentId":"NESN","price":105.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,42,204805000]}
18:34:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.24
18:34:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,34,42,203705000],"instrumentId":"ASML","price":691.41,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,42,205000000]}
18:34:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $691.41
18:34:42.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:47.258 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,34,47,199469000],"instrumentId":"AAPL","price":178.84,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,47,199848000]}
18:34:47.259 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.84
18:34:47.260 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:47.260 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,34,47,199469000],"instrumentId":"MSFT","price":426.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,47,236405000]}
18:34:47.261 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $426.38
18:34:47.261 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:47.261 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,34,47,199469000],"instrumentId":"GOOGL","price":136.40,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,47,247374000]}
18:34:47.261 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.40
18:34:47.261 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:47.261 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,34,47,199469000],"instrumentId":"JPM","price":166.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,47,254339000]}
18:34:47.261 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.52
18:34:47.261 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:47.262 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,34,47,199469000],"instrumentId":"BAC","price":33.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,47,254888000]}
18:34:47.263 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.04
18:34:47.263 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:47.263 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,34,47,199469000],"instrumentId":"NESN","price":104.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,47,255184000]}
18:34:47.263 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.97
18:34:47.263 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:47.263 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,34,47,199469000],"instrumentId":"ASML","price":689.89,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,47,255553000]}
18:34:47.263 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $689.89
18:34:47.263 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:52.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,34,52,200107000],"instrumentId":"AAPL","price":178.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,52,200714000]}
18:34:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.31
18:34:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,34,52,200107000],"instrumentId":"MSFT","price":424.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,52,202925000]}
18:34:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $424.44
18:34:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,34,52,200107000],"instrumentId":"GOOGL","price":135.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,52,203152000]}
18:34:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $135.69
18:34:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,34,52,200107000],"instrumentId":"JPM","price":166.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,52,203296000]}
18:34:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $166.80
18:34:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,34,52,200107000],"instrumentId":"BAC","price":32.84,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,52,203418000]}
18:34:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.84
18:34:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,34,52,200107000],"instrumentId":"NESN","price":104.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,52,203526000]}
18:34:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.06
18:34:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,34,52,200107000],"instrumentId":"ASML","price":691.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,52,203651000]}
18:34:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $691.06
18:34:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:57.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,34,57,198950000],"instrumentId":"AAPL","price":178.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,57,199101000]}
18:34:57.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.73
18:34:57.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:57.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,34,57,198950000],"instrumentId":"MSFT","price":423.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,57,199568000]}
18:34:57.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $423.52
18:34:57.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:57.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,34,57,198950000],"instrumentId":"GOOGL","price":135.33,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,57,199756000]}
18:34:57.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $135.33
18:34:57.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:57.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,34,57,198950000],"instrumentId":"JPM","price":168.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,57,199893000]}
18:34:57.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $168.04
18:34:57.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:57.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,34,57,198950000],"instrumentId":"BAC","price":32.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,57,199968000]}
18:34:57.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.73
18:34:57.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:57.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,34,57,198950000],"instrumentId":"NESN","price":105.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,57,200064000]}
18:34:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.01
18:34:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:34:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,34,57,198950000],"instrumentId":"ASML","price":694.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,34,57,200145000]}
18:34:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $694.97
18:34:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:02.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,35,2,203973000],"instrumentId":"AAPL","price":178.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,2,204052000]}
18:35:02.217 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_c33b3fab007a","remainingQuantity":17,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_c33b3fab007a","instrumentId":"ASML","accountId":"ACC004","date":[2025,5,24,18,35,2,202241000],"orderQuantity":25,"filledQuantity":8,"orderStatus":"REJECTED","orderPrice":165.11,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,35,2,202579000]}
18:35:02.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.17
18:35:02.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:02.219 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_c33b3fab007a (REJECTED ASML)
18:35:02.219 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:35:02.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,35,2,203973000],"instrumentId":"MSFT","price":423.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,2,204273000]}
18:35:02.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $423.15
18:35:02.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:02.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,35,2,203973000],"instrumentId":"GOOGL","price":135.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,2,204445000]}
18:35:02.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $135.67
18:35:02.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:02.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,35,2,203973000],"instrumentId":"JPM","price":168.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,2,204608000]}
18:35:02.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $168.52
18:35:02.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:02.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,35,2,203973000],"instrumentId":"BAC","price":32.57,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,2,204731000]}
18:35:02.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.57
18:35:02.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:02.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,35,2,203973000],"instrumentId":"NESN","price":105.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,2,204902000]}
18:35:02.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.63
18:35:02.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:02.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,35,2,203973000],"instrumentId":"ASML","price":695.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,2,205026000]}
18:35:02.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $695.88
18:35:02.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:07.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,35,7,202265000],"instrumentId":"AAPL","price":174.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,7,202404000]}
18:35:07.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.18
18:35:07.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:07.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,35,7,202265000],"instrumentId":"MSFT","price":424.41,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,7,202810000]}
18:35:07.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $424.41
18:35:07.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:07.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,35,7,202265000],"instrumentId":"GOOGL","price":136.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,7,202965000]}
18:35:07.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.02
18:35:07.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:07.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,35,7,202265000],"instrumentId":"JPM","price":168.83,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,7,203088000]}
18:35:07.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $168.83
18:35:07.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:07.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,35,7,202265000],"instrumentId":"BAC","price":32.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,7,203207000]}
18:35:07.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.69
18:35:07.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:07.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,35,7,202265000],"instrumentId":"NESN","price":105.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,7,203315000]}
18:35:07.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.98
18:35:07.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:07.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,35,7,202265000],"instrumentId":"ASML","price":699.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,7,203424000]}
18:35:07.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $699.54
18:35:07.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:12.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,35,12,201793000],"instrumentId":"AAPL","price":174.95,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,12,201878000]}
18:35:12.211 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_4a3bc2073912","remainingQuantity":23,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_4a3bc2073912","instrumentId":"AAPL","accountId":"ACC002","date":[2025,5,24,18,35,12,199988000],"orderQuantity":23,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":152.10,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,35,12,200210000]}
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.95
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_4a3bc2073912 (CREATED AAPL)
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,35,12,201793000],"instrumentId":"MSFT","price":423.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,12,202112000]}
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_c931005e26e2","remainingQuantity":92,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_c931005e26e2","instrumentId":"JPM","accountId":"ACC004","date":[2025,5,24,18,35,12,201485000],"orderQuantity":92,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":49.66,"orderType":"LIMIT","venue":"NYSE","timestamp":[2025,5,24,18,35,12,201576000]}
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $423.97
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_c931005e26e2 (CREATED JPM)
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,35,12,201793000],"instrumentId":"GOOGL","price":136.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,12,203329000]}
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.09
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,35,12,201793000],"instrumentId":"JPM","price":170.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,12,203489000]}
18:35:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $170.15
18:35:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,35,12,201793000],"instrumentId":"BAC","price":32.81,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,12,203657000]}
18:35:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.81
18:35:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,35,12,201793000],"instrumentId":"NESN","price":106.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,12,203777000]}
18:35:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.22
18:35:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,35,12,201793000],"instrumentId":"ASML","price":697.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,12,203917000]}
18:35:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $697.12
18:35:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:17.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,35,17,202373000],"instrumentId":"AAPL","price":174.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,17,202638000]}
18:35:17.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.82
18:35:17.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:17.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,35,17,202373000],"instrumentId":"MSFT","price":426.77,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,17,203052000]}
18:35:17.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $426.77
18:35:17.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:17.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,35,17,202373000],"instrumentId":"GOOGL","price":136.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,17,203235000]}
18:35:17.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.51
18:35:17.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:17.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,35,17,202373000],"instrumentId":"JPM","price":170.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,17,203362000]}
18:35:17.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $170.16
18:35:17.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:17.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,35,17,202373000],"instrumentId":"BAC","price":32.66,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,17,203517000]}
18:35:17.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.66
18:35:17.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:17.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,35,17,202373000],"instrumentId":"NESN","price":106.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,17,203639000]}
18:35:17.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.07
18:35:17.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:17.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,35,17,202373000],"instrumentId":"ASML","price":701.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,17,203757000]}
18:35:17.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $701.73
18:35:17.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:22.212 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_9b1366316b5c","remainingQuantity":40,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_9b1366316b5c","instrumentId":"GOOGL","accountId":"ACC002","date":[2025,5,24,18,35,22,202327000],"orderQuantity":40,"filledQuantity":0,"orderStatus":"FILLED","orderPrice":429.40,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,35,22,202509000]}
18:35:22.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,35,22,202861000],"instrumentId":"AAPL","price":174.99,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,22,202925000]}
18:35:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_9b1366316b5c (FILLED GOOGL)
18:35:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:35:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.99
18:35:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,35,22,202861000],"instrumentId":"MSFT","price":423.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,22,203106000]}
18:35:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $423.17
18:35:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,35,22,202861000],"instrumentId":"GOOGL","price":135.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,22,203226000]}
18:35:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $135.92
18:35:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,35,22,202861000],"instrumentId":"JPM","price":170.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,22,203334000]}
18:35:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $170.00
18:35:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,35,22,202861000],"instrumentId":"BAC","price":32.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,22,203434000]}
18:35:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.53
18:35:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,35,22,202861000],"instrumentId":"NESN","price":106.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,22,203542000]}
18:35:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.31
18:35:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,35,22,202861000],"instrumentId":"ASML","price":703.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,22,203656000]}
18:35:22.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $703.97
18:35:22.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:27.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,35,27,197805000],"instrumentId":"AAPL","price":174.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,27,198040000]}
18:35:27.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.98
18:35:27.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:27.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,35,27,197805000],"instrumentId":"MSFT","price":424.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,27,198675000]}
18:35:27.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $424.86
18:35:27.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:27.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,35,27,197805000],"instrumentId":"GOOGL","price":136.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,27,198803000]}
18:35:27.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.03
18:35:27.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:27.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,35,27,197805000],"instrumentId":"JPM","price":170.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,27,198912000]}
18:35:27.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $170.88
18:35:27.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:27.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,35,27,197805000],"instrumentId":"BAC","price":32.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,27,199022000]}
18:35:27.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.53
18:35:27.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:27.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,35,27,197805000],"instrumentId":"NESN","price":105.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,27,199137000]}
18:35:27.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.94
18:35:27.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:27.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,35,27,197805000],"instrumentId":"ASML","price":708.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,27,199237000]}
18:35:27.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $708.67
18:35:27.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:32.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,35,32,198356000],"instrumentId":"AAPL","price":174.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,32,198417000]}
18:35:32.207 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_56f0fc5e18f8","remainingQuantity":25,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_56f0fc5e18f8","instrumentId":"GOOGL","accountId":"ACC002","date":[2025,5,24,18,35,32,197541000],"orderQuantity":25,"filledQuantity":0,"orderStatus":"FILLED","orderPrice":330.56,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,35,32,197717000]}
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.48
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_56f0fc5e18f8 (FILLED GOOGL)
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_f435d30f7a51","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_f435d30f7a51","instrumentId":"GOOGL","accountId":"ACC003","date":[2025,5,24,18,35,32,198101000],"orderQuantity":25,"filledQuantity":25,"orderStatus":"FILLED","orderPrice":115.35,"orderType":"LIMIT","venue":"EURONEXT","timestamp":[2025,5,24,18,35,32,198168000]}
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,35,32,198356000],"instrumentId":"MSFT","price":424.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,32,198556000]}
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $424.01
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_f435d30f7a51 (FILLED GOOGL)
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,35,32,198356000],"instrumentId":"GOOGL","price":136.91,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,32,198695000]}
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.91
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:32.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,35,32,198356000],"instrumentId":"JPM","price":170.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,32,198798000]}
18:35:32.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $170.96
18:35:32.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:32.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,35,32,198356000],"instrumentId":"BAC","price":32.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,32,198893000]}
18:35:32.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.51
18:35:32.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:32.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,35,32,198356000],"instrumentId":"NESN","price":105.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,32,198999000]}
18:35:32.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.14
18:35:32.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:32.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,35,32,198356000],"instrumentId":"ASML","price":711.89,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,32,199094000]}
18:35:32.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $711.89
18:35:32.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,35,37,202301000],"instrumentId":"AAPL","price":173.77,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,37,202391000]}
18:35:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.77
18:35:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,35,37,202301000],"instrumentId":"MSFT","price":421.99,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,37,202729000]}
18:35:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $421.99
18:35:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,35,37,202301000],"instrumentId":"GOOGL","price":137.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,37,202809000]}
18:35:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.46
18:35:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,35,37,202301000],"instrumentId":"JPM","price":170.65,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,37,202893000]}
18:35:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $170.65
18:35:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,35,37,202301000],"instrumentId":"BAC","price":32.64,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,37,202958000]}
18:35:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.64
18:35:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,35,37,202301000],"instrumentId":"NESN","price":104.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,37,203024000]}
18:35:37.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.79
18:35:37.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:37.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,35,37,202301000],"instrumentId":"ASML","price":710.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,37,203098000]}
18:35:37.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $710.71
18:35:37.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_418888754b61","remainingQuantity":65,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_418888754b61","instrumentId":"GOOGL","accountId":"ACC002","date":[2025,5,24,18,35,42,208164000],"orderQuantity":65,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":229.89,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,35,42,208264000]}
18:35:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received intraday cash data: {"kafkaKey":"2025-05-24#GBP#ACC001","date":[2025,5,24,18,35,42,198411000],"instrumentId":"GBP","accountId":"ACC001","quantity":-122.38,"movementType":"FEE","referenceId":"FEE_1748108142199_944","timestamp":[2025,5,24,18,35,42,202283000]}
18:35:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,35,42,208706000],"instrumentId":"AAPL","price":175.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,42,208757000]}
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.23
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_418888754b61 (CREATED GOOGL)
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,35,42,208706000],"instrumentId":"MSFT","price":421.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,42,208886000]}
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_729774fd0594","remainingQuantity":13,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_729774fd0594","instrumentId":"GOOGL","accountId":"ACC004","date":[2025,5,24,18,35,42,208408000],"orderQuantity":13,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":103.74,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,35,42,208463000]}
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached cash movement: -122.38 GBP for account ACC001 (FEE)
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached intraday cash data
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received intraday cash data: {"kafkaKey":"2025-05-24#USD#ACC001","date":[2025,5,24,18,35,42,198411000],"instrumentId":"USD","accountId":"ACC001","quantity":-59.13,"movementType":"FEE","referenceId":"FEE_1748108142207_621","timestamp":[2025,5,24,18,35,42,207877000]}
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $421.61
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_729774fd0594 (CREATED GOOGL)
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached cash movement: -59.13 USD for account ACC001 (FEE)
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached intraday cash data
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,35,42,208706000],"instrumentId":"GOOGL","price":137.75,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,42,208995000]}
18:35:42.221 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_a4dbcf41997e","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_a4dbcf41997e","instrumentId":"AAPL","accountId":"ACC002","date":[2025,5,24,18,35,42,208575000],"orderQuantity":66,"filledQuantity":66,"orderStatus":"FILLED","orderPrice":355.91,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,35,42,208608000]}
18:35:42.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.75
18:35:42.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:42.223 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_a4dbcf41997e (FILLED AAPL)
18:35:42.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,35,42,208706000],"instrumentId":"JPM","price":174.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,42,209088000]}
18:35:42.223 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:35:42.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $174.61
18:35:42.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:42.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,35,42,208706000],"instrumentId":"BAC","price":32.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,42,209170000]}
18:35:42.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.52
18:35:42.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:42.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,35,42,208706000],"instrumentId":"NESN","price":105.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,42,209252000]}
18:35:42.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.52
18:35:42.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:42.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,35,42,208706000],"instrumentId":"ASML","price":715.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,42,209340000]}
18:35:42.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $715.56
18:35:42.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,35,47,200733000],"instrumentId":"AAPL","price":175.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,47,200934000]}
18:35:47.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.37
18:35:47.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:47.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,35,47,200733000],"instrumentId":"MSFT","price":419.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,47,213262000]}
18:35:47.230 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $419.15
18:35:47.230 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:47.230 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,35,47,200733000],"instrumentId":"GOOGL","price":138.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,47,213831000]}
18:35:47.231 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.34
18:35:47.231 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:47.231 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,35,47,200733000],"instrumentId":"JPM","price":174.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,47,215304000]}
18:35:47.233 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $174.06
18:35:47.233 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:47.233 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,35,47,200733000],"instrumentId":"BAC","price":32.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,47,216290000]}
18:35:47.234 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.56
18:35:47.234 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:47.234 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,35,47,200733000],"instrumentId":"NESN","price":105.45,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,47,216494000]}
18:35:47.234 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.45
18:35:47.234 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:47.234 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,35,47,200733000],"instrumentId":"ASML","price":716.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,47,216768000]}
18:35:47.235 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $716.00
18:35:47.235 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,35,52,203985000],"instrumentId":"AAPL","price":175.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,52,204066000]}
18:35:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_e109074e040f","remainingQuantity":48,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_e109074e040f","instrumentId":"AAPL","accountId":"ACC003","date":[2025,5,24,18,35,52,202474000],"orderQuantity":83,"filledQuantity":35,"orderStatus":"FILLED","orderPrice":58.17,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,35,52,202788000]}
18:35:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.79
18:35:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,35,52,203985000],"instrumentId":"MSFT","price":419.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,52,204230000]}
18:35:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_e109074e040f (FILLED AAPL)
18:35:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:35:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $419.90
18:35:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,35,52,203985000],"instrumentId":"GOOGL","price":139.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,52,204327000]}
18:35:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.26
18:35:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,35,52,203985000],"instrumentId":"JPM","price":174.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,52,204429000]}
18:35:52.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $174.71
18:35:52.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:52.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,35,52,203985000],"instrumentId":"BAC","price":32.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,52,204518000]}
18:35:52.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.53
18:35:52.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:52.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,35,52,203985000],"instrumentId":"NESN","price":104.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,52,204602000]}
18:35:52.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.79
18:35:52.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:52.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,35,52,203985000],"instrumentId":"ASML","price":716.47,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,52,204693000]}
18:35:52.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $716.47
18:35:52.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:57.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,35,57,202468000],"instrumentId":"AAPL","price":175.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,57,202635000]}
18:35:57.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.46
18:35:57.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:57.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,35,57,202468000],"instrumentId":"MSFT","price":417.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,57,203035000]}
18:35:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $417.82
18:35:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,35,57,202468000],"instrumentId":"GOOGL","price":140.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,57,203200000]}
18:35:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.44
18:35:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,35,57,202468000],"instrumentId":"JPM","price":174.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,57,203298000]}
18:35:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $174.12
18:35:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,35,57,202468000],"instrumentId":"BAC","price":32.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,57,203401000]}
18:35:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.50
18:35:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,35,57,202468000],"instrumentId":"NESN","price":104.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,57,203492000]}
18:35:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.58
18:35:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:35:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,35,57,202468000],"instrumentId":"ASML","price":721.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,35,57,203595000]}
18:35:57.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $721.01
18:35:57.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,36,2,202759000],"instrumentId":"AAPL","price":173.99,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,2,202994000]}
18:36:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.99
18:36:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,36,2,202759000],"instrumentId":"MSFT","price":420.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,2,203840000]}
18:36:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $420.74
18:36:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,36,2,202759000],"instrumentId":"GOOGL","price":141.29,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,2,203963000]}
18:36:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.29
18:36:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,36,2,202759000],"instrumentId":"JPM","price":173.57,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,2,204056000]}
18:36:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $173.57
18:36:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,36,2,202759000],"instrumentId":"BAC","price":32.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,2,204159000]}
18:36:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.38
18:36:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,36,2,202759000],"instrumentId":"NESN","price":103.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,2,204265000]}
18:36:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.94
18:36:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,36,2,202759000],"instrumentId":"ASML","price":721.66,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,2,204345000]}
18:36:02.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $721.66
18:36:02.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:07.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,36,7,202491000],"instrumentId":"AAPL","price":177.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,7,202675000]}
18:36:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.71
18:36:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,36,7,202491000],"instrumentId":"MSFT","price":422.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,7,203008000]}
18:36:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $422.69
18:36:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,36,7,202491000],"instrumentId":"GOOGL","price":140.93,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,7,203137000]}
18:36:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.93
18:36:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,36,7,202491000],"instrumentId":"JPM","price":173.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,7,203226000]}
18:36:07.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $173.15
18:36:07.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:07.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,36,7,202491000],"instrumentId":"BAC","price":32.29,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,7,203294000]}
18:36:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.29
18:36:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,36,7,202491000],"instrumentId":"NESN","price":104.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,7,203360000]}
18:36:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.88
18:36:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,36,7,202491000],"instrumentId":"ASML","price":721.29,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,7,203432000]}
18:36:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $721.29
18:36:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:12.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,36,12,203522000],"instrumentId":"AAPL","price":177.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,12,203580000]}
18:36:12.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_db58f73d2346","remainingQuantity":18,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_db58f73d2346","instrumentId":"AAPL","accountId":"ACC001","date":[2025,5,24,18,36,12,202577000],"orderQuantity":18,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":50.69,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,36,12,202880000]}
18:36:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_db58f73d2346 (CREATED AAPL)
18:36:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:36:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.27
18:36:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,36,12,203522000],"instrumentId":"MSFT","price":422.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,12,203707000]}
18:36:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $422.28
18:36:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,36,12,203522000],"instrumentId":"GOOGL","price":139.89,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,12,203795000]}
18:36:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.89
18:36:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,36,12,203522000],"instrumentId":"JPM","price":177.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,12,203892000]}
18:36:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $177.97
18:36:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,36,12,203522000],"instrumentId":"BAC","price":32.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,12,203988000]}
18:36:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.39
18:36:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,36,12,203522000],"instrumentId":"NESN","price":104.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,12,204067000]}
18:36:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.79
18:36:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,36,12,203522000],"instrumentId":"ASML","price":720.49,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,12,204155000]}
18:36:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $720.49
18:36:12.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:17.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,36,17,202518000],"instrumentId":"AAPL","price":176.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,17,202682000]}
18:36:17.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.11
18:36:17.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:17.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,36,17,202518000],"instrumentId":"MSFT","price":424.93,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,17,202995000]}
18:36:17.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $424.93
18:36:17.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:17.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,36,17,202518000],"instrumentId":"GOOGL","price":140.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,17,203103000]}
18:36:17.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.01
18:36:17.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:17.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,36,17,202518000],"instrumentId":"JPM","price":178.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,17,203178000]}
18:36:17.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $178.23
18:36:17.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:17.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,36,17,202518000],"instrumentId":"BAC","price":31.89,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,17,203247000]}
18:36:17.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.89
18:36:17.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:17.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,36,17,202518000],"instrumentId":"NESN","price":104.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,17,203312000]}
18:36:17.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.76
18:36:17.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:17.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,36,17,202518000],"instrumentId":"ASML","price":722.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,17,204252000]}
18:36:17.225 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $722.24
18:36:17.225 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,36,22,203699000],"instrumentId":"AAPL","price":176.47,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,22,203741000]}
18:36:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_2816ead68c8a","remainingQuantity":14,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_2816ead68c8a","instrumentId":"JPM","accountId":"ACC005","date":[2025,5,24,18,36,22,202543000],"orderQuantity":30,"filledQuantity":16,"orderStatus":"FILLED","orderPrice":199.17,"orderType":"LIMIT","venue":"NYSE","timestamp":[2025,5,24,18,36,22,202771000]}
18:36:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_2816ead68c8a (FILLED JPM)
18:36:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:36:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.47
18:36:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_a2df2efc57dc","remainingQuantity":6,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_a2df2efc57dc","instrumentId":"GOOGL","accountId":"ACC001","date":[2025,5,24,18,36,22,203488000],"orderQuantity":52,"filledQuantity":46,"orderStatus":"CANCELLED","orderPrice":494.26,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,36,22,203565000]}
18:36:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,36,22,203699000],"instrumentId":"MSFT","price":423.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,22,203858000]}
18:36:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_a2df2efc57dc (CANCELLED GOOGL)
18:36:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:36:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $423.63
18:36:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,36,22,203699000],"instrumentId":"GOOGL","price":139.91,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,22,203939000]}
18:36:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.91
18:36:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:22.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,36,22,203699000],"instrumentId":"JPM","price":179.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,22,204029000]}
18:36:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.34
18:36:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,36,22,203699000],"instrumentId":"BAC","price":31.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,22,204111000]}
18:36:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.61
18:36:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:22.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,36,22,203699000],"instrumentId":"NESN","price":105.41,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,22,204179000]}
18:36:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.41
18:36:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,36,22,203699000],"instrumentId":"ASML","price":721.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,22,204249000]}
18:36:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $721.36
18:36:22.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:27.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,36,27,202564000],"instrumentId":"AAPL","price":175.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,27,202745000]}
18:36:27.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.98
18:36:27.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:27.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,36,27,202564000],"instrumentId":"MSFT","price":434.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,27,203108000]}
18:36:27.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $434.80
18:36:27.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:27.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,36,27,202564000],"instrumentId":"GOOGL","price":139.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,27,203209000]}
18:36:27.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.15
18:36:27.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:27.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,36,27,202564000],"instrumentId":"JPM","price":179.64,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,27,203288000]}
18:36:27.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.64
18:36:27.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:27.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,36,27,202564000],"instrumentId":"BAC","price":31.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,27,203358000]}
18:36:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.63
18:36:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,36,27,202564000],"instrumentId":"NESN","price":106.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,27,203430000]}
18:36:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.15
18:36:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,36,27,202564000],"instrumentId":"ASML","price":726.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,27,203498000]}
18:36:27.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $726.06
18:36:27.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:32.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,36,32,204262000],"instrumentId":"AAPL","price":175.84,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,32,204313000]}
18:36:32.217 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_9d670c76cdb5","remainingQuantity":20,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_9d670c76cdb5","instrumentId":"MSFT","accountId":"ACC004","date":[2025,5,24,18,36,32,202585000],"orderQuantity":24,"filledQuantity":4,"orderStatus":"CANCELLED","orderPrice":153.44,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,36,32,202779000]}
18:36:32.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.84
18:36:32.219 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_9d670c76cdb5 (CANCELLED MSFT)
18:36:32.219 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:36:32.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:32.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,36,32,204262000],"instrumentId":"MSFT","price":438.30,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,32,204410000]}
18:36:32.219 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_dd149a908cc8","remainingQuantity":11,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_dd149a908cc8","instrumentId":"AAPL","accountId":"ACC002","date":[2025,5,24,18,36,32,204103000],"orderQuantity":11,"filledQuantity":0,"orderStatus":"FILLED","orderPrice":379.45,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,36,32,204157000]}
18:36:32.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $438.30
18:36:32.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:32.220 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_dd149a908cc8 (FILLED AAPL)
18:36:32.220 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:36:32.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,36,32,204262000],"instrumentId":"GOOGL","price":139.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,32,204501000]}
18:36:32.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.46
18:36:32.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:32.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,36,32,204262000],"instrumentId":"JPM","price":179.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,32,204572000]}
18:36:32.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.76
18:36:32.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:32.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,36,32,204262000],"instrumentId":"BAC","price":31.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,32,204629000]}
18:36:32.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.70
18:36:32.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:32.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,36,32,204262000],"instrumentId":"NESN","price":106.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,32,204693000]}
18:36:32.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.27
18:36:32.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:32.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,36,32,204262000],"instrumentId":"ASML","price":722.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,32,204757000]}
18:36:32.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $722.73
18:36:32.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:37.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,36,37,202596000],"instrumentId":"AAPL","price":174.45,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,37,202717000]}
18:36:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.45
18:36:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,36,37,202596000],"instrumentId":"MSFT","price":438.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,37,203089000]}
18:36:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $438.20
18:36:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,36,37,202596000],"instrumentId":"GOOGL","price":139.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,37,203193000]}
18:36:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.36
18:36:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,36,37,202596000],"instrumentId":"JPM","price":180.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,37,203266000]}
18:36:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.03
18:36:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,36,37,202596000],"instrumentId":"BAC","price":31.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,37,203327000]}
18:36:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.58
18:36:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,36,37,202596000],"instrumentId":"NESN","price":106.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,37,203432000]}
18:36:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.51
18:36:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:37.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,36,37,202596000],"instrumentId":"ASML","price":718.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,37,203497000]}
18:36:37.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $718.69
18:36:37.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,36,42,205455000],"instrumentId":"AAPL","price":174.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,42,205528000]}
18:36:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_7b994e3239cf","remainingQuantity":617,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_7b994e3239cf","instrumentId":"JPM","accountId":"ACC002","date":[2025,5,24,18,36,42,203043000],"orderQuantity":617,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":32.94,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,36,42,203362000]}
18:36:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.73
18:36:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_7b994e3239cf (CREATED JPM)
18:36:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:36:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,36,42,205455000],"instrumentId":"MSFT","price":436.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,42,205642000]}
18:36:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_ea11e50ededd","remainingQuantity":57,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_ea11e50ededd","instrumentId":"MSFT","accountId":"ACC005","date":[2025,5,24,18,36,42,204868000],"orderQuantity":57,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":381.97,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,36,42,204922000]}
18:36:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $436.20
18:36:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_ea11e50ededd (CREATED MSFT)
18:36:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:36:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_9a4eabdb9863","remainingQuantity":23,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_9a4eabdb9863","instrumentId":"MSFT","accountId":"ACC002","date":[2025,5,24,18,36,42,205048000],"orderQuantity":23,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":375.09,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,36,42,205083000]}
18:36:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,36,42,205455000],"instrumentId":"GOOGL","price":138.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,42,205704000]}
18:36:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.94
18:36:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_9a4eabdb9863 (CREATED MSFT)
18:36:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:36:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,36,42,205455000],"instrumentId":"JPM","price":180.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,42,205781000]}
18:36:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_055f5372b355","remainingQuantity":64,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_055f5372b355","instrumentId":"BAC","accountId":"ACC001","date":[2025,5,24,18,36,42,205231000],"orderQuantity":79,"filledQuantity":15,"orderStatus":"PARTIALLY_FILLED","orderPrice":104.20,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,36,42,205276000]}
18:36:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.63
18:36:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_055f5372b355 (PARTIALLY_FILLED BAC)
18:36:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:36:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,36,42,205455000],"instrumentId":"BAC","price":31.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,42,205851000]}
18:36:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.86
18:36:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,36,42,205455000],"instrumentId":"NESN","price":106.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,42,205947000]}
18:36:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.51
18:36:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,36,42,205455000],"instrumentId":"ASML","price":720.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,42,206012000]}
18:36:42.220 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_798d9fe1c86e","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_798d9fe1c86e","instrumentId":"NESN","accountId":"ACC003","date":[2025,5,24,18,36,42,205342000],"orderQuantity":86,"filledQuantity":86,"orderStatus":"REJECTED","orderPrice":422.00,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,36,42,205375000]}
18:36:42.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $720.38
18:36:42.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:42.220 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_798d9fe1c86e (REJECTED NESN)
18:36:42.220 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:36:47.232 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,36,47,200854000],"instrumentId":"AAPL","price":174.99,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,47,201221000]}
18:36:47.234 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.99
18:36:47.234 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:47.234 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,36,47,200854000],"instrumentId":"MSFT","price":433.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,47,217689000]}
18:36:47.235 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $433.15
18:36:47.235 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:47.235 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,36,47,200854000],"instrumentId":"GOOGL","price":138.45,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,47,219774000]}
18:36:47.236 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.45
18:36:47.236 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:47.236 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,36,47,200854000],"instrumentId":"JPM","price":181.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,47,221318000]}
18:36:47.237 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.34
18:36:47.237 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:47.237 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,36,47,200854000],"instrumentId":"BAC","price":31.68,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,47,224624000]}
18:36:47.238 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.68
18:36:47.238 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:47.238 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,36,47,200854000],"instrumentId":"NESN","price":105.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,47,226203000]}
18:36:47.238 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.82
18:36:47.238 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:47.238 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,36,47,200854000],"instrumentId":"ASML","price":717.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,47,226972000]}
18:36:47.239 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $717.13
18:36:47.239 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:52.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,36,52,202569000],"instrumentId":"AAPL","price":179.75,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,52,202651000]}
18:36:52.211 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_42134a9f871d","remainingQuantity":967,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_42134a9f871d","instrumentId":"GOOGL","accountId":"ACC001","date":[2025,5,24,18,36,52,201148000],"orderQuantity":967,"filledQuantity":0,"orderStatus":"FILLED","orderPrice":199.37,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,36,52,201387000]}
18:36:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.75
18:36:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_42134a9f871d (FILLED GOOGL)
18:36:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:36:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,36,52,202569000],"instrumentId":"MSFT","price":432.83,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,52,202776000]}
18:36:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $432.83
18:36:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,36,52,202569000],"instrumentId":"GOOGL","price":138.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,52,202847000]}
18:36:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.79
18:36:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:52.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,36,52,202569000],"instrumentId":"JPM","price":180.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,52,202913000]}
18:36:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.44
18:36:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,36,52,202569000],"instrumentId":"BAC","price":31.64,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,52,202974000]}
18:36:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.64
18:36:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,36,52,202569000],"instrumentId":"NESN","price":106.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,52,203023000]}
18:36:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.18
18:36:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,36,52,202569000],"instrumentId":"ASML","price":712.62,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,52,203076000]}
18:36:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $712.62
18:36:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:57.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,36,57,200827000],"instrumentId":"AAPL","price":179.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,57,200934000]}
18:36:57.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $179.54
18:36:57.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:57.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,36,57,200827000],"instrumentId":"MSFT","price":434.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,57,201243000]}
18:36:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $434.79
18:36:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,36,57,200827000],"instrumentId":"GOOGL","price":138.68,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,57,201329000]}
18:36:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.68
18:36:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,36,57,200827000],"instrumentId":"JPM","price":179.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,57,201383000]}
18:36:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.78
18:36:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,36,57,200827000],"instrumentId":"BAC","price":31.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,57,201432000]}
18:36:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.36
18:36:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,36,57,200827000],"instrumentId":"NESN","price":105.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,57,201478000]}
18:36:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.78
18:36:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:36:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,36,57,200827000],"instrumentId":"ASML","price":713.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,36,57,201535000]}
18:36:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $713.06
18:36:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:02.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,37,2,200392000],"instrumentId":"AAPL","price":175.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,2,200428000]}
18:37:02.210 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_fa5c284ffcd4","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_fa5c284ffcd4","instrumentId":"ASML","accountId":"ACC002","date":[2025,5,24,18,37,2,199542000],"orderQuantity":75,"filledQuantity":75,"orderStatus":"CANCELLED","orderPrice":165.49,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,37,2,199769000]}
18:37:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.53
18:37:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_fa5c284ffcd4 (CANCELLED ASML)
18:37:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:37:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,37,2,200392000],"instrumentId":"MSFT","price":434.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,2,200522000]}
18:37:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_611cdc34037c","remainingQuantity":147,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_611cdc34037c","instrumentId":"GOOGL","accountId":"ACC005","date":[2025,5,24,18,37,2,200254000],"orderQuantity":230,"filledQuantity":83,"orderStatus":"CANCELLED","orderPrice":262.12,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,37,2,200302000]}
18:37:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $434.34
18:37:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_611cdc34037c (CANCELLED GOOGL)
18:37:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:37:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,37,2,200392000],"instrumentId":"GOOGL","price":139.40,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,2,200591000]}
18:37:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.40
18:37:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,37,2,200392000],"instrumentId":"JPM","price":179.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,2,200642000]}
18:37:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.55
18:37:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,37,2,200392000],"instrumentId":"BAC","price":31.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,2,200689000]}
18:37:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.23
18:37:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,37,2,200392000],"instrumentId":"NESN","price":105.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,2,200737000]}
18:37:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.85
18:37:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:02.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,37,2,200392000],"instrumentId":"ASML","price":725.60,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,2,200781000]}
18:37:02.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $725.60
18:37:02.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,37,7,202366000],"instrumentId":"AAPL","price":177.08,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,7,202483000]}
18:37:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.08
18:37:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,37,7,202366000],"instrumentId":"MSFT","price":434.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,7,203660000]}
18:37:07.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $434.16
18:37:07.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:07.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,37,7,202366000],"instrumentId":"GOOGL","price":139.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,7,203732000]}
18:37:07.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.52
18:37:07.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:07.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,37,7,202366000],"instrumentId":"JPM","price":178.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,7,203787000]}
18:37:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $178.44
18:37:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,37,7,202366000],"instrumentId":"BAC","price":31.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,7,203833000]}
18:37:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.06
18:37:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:07.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,37,7,202366000],"instrumentId":"NESN","price":105.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,7,203887000]}
18:37:07.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.88
18:37:07.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:07.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,37,7,202366000],"instrumentId":"ASML","price":726.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,7,203938000]}
18:37:07.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $726.85
18:37:07.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:12.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,37,12,203255000],"instrumentId":"AAPL","price":175.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,12,203301000]}
18:37:12.212 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_d6a07986dd76","remainingQuantity":68,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_d6a07986dd76","instrumentId":"JPM","accountId":"ACC005","date":[2025,5,24,18,37,12,202759000],"orderQuantity":68,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":320.36,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,37,12,202901000]}
18:37:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_d6a07986dd76 (CREATED JPM)
18:37:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:37:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.61
18:37:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,37,12,203255000],"instrumentId":"MSFT","price":437.68,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,12,203395000]}
18:37:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $437.68
18:37:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:12.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,37,12,203255000],"instrumentId":"GOOGL","price":139.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,12,203462000]}
18:37:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.42
18:37:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,37,12,203255000],"instrumentId":"JPM","price":179.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,12,203515000]}
18:37:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.82
18:37:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:12.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,37,12,203255000],"instrumentId":"BAC","price":31.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,12,203563000]}
18:37:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.21
18:37:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,37,12,203255000],"instrumentId":"NESN","price":105.62,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,12,203606000]}
18:37:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.62
18:37:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,37,12,203255000],"instrumentId":"ASML","price":728.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,12,203657000]}
18:37:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $728.06
18:37:12.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:17.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,37,17,202802000],"instrumentId":"AAPL","price":175.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,17,202926000]}
18:37:17.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.72
18:37:17.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:17.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,37,17,202802000],"instrumentId":"MSFT","price":437.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,17,203204000]}
18:37:17.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $437.03
18:37:17.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:17.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,37,17,202802000],"instrumentId":"GOOGL","price":139.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,17,203268000]}
18:37:17.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.12
18:37:17.225 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:17.225 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,37,17,202802000],"instrumentId":"JPM","price":179.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,17,203321000]}
18:37:17.225 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.98
18:37:17.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:17.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,37,17,202802000],"instrumentId":"BAC","price":30.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,17,203372000]}
18:37:17.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.94
18:37:17.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:17.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,37,17,202802000],"instrumentId":"NESN","price":104.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,17,203426000]}
18:37:17.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.88
18:37:17.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:17.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,37,17,202802000],"instrumentId":"ASML","price":726.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,17,203474000]}
18:37:17.230 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $726.28
18:37:17.230 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:22.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,37,22,198647000],"instrumentId":"AAPL","price":176.30,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,22,198792000]}
18:37:22.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.30
18:37:22.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:22.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,37,22,198647000],"instrumentId":"MSFT","price":429.30,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,22,199635000]}
18:37:22.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $429.30
18:37:22.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:22.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,37,22,198647000],"instrumentId":"GOOGL","price":138.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,22,199726000]}
18:37:22.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.88
18:37:22.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:22.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,37,22,198647000],"instrumentId":"JPM","price":180.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,22,199789000]}
18:37:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.52
18:37:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,37,22,198647000],"instrumentId":"BAC","price":30.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,22,199897000]}
18:37:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.94
18:37:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:22.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,37,22,198647000],"instrumentId":"NESN","price":104.91,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,22,199943000]}
18:37:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.91
18:37:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,37,22,198647000],"instrumentId":"ASML","price":730.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,22,199985000]}
18:37:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $730.85
18:37:22.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:27.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,37,27,202815000],"instrumentId":"AAPL","price":175.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,27,202927000]}
18:37:27.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.48
18:37:27.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:27.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,37,27,202815000],"instrumentId":"MSFT","price":429.57,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,27,203283000]}
18:37:27.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $429.57
18:37:27.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:27.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,37,27,202815000],"instrumentId":"GOOGL","price":139.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,27,203347000]}
18:37:27.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.76
18:37:27.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:27.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,37,27,202815000],"instrumentId":"JPM","price":179.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,27,203408000]}
18:37:27.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.22
18:37:27.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:27.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,37,27,202815000],"instrumentId":"BAC","price":30.93,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,27,203458000]}
18:37:27.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.93
18:37:27.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:27.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,37,27,202815000],"instrumentId":"NESN","price":104.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,27,203516000]}
18:37:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.82
18:37:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,37,27,202815000],"instrumentId":"ASML","price":735.49,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,27,203565000]}
18:37:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $735.49
18:37:27.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:32.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,37,32,200317000],"instrumentId":"AAPL","price":175.64,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,32,200371000]}
18:37:32.209 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_d2c057a1d5e5","remainingQuantity":73,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_d2c057a1d5e5","instrumentId":"ASML","accountId":"ACC003","date":[2025,5,24,18,37,32,198894000],"orderQuantity":366,"filledQuantity":293,"orderStatus":"PARTIALLY_FILLED","orderPrice":152.90,"orderType":"LIMIT","venue":"EURONEXT","timestamp":[2025,5,24,18,37,32,199132000]}
18:37:32.210 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_d2c057a1d5e5 (PARTIALLY_FILLED ASML)
18:37:32.210 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:37:32.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.64
18:37:32.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:32.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,37,32,200317000],"instrumentId":"MSFT","price":428.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,32,200491000]}
18:37:32.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $428.51
18:37:32.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:32.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,37,32,200317000],"instrumentId":"GOOGL","price":138.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,32,200550000]}
18:37:32.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.58
18:37:32.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:32.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,37,32,200317000],"instrumentId":"JPM","price":181.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,32,200608000]}
18:37:32.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.00
18:37:32.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:32.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,37,32,200317000],"instrumentId":"BAC","price":31.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,32,200660000]}
18:37:32.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.01
18:37:32.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:32.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,37,32,200317000],"instrumentId":"NESN","price":103.93,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,32,200736000]}
18:37:32.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.93
18:37:32.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,37,32,200317000],"instrumentId":"ASML","price":735.19,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,32,200783000]}
18:37:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $735.19
18:37:32.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:37.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,37,37,200590000],"instrumentId":"AAPL","price":176.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,37,200778000]}
18:37:37.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.54
18:37:37.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:37.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,37,37,200590000],"instrumentId":"MSFT","price":429.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,37,201136000]}
18:37:37.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $429.63
18:37:37.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:37.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,37,37,200590000],"instrumentId":"GOOGL","price":138.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,37,201202000]}
18:37:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.07
18:37:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,37,37,200590000],"instrumentId":"JPM","price":181.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,37,201253000]}
18:37:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.42
18:37:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:37.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,37,37,200590000],"instrumentId":"BAC","price":30.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,37,201298000]}
18:37:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.87
18:37:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,37,37,200590000],"instrumentId":"NESN","price":103.68,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,37,201340000]}
18:37:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.68
18:37:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:37.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,37,37,200590000],"instrumentId":"ASML","price":737.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,37,201387000]}
18:37:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $737.42
18:37:37.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:42.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_4b0412e8acd3","remainingQuantity":78,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_4b0412e8acd3","instrumentId":"NESN","accountId":"ACC004","date":[2025,5,24,18,37,42,202036000],"orderQuantity":78,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":118.00,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,37,42,202164000]}
18:37:42.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,37,42,202845000],"instrumentId":"AAPL","price":176.49,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,42,202879000]}
18:37:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.49
18:37:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_4b0412e8acd3 (CREATED NESN)
18:37:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,37,42,202845000],"instrumentId":"MSFT","price":428.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,42,202963000]}
18:37:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:37:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_97a0c083b4cd","remainingQuantity":57,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_97a0c083b4cd","instrumentId":"AAPL","accountId":"ACC002","date":[2025,5,24,18,37,42,202609000],"orderQuantity":57,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":153.79,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,37,42,202669000]}
18:37:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $428.31
18:37:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_97a0c083b4cd (CREATED AAPL)
18:37:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,37,42,202845000],"instrumentId":"GOOGL","price":138.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,42,203006000]}
18:37:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:37:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_9875db32b201","remainingQuantity":36,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_9875db32b201","instrumentId":"AAPL","accountId":"ACC005","date":[2025,5,24,18,37,42,202727000],"orderQuantity":36,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":252.24,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,37,42,202755000]}
18:37:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.28
18:37:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_9875db32b201 (CREATED AAPL)
18:37:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:37:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,37,42,202845000],"instrumentId":"JPM","price":177.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,42,203053000]}
18:37:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $177.97
18:37:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,37,42,202845000],"instrumentId":"BAC","price":30.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,42,203093000]}
18:37:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $30.86
18:37:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,37,42,202845000],"instrumentId":"NESN","price":103.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,42,203131000]}
18:37:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.97
18:37:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,37,42,202845000],"instrumentId":"ASML","price":739.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,42,203170000]}
18:37:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $739.37
18:37:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:47.224 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,37,47,200926000],"instrumentId":"AAPL","price":176.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,47,201234000]}
18:37:47.225 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.11
18:37:47.225 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:47.225 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,37,47,200926000],"instrumentId":"MSFT","price":426.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,47,204268000]}
18:37:47.226 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $426.16
18:37:47.226 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:47.226 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,37,47,200926000],"instrumentId":"GOOGL","price":138.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,47,204345000]}
18:37:47.226 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.14
18:37:47.226 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,37,47,200926000],"instrumentId":"JPM","price":178.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,47,204404000]}
18:37:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $178.14
18:37:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:47.227 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,37,47,200926000],"instrumentId":"BAC","price":31.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,47,214300000]}
18:37:47.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.06
18:37:47.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:47.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,37,47,200926000],"instrumentId":"NESN","price":104.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,47,215678000]}
18:37:47.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.79
18:37:47.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:47.228 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,37,47,200926000],"instrumentId":"ASML","price":746.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,47,218507000]}
18:37:47.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $746.42
18:37:47.229 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:52.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,37,52,200212000],"instrumentId":"AAPL","price":176.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,52,200311000]}
18:37:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.74
18:37:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,37,52,200212000],"instrumentId":"MSFT","price":425.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,52,201343000]}
18:37:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $425.37
18:37:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:52.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,37,52,200212000],"instrumentId":"GOOGL","price":138.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,52,201413000]}
18:37:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.70
18:37:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:52.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,37,52,200212000],"instrumentId":"JPM","price":179.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,52,201457000]}
18:37:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.53
18:37:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,37,52,200212000],"instrumentId":"BAC","price":31.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,52,201502000]}
18:37:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.11
18:37:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:52.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,37,52,200212000],"instrumentId":"NESN","price":104.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,52,201541000]}
18:37:52.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.56
18:37:52.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:52.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,37,52,200212000],"instrumentId":"ASML","price":746.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,52,201578000]}
18:37:52.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $746.46
18:37:52.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:57.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,37,57,200021000],"instrumentId":"AAPL","price":176.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,57,200142000]}
18:37:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.39
18:37:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:57.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,37,57,200021000],"instrumentId":"MSFT","price":423.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,57,200611000]}
18:37:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $423.78
18:37:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:57.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,37,57,200021000],"instrumentId":"GOOGL","price":138.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,57,200676000]}
18:37:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.55
18:37:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,37,57,200021000],"instrumentId":"JPM","price":182.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,57,200718000]}
18:37:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $182.04
18:37:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,37,57,200021000],"instrumentId":"BAC","price":31.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,57,200764000]}
18:37:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.13
18:37:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:57.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,37,57,200021000],"instrumentId":"NESN","price":103.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,57,200826000]}
18:37:57.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.25
18:37:57.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:37:57.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,37,57,200021000],"instrumentId":"ASML","price":749.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,37,57,200862000]}
18:37:57.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $749.06
18:37:57.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:02.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,38,2,202919000],"instrumentId":"AAPL","price":176.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,2,202955000]}
18:38:02.211 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_7b3c77f06e05","remainingQuantity":95,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_7b3c77f06e05","instrumentId":"MSFT","accountId":"ACC002","date":[2025,5,24,18,38,2,202320000],"orderQuantity":95,"filledQuantity":0,"orderStatus":"CANCELLED","orderPrice":194.61,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,38,2,202591000]}
18:38:02.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.51
18:38:02.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:02.212 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_7b3c77f06e05 (CANCELLED MSFT)
18:38:02.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,38,2,202919000],"instrumentId":"MSFT","price":425.59,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,2,203041000]}
18:38:02.212 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:38:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $425.59
18:38:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,38,2,202919000],"instrumentId":"GOOGL","price":138.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,2,203141000]}
18:38:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.25
18:38:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,38,2,202919000],"instrumentId":"JPM","price":181.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,2,203184000]}
18:38:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.17
18:38:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:02.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,38,2,202919000],"instrumentId":"BAC","price":31.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,2,203225000]}
18:38:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.17
18:38:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,38,2,202919000],"instrumentId":"NESN","price":103.64,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,2,203266000]}
18:38:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.64
18:38:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:02.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,38,2,202919000],"instrumentId":"ASML","price":744.64,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,2,203301000]}
18:38:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $744.64
18:38:02.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:07.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,38,7,198808000],"instrumentId":"AAPL","price":176.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,7,198965000]}
18:38:07.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.86
18:38:07.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:07.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,38,7,198808000],"instrumentId":"MSFT","price":423.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,7,199302000]}
18:38:07.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $423.51
18:38:07.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:07.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,38,7,198808000],"instrumentId":"GOOGL","price":138.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,7,199356000]}
18:38:07.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.52
18:38:07.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:07.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,38,7,198808000],"instrumentId":"JPM","price":180.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,7,199402000]}
18:38:07.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.79
18:38:07.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:07.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,38,7,198808000],"instrumentId":"BAC","price":31.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,7,199444000]}
18:38:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.25
18:38:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,38,7,198808000],"instrumentId":"NESN","price":101.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,7,199495000]}
18:38:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $101.36
18:38:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:07.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,38,7,198808000],"instrumentId":"ASML","price":740.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,7,199533000]}
18:38:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $740.38
18:38:07.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:12.207 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_22dd70a99552","remainingQuantity":78,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_22dd70a99552","instrumentId":"NESN","accountId":"ACC005","date":[2025,5,24,18,38,12,192392000],"orderQuantity":78,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":367.49,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,38,12,192590000]}
18:38:12.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,38,12,193061000],"instrumentId":"AAPL","price":176.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,12,193092000]}
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_22dd70a99552 (CREATED NESN)
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.43
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_cf7262f6c5ae","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_cf7262f6c5ae","instrumentId":"JPM","accountId":"ACC001","date":[2025,5,24,18,38,12,192946000],"orderQuantity":26,"filledQuantity":26,"orderStatus":"FILLED","orderPrice":362.78,"orderType":"LIMIT","venue":"EURONEXT","timestamp":[2025,5,24,18,38,12,192984000]}
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,38,12,193061000],"instrumentId":"MSFT","price":421.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,12,193178000]}
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_cf7262f6c5ae (FILLED JPM)
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $421.24
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,38,12,193061000],"instrumentId":"GOOGL","price":138.59,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,12,193223000]}
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.59
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:12.209 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,38,12,193061000],"instrumentId":"JPM","price":181.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,12,193261000]}
18:38:12.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.16
18:38:12.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:12.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,38,12,193061000],"instrumentId":"BAC","price":31.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,12,193303000]}
18:38:12.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.26
18:38:12.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:12.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,38,12,193061000],"instrumentId":"NESN","price":100.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,12,193370000]}
18:38:12.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $100.48
18:38:12.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:12.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,38,12,193061000],"instrumentId":"ASML","price":742.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,12,193409000]}
18:38:12.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $742.02
18:38:12.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:17.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,38,17,190745000],"instrumentId":"AAPL","price":174.91,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,17,190839000]}
18:38:17.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.91
18:38:17.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:17.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,38,17,190745000],"instrumentId":"MSFT","price":421.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,17,191393000]}
18:38:17.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $421.74
18:38:17.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:17.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,38,17,190745000],"instrumentId":"GOOGL","price":139.33,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,17,191528000]}
18:38:17.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.33
18:38:17.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:17.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,38,17,190745000],"instrumentId":"JPM","price":181.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,17,191573000]}
18:38:17.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.07
18:38:17.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:17.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,38,17,190745000],"instrumentId":"BAC","price":31.29,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,17,191620000]}
18:38:17.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.29
18:38:17.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:17.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,38,17,190745000],"instrumentId":"NESN","price":101.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,17,191656000]}
18:38:17.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $101.22
18:38:17.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:17.208 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,38,17,190745000],"instrumentId":"ASML","price":741.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,17,191690000]}
18:38:17.210 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $741.24
18:38:17.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,38,22,184414000],"instrumentId":"AAPL","price":174.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,22,184460000]}
18:38:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_a2261f529e12","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_a2261f529e12","instrumentId":"AAPL","accountId":"ACC002","date":[2025,5,24,18,38,22,183637000],"orderQuantity":25,"filledQuantity":25,"orderStatus":"FILLED","orderPrice":280.45,"orderType":"LIMIT","venue":"NYSE","timestamp":[2025,5,24,18,38,22,183836000]}
18:38:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.88
18:38:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_a2261f529e12 (FILLED AAPL)
18:38:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:38:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,38,22,184414000],"instrumentId":"MSFT","price":424.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,22,184556000]}
18:38:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $424.31
18:38:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,38,22,184414000],"instrumentId":"GOOGL","price":138.41,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,22,184605000]}
18:38:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.41
18:38:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,38,22,184414000],"instrumentId":"JPM","price":181.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,22,184672000]}
18:38:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.37
18:38:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,38,22,184414000],"instrumentId":"BAC","price":31.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,22,184719000]}
18:38:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.37
18:38:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,38,22,184414000],"instrumentId":"NESN","price":101.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,22,184760000]}
18:38:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $101.21
18:38:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,38,22,184414000],"instrumentId":"ASML","price":747.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,22,184804000]}
18:38:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $747.82
18:38:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:27.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,38,27,180928000],"instrumentId":"AAPL","price":175.47,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,27,181015000]}
18:38:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.47
18:38:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,38,27,180928000],"instrumentId":"MSFT","price":422.64,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,27,181551000]}
18:38:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $422.64
18:38:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,38,27,180928000],"instrumentId":"GOOGL","price":137.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,27,181620000]}
18:38:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.73
18:38:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,38,27,180928000],"instrumentId":"JPM","price":181.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,27,181667000]}
18:38:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.61
18:38:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,38,27,180928000],"instrumentId":"BAC","price":31.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,27,181719000]}
18:38:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.42
18:38:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,38,27,180928000],"instrumentId":"NESN","price":101.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,27,181757000]}
18:38:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $101.48
18:38:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,38,27,180928000],"instrumentId":"ASML","price":748.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,27,181799000]}
18:38:27.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $748.13
18:38:27.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:32.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,38,32,185185000],"instrumentId":"AAPL","price":176.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,32,185259000]}
18:38:32.193 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_6a996a7be713","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_6a996a7be713","instrumentId":"NESN","accountId":"ACC004","date":[2025,5,24,18,38,32,184426000],"orderQuantity":35,"filledQuantity":35,"orderStatus":"FILLED","orderPrice":468.94,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,38,32,184646000]}
18:38:32.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.26
18:38:32.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:32.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,38,32,185185000],"instrumentId":"MSFT","price":420.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,32,185379000]}
18:38:32.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_6a996a7be713 (FILLED NESN)
18:38:32.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:38:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $420.50
18:38:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,38,32,185185000],"instrumentId":"GOOGL","price":137.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,32,185423000]}
18:38:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.02
18:38:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,38,32,185185000],"instrumentId":"JPM","price":181.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,32,185473000]}
18:38:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.50
18:38:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,38,32,185185000],"instrumentId":"BAC","price":31.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,32,185517000]}
18:38:32.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.42
18:38:32.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:32.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,38,32,185185000],"instrumentId":"NESN","price":101.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,32,185551000]}
18:38:32.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $101.44
18:38:32.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:32.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,38,32,185185000],"instrumentId":"ASML","price":751.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,32,185588000]}
18:38:32.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $751.71
18:38:32.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:37.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,38,37,183225000],"instrumentId":"AAPL","price":175.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,37,183286000]}
18:38:37.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.36
18:38:37.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:37.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,38,37,183225000],"instrumentId":"MSFT","price":418.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,37,183581000]}
18:38:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $418.85
18:38:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,38,37,183225000],"instrumentId":"GOOGL","price":136.41,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,37,183635000]}
18:38:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.41
18:38:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,38,37,183225000],"instrumentId":"JPM","price":180.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,37,183671000]}
18:38:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.44
18:38:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,38,37,183225000],"instrumentId":"BAC","price":32.19,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,37,183718000]}
18:38:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.19
18:38:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,38,37,183225000],"instrumentId":"NESN","price":101.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,37,183750000]}
18:38:37.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $101.56
18:38:37.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:37.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,38,37,183225000],"instrumentId":"ASML","price":753.60,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,37,183781000]}
18:38:37.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $753.60
18:38:37.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:42.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,38,42,178388000],"instrumentId":"AAPL","price":175.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,42,178413000]}
18:38:42.187 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_401f59b3d907","remainingQuantity":1,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_401f59b3d907","instrumentId":"JPM","accountId":"ACC004","date":[2025,5,24,18,38,42,177639000],"orderQuantity":1,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":436.55,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,38,42,177753000]}
18:38:42.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.26
18:38:42.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_401f59b3d907 (CREATED JPM)
18:38:42.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:42.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:38:42.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,38,42,178388000],"instrumentId":"MSFT","price":417.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,42,178484000]}
18:38:42.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_4925a3f864dd","remainingQuantity":139,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_4925a3f864dd","instrumentId":"AAPL","accountId":"ACC005","date":[2025,5,24,18,38,42,178026000],"orderQuantity":139,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":285.90,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,38,42,178089000]}
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $417.86
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_4925a3f864dd (CREATED AAPL)
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,38,42,178388000],"instrumentId":"GOOGL","price":136.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,42,178523000]}
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_33d1e7fd3c64","remainingQuantity":103,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_33d1e7fd3c64","instrumentId":"MSFT","accountId":"ACC001","date":[2025,5,24,18,38,42,178221000],"orderQuantity":103,"filledQuantity":0,"orderStatus":"PARTIALLY_FILLED","orderPrice":138.47,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,38,42,178248000]}
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.22
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_33d1e7fd3c64 (PARTIALLY_FILLED MSFT)
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_51622a879d6c","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_51622a879d6c","instrumentId":"AAPL","accountId":"ACC002","date":[2025,5,24,18,38,42,178304000],"orderQuantity":5,"filledQuantity":5,"orderStatus":"PARTIALLY_FILLED","orderPrice":470.07,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,38,42,178328000]}
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,38,42,178388000],"instrumentId":"JPM","price":179.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,42,178568000]}
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_51622a879d6c (PARTIALLY_FILLED AAPL)
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.71
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,38,42,178388000],"instrumentId":"BAC","price":31.89,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,42,178601000]}
18:38:42.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.89
18:38:42.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:42.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,38,42,178388000],"instrumentId":"NESN","price":101.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,42,178633000]}
18:38:42.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $101.92
18:38:42.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:42.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,38,42,178388000],"instrumentId":"ASML","price":753.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,42,178670000]}
18:38:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $753.86
18:38:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:47.213 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,38,47,179529000],"instrumentId":"AAPL","price":176.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,47,179603000]}
18:38:47.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.44
18:38:47.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:47.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,38,47,179529000],"instrumentId":"MSFT","price":415.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,47,201424000]}
18:38:47.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.43
18:38:47.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:47.220 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,38,47,179529000],"instrumentId":"GOOGL","price":136.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,47,202577000]}
18:38:47.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.31
18:38:47.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:47.221 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,38,47,179529000],"instrumentId":"JPM","price":180.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,47,202813000]}
18:38:47.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.38
18:38:47.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:47.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,38,47,179529000],"instrumentId":"BAC","price":31.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,47,203070000]}
18:38:47.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $31.90
18:38:47.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:47.222 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,38,47,179529000],"instrumentId":"NESN","price":104.65,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,47,203390000]}
18:38:47.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.65
18:38:47.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:47.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,38,47,179529000],"instrumentId":"ASML","price":753.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,47,203964000]}
18:38:47.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $753.13
18:38:47.223 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:52.191 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_5f64ddc286dd","remainingQuantity":7,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_5f64ddc286dd","instrumentId":"AAPL","accountId":"ACC002","date":[2025,5,24,18,38,52,181495000],"orderQuantity":7,"filledQuantity":0,"orderStatus":"PARTIALLY_FILLED","orderPrice":150.73,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,38,52,181639000]}
18:38:52.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,38,52,182049000],"instrumentId":"AAPL","price":175.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,52,182070000]}
18:38:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_5f64ddc286dd (PARTIALLY_FILLED AAPL)
18:38:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.56
18:38:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:38:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,38,52,182049000],"instrumentId":"MSFT","price":415.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,52,182149000]}
18:38:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_f198be8f0d6a","remainingQuantity":131,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_f198be8f0d6a","instrumentId":"MSFT","accountId":"ACC002","date":[2025,5,24,18,38,52,181917000],"orderQuantity":166,"filledQuantity":35,"orderStatus":"CANCELLED","orderPrice":278.15,"orderType":"MARKET","venue":"LSE","timestamp":[2025,5,24,18,38,52,181963000]}
18:38:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.13
18:38:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,38,52,182049000],"instrumentId":"GOOGL","price":135.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,52,182200000]}
18:38:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_f198be8f0d6a (CANCELLED MSFT)
18:38:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:38:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $135.05
18:38:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,38,52,182049000],"instrumentId":"JPM","price":179.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,52,182237000]}
18:38:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.73
18:38:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,38,52,182049000],"instrumentId":"BAC","price":32.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,52,182282000]}
18:38:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.85
18:38:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,38,52,182049000],"instrumentId":"NESN","price":103.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,52,182319000]}
18:38:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.86
18:38:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,38,52,182049000],"instrumentId":"ASML","price":752.81,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,52,182350000]}
18:38:52.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $752.81
18:38:52.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:57.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,38,57,181309000],"instrumentId":"AAPL","price":176.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,57,181442000]}
18:38:57.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.09
18:38:57.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:57.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,38,57,181309000],"instrumentId":"MSFT","price":418.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,57,182198000]}
18:38:57.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $418.74
18:38:57.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:57.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,38,57,181309000],"instrumentId":"GOOGL","price":134.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,57,182270000]}
18:38:57.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $134.96
18:38:57.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:57.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,38,57,181309000],"instrumentId":"JPM","price":179.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,57,182309000]}
18:38:57.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.87
18:38:57.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:57.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,38,57,181309000],"instrumentId":"BAC","price":32.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,57,182338000]}
18:38:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.71
18:38:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,38,57,181309000],"instrumentId":"NESN","price":104.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,57,182381000]}
18:38:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.21
18:38:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:38:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,38,57,181309000],"instrumentId":"ASML","price":755.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,38,57,182408000]}
18:38:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $755.09
18:38:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:02.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,39,2,182371000],"instrumentId":"AAPL","price":176.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,2,182395000]}
18:39:02.193 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_231438bb9a76","remainingQuantity":445,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_231438bb9a76","instrumentId":"NESN","accountId":"ACC005","date":[2025,5,24,18,39,2,180939000],"orderQuantity":499,"filledQuantity":54,"orderStatus":"FILLED","orderPrice":459.44,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,39,2,181232000]}
18:39:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.01
18:39:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,39,2,182371000],"instrumentId":"MSFT","price":418.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,2,182526000]}
18:39:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_231438bb9a76 (FILLED NESN)
18:39:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:39:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_60c52a76e12a","remainingQuantity":20,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_60c52a76e12a","instrumentId":"MSFT","accountId":"ACC002","date":[2025,5,24,18,39,2,182234000],"orderQuantity":30,"filledQuantity":10,"orderStatus":"FILLED","orderPrice":384.48,"orderType":"LIMIT","venue":"EURONEXT","timestamp":[2025,5,24,18,39,2,182276000]}
18:39:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $418.44
18:39:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,39,2,182371000],"instrumentId":"GOOGL","price":136.19,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,2,182556000]}
18:39:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_60c52a76e12a (FILLED MSFT)
18:39:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:39:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.19
18:39:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,39,2,182371000],"instrumentId":"JPM","price":179.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,2,182581000]}
18:39:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.92
18:39:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,39,2,182371000],"instrumentId":"BAC","price":32.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,2,182605000]}
18:39:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.85
18:39:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,39,2,182371000],"instrumentId":"NESN","price":105.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,2,182625000]}
18:39:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.18
18:39:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,39,2,182371000],"instrumentId":"ASML","price":755.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,2,182648000]}
18:39:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $755.78
18:39:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:07.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,39,7,178951000],"instrumentId":"AAPL","price":175.57,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,7,179007000]}
18:39:07.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.57
18:39:07.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:07.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,39,7,178951000],"instrumentId":"MSFT","price":415.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,7,179462000]}
18:39:07.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.86
18:39:07.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:07.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,39,7,178951000],"instrumentId":"GOOGL","price":136.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,7,179548000]}
18:39:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.98
18:39:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,39,7,178951000],"instrumentId":"JPM","price":180.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,7,179609000]}
18:39:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.15
18:39:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,39,7,178951000],"instrumentId":"BAC","price":32.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,7,179651000]}
18:39:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.87
18:39:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,39,7,178951000],"instrumentId":"NESN","price":105.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,7,179685000]}
18:39:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.07
18:39:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,39,7,178951000],"instrumentId":"ASML","price":756.56,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,7,179710000]}
18:39:07.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $756.56
18:39:07.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:12.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,39,12,181162000],"instrumentId":"AAPL","price":176.65,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,12,181180000]}
18:39:12.188 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_0e659c2605d8","remainingQuantity":11,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_0e659c2605d8","instrumentId":"GOOGL","accountId":"ACC003","date":[2025,5,24,18,39,12,180692000],"orderQuantity":11,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":254.22,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,39,12,180795000]}
18:39:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.65
18:39:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_0e659c2605d8 (CREATED GOOGL)
18:39:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:39:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,39,12,181162000],"instrumentId":"MSFT","price":416.10,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,12,181250000]}
18:39:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_e8a018e22fd4","remainingQuantity":17,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_e8a018e22fd4","instrumentId":"JPM","accountId":"ACC003","date":[2025,5,24,18,39,12,181041000],"orderQuantity":25,"filledQuantity":8,"orderStatus":"PARTIALLY_FILLED","orderPrice":209.62,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,39,12,181080000]}
18:39:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $416.10
18:39:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,39,12,181162000],"instrumentId":"GOOGL","price":137.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,12,181282000]}
18:39:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_e8a018e22fd4 (PARTIALLY_FILLED JPM)
18:39:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:39:12.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.73
18:39:12.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:12.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,39,12,181162000],"instrumentId":"JPM","price":179.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,12,181313000]}
18:39:12.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.74
18:39:12.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:12.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,39,12,181162000],"instrumentId":"BAC","price":32.91,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,12,181342000]}
18:39:12.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.91
18:39:12.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:12.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,39,12,181162000],"instrumentId":"NESN","price":104.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,12,181368000]}
18:39:12.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.85
18:39:12.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:12.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,39,12,181162000],"instrumentId":"ASML","price":757.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,12,181394000]}
18:39:12.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $757.12
18:39:12.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:17.185 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,39,17,178360000],"instrumentId":"AAPL","price":176.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,17,178484000]}
18:39:17.186 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.15
18:39:17.186 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:17.186 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,39,17,178360000],"instrumentId":"MSFT","price":416.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,17,179068000]}
18:39:17.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $416.13
18:39:17.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:17.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,39,17,178360000],"instrumentId":"GOOGL","price":137.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,17,179114000]}
18:39:17.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.06
18:39:17.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:17.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,39,17,178360000],"instrumentId":"JPM","price":180.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,17,179151000]}
18:39:17.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.24
18:39:17.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:17.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,39,17,178360000],"instrumentId":"BAC","price":32.77,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,17,179181000]}
18:39:17.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.77
18:39:17.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:17.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,39,17,178360000],"instrumentId":"NESN","price":105.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,17,179205000]}
18:39:17.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.16
18:39:17.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:17.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,39,17,178360000],"instrumentId":"ASML","price":759.57,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,17,179229000]}
18:39:17.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $759.57
18:39:17.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:22.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,39,22,180527000],"instrumentId":"AAPL","price":176.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,22,180586000]}
18:39:22.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.11
18:39:22.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:22.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,39,22,180527000],"instrumentId":"MSFT","price":412.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,22,180814000]}
18:39:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $412.22
18:39:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,39,22,180527000],"instrumentId":"GOOGL","price":137.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,22,180865000]}
18:39:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.13
18:39:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,39,22,180527000],"instrumentId":"JPM","price":178.77,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,22,180892000]}
18:39:22.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $178.77
18:39:22.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:22.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,39,22,180527000],"instrumentId":"BAC","price":32.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,22,180918000]}
18:39:22.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.61
18:39:22.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:22.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,39,22,180527000],"instrumentId":"NESN","price":105.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,22,180947000]}
18:39:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.61
18:39:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,39,22,180527000],"instrumentId":"ASML","price":762.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,22,180970000]}
18:39:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $762.12
18:39:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:27.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,39,27,180430000],"instrumentId":"AAPL","price":175.32,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,27,180519000]}
18:39:27.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.32
18:39:27.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:27.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,39,27,180430000],"instrumentId":"MSFT","price":414.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,27,181051000]}
18:39:27.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $414.31
18:39:27.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:27.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,39,27,180430000],"instrumentId":"GOOGL","price":137.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,27,181112000]}
18:39:27.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.67
18:39:27.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:27.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,39,27,180430000],"instrumentId":"JPM","price":179.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,27,181153000]}
18:39:27.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.94
18:39:27.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:27.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,39,27,180430000],"instrumentId":"BAC","price":32.59,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,27,181198000]}
18:39:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.59
18:39:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,39,27,180430000],"instrumentId":"NESN","price":105.45,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,27,181226000]}
18:39:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.45
18:39:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,39,27,180430000],"instrumentId":"ASML","price":763.93,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,27,181252000]}
18:39:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $763.93
18:39:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:32.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,39,32,176818000],"instrumentId":"AAPL","price":175.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,32,176842000]}
18:39:32.187 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_731779378bd8","remainingQuantity":65,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_731779378bd8","instrumentId":"JPM","accountId":"ACC005","date":[2025,5,24,18,39,32,175604000],"orderQuantity":74,"filledQuantity":9,"orderStatus":"PARTIALLY_FILLED","orderPrice":59.10,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,39,32,175999000]}
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.82
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_731779378bd8 (PARTIALLY_FILLED JPM)
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,39,32,176818000],"instrumentId":"MSFT","price":413.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,32,176919000]}
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_85f5f0ce6236","remainingQuantity":43,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_85f5f0ce6236","instrumentId":"ASML","accountId":"ACC005","date":[2025,5,24,18,39,32,176643000],"orderQuantity":43,"filledQuantity":0,"orderStatus":"CANCELLED","orderPrice":370.85,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,39,32,176709000]}
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $413.87
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,39,32,176818000],"instrumentId":"GOOGL","price":136.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,32,176956000]}
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_85f5f0ce6236 (CANCELLED ASML)
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.69
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,39,32,176818000],"instrumentId":"JPM","price":180.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,32,176990000]}
18:39:32.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.12
18:39:32.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:32.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,39,32,176818000],"instrumentId":"BAC","price":32.65,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,32,177022000]}
18:39:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.65
18:39:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,39,32,176818000],"instrumentId":"NESN","price":105.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,32,177055000]}
18:39:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.11
18:39:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,39,32,176818000],"instrumentId":"ASML","price":760.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,32,177086000]}
18:39:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $760.02
18:39:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:37.186 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,39,37,176087000],"instrumentId":"AAPL","price":176.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,37,176173000]}
18:39:37.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.63
18:39:37.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:37.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,39,37,176087000],"instrumentId":"MSFT","price":413.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,37,177238000]}
18:39:37.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $413.80
18:39:37.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:37.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,39,37,176087000],"instrumentId":"GOOGL","price":136.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,37,177312000]}
18:39:37.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.31
18:39:37.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:37.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,39,37,176087000],"instrumentId":"JPM","price":181.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,37,177353000]}
18:39:37.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.16
18:39:37.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:37.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,39,37,176087000],"instrumentId":"BAC","price":32.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,37,177386000]}
18:39:37.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.58
18:39:37.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:37.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,39,37,176087000],"instrumentId":"NESN","price":104.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,37,177412000]}
18:39:37.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.88
18:39:37.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:37.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,39,37,176087000],"instrumentId":"ASML","price":758.64,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,37,177439000]}
18:39:37.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $758.64
18:39:37.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_bbfb1c3217e9","remainingQuantity":44,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_bbfb1c3217e9","instrumentId":"NESN","accountId":"ACC005","date":[2025,5,24,18,39,42,180854000],"orderQuantity":44,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":170.23,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,39,42,180909000]}
18:39:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received intraday cash data: {"kafkaKey":"2025-05-24#GBP#ACC002","date":[2025,5,24,18,39,42,180309000],"instrumentId":"GBP","accountId":"ACC002","quantity":372.80,"movementType":"DIVIDEND","referenceId":"DIV_1748108382180_216","timestamp":[2025,5,24,18,39,42,180481000]}
18:39:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,39,42,181229000],"instrumentId":"AAPL","price":177.47,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,42,181250000]}
18:39:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached cash movement: 372.80 GBP for account ACC002 (DIVIDEND)
18:39:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_bbfb1c3217e9 (CREATED NESN)
18:39:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:39:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.47
18:39:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_31dc09e8e7c1","remainingQuantity":20,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_31dc09e8e7c1","instrumentId":"ASML","accountId":"ACC004","date":[2025,5,24,18,39,42,180963000],"orderQuantity":20,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":18.38,"orderType":"LIMIT","venue":"EURONEXT","timestamp":[2025,5,24,18,39,42,180990000]}
18:39:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached intraday cash data
18:39:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,39,42,181229000],"instrumentId":"MSFT","price":413.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,42,181297000]}
18:39:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received intraday cash data: {"kafkaKey":"2025-05-24#GBP#ACC005","date":[2025,5,24,18,39,42,180309000],"instrumentId":"GBP","accountId":"ACC005","quantity":-43942.89,"movementType":"REDEMPTION","referenceId":"RED_1748108382180_593","timestamp":[2025,5,24,18,39,42,180711000]}
18:39:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_31dc09e8e7c1 (CREATED ASML)
18:39:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:39:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_dcf9b9e4ea20","remainingQuantity":69,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_dcf9b9e4ea20","instrumentId":"GOOGL","accountId":"ACC001","date":[2025,5,24,18,39,42,181031000],"orderQuantity":69,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":364.98,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,39,42,181067000]}
18:39:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $413.42
18:39:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached cash movement: -43942.89 GBP for account ACC005 (REDEMPTION)
18:39:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,39,42,181229000],"instrumentId":"GOOGL","price":135.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,42,181330000]}
18:39:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached intraday cash data
18:39:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_dcf9b9e4ea20 (CREATED GOOGL)
18:39:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:39:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $135.74
18:39:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_264f7440960a","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_264f7440960a","instrumentId":"GOOGL","accountId":"ACC003","date":[2025,5,24,18,39,42,181114000],"orderQuantity":44,"filledQuantity":44,"orderStatus":"FILLED","orderPrice":346.58,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,39,42,181126000]}
18:39:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,39,42,181229000],"instrumentId":"JPM","price":182.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,42,181354000]}
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $182.31
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,39,42,181229000],"instrumentId":"BAC","price":32.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,42,181380000]}
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_264f7440960a (FILLED GOOGL)
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_5da321eeb649","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_5da321eeb649","instrumentId":"ASML","accountId":"ACC004","date":[2025,5,24,18,39,42,181165000],"orderQuantity":556,"filledQuantity":556,"orderStatus":"FILLED","orderPrice":304.94,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,39,42,181188000]}
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_5da321eeb649 (FILLED ASML)
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.67
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,39,42,181229000],"instrumentId":"NESN","price":105.60,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,42,181401000]}
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.60
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:42.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,39,42,181229000],"instrumentId":"ASML","price":764.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,42,181421000]}
18:39:42.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $764.63
18:39:42.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:47.246 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,39,47,188347000],"instrumentId":"AAPL","price":177.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,47,199151000]}
18:39:47.247 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.69
18:39:47.247 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:47.247 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,39,47,188347000],"instrumentId":"MSFT","price":416.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,47,235059000]}
18:39:47.247 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $416.28
18:39:47.247 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:47.247 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,39,47,188347000],"instrumentId":"GOOGL","price":137.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,47,235817000]}
18:39:47.248 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.04
18:39:47.248 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:47.248 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,39,47,188347000],"instrumentId":"JPM","price":181.49,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,47,236411000]}
18:39:47.248 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.49
18:39:47.248 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:47.248 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,39,47,188347000],"instrumentId":"BAC","price":32.71,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,47,236711000]}
18:39:47.248 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.71
18:39:47.248 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:47.248 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,39,47,188347000],"instrumentId":"NESN","price":105.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,47,236882000]}
18:39:47.249 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.39
18:39:47.249 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:47.249 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,39,47,188347000],"instrumentId":"ASML","price":758.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,47,236972000]}
18:39:47.249 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $758.94
18:39:47.249 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,39,52,179335000],"instrumentId":"AAPL","price":178.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,52,179495000]}
18:39:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.51
18:39:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,39,52,179335000],"instrumentId":"MSFT","price":414.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,52,180514000]}
18:39:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $414.24
18:39:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,39,52,179335000],"instrumentId":"GOOGL","price":137.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,52,180604000]}
18:39:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.12
18:39:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,39,52,179335000],"instrumentId":"JPM","price":182.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,52,180646000]}
18:39:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $182.39
18:39:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,39,52,179335000],"instrumentId":"BAC","price":32.60,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,52,180722000]}
18:39:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.60
18:39:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,39,52,179335000],"instrumentId":"NESN","price":105.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,52,180795000]}
18:39:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.21
18:39:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,39,52,179335000],"instrumentId":"ASML","price":763.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,52,180824000]}
18:39:52.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $763.00
18:39:52.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:57.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,39,57,177910000],"instrumentId":"AAPL","price":178.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,57,177964000]}
18:39:57.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.05
18:39:57.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:57.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,39,57,177910000],"instrumentId":"MSFT","price":411.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,57,178447000]}
18:39:57.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $411.23
18:39:57.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:57.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,39,57,177910000],"instrumentId":"GOOGL","price":137.43,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,57,178503000]}
18:39:57.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.43
18:39:57.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:57.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,39,57,177910000],"instrumentId":"JPM","price":181.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,57,178544000]}
18:39:57.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.90
18:39:57.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:57.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,39,57,177910000],"instrumentId":"BAC","price":32.91,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,57,178573000]}
18:39:57.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.91
18:39:57.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:57.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,39,57,177910000],"instrumentId":"NESN","price":105.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,57,178603000]}
18:39:57.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.96
18:39:57.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:39:57.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,39,57,177910000],"instrumentId":"ASML","price":759.02,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,39,57,178627000]}
18:39:57.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $759.02
18:39:57.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:02.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,40,2,180673000],"instrumentId":"AAPL","price":177.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,2,180918000]}
18:40:02.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.50
18:40:02.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:02.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,40,2,180673000],"instrumentId":"MSFT","price":408.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,2,181544000]}
18:40:02.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $408.53
18:40:02.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:02.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,40,2,180673000],"instrumentId":"GOOGL","price":135.93,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,2,181651000]}
18:40:02.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $135.93
18:40:02.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:02.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,40,2,180673000],"instrumentId":"JPM","price":182.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,2,181812000]}
18:40:02.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $182.00
18:40:02.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:02.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,40,2,180673000],"instrumentId":"BAC","price":33.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,2,181848000]}
18:40:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.04
18:40:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,40,2,180673000],"instrumentId":"NESN","price":106.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,2,181877000]}
18:40:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.37
18:40:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,40,2,180673000],"instrumentId":"ASML","price":759.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,2,181916000]}
18:40:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $759.37
18:40:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,40,7,178842000],"instrumentId":"AAPL","price":177.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,7,178957000]}
18:40:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.74
18:40:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,40,7,178842000],"instrumentId":"MSFT","price":407.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,7,180603000]}
18:40:07.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $407.22
18:40:07.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:07.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,40,7,178842000],"instrumentId":"GOOGL","price":136.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,7,180672000]}
18:40:07.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.11
18:40:07.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:07.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,40,7,178842000],"instrumentId":"JPM","price":180.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,7,180714000]}
18:40:07.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.94
18:40:07.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:07.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,40,7,178842000],"instrumentId":"BAC","price":33.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,7,180769000]}
18:40:07.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.09
18:40:07.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:07.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,40,7,178842000],"instrumentId":"NESN","price":108.47,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,7,180807000]}
18:40:07.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.47
18:40:07.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:07.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,40,7,178842000],"instrumentId":"ASML","price":762.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,7,180850000]}
18:40:07.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $762.13
18:40:07.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:12.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,40,12,177751000],"instrumentId":"AAPL","price":178.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,12,177780000]}
18:40:12.187 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_9b8cb231e815","remainingQuantity":64,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_9b8cb231e815","instrumentId":"BAC","accountId":"ACC002","date":[2025,5,24,18,40,12,175927000],"orderQuantity":64,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":396.27,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,40,12,176540000]}
18:40:12.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.97
18:40:12.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:12.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,40,12,177751000],"instrumentId":"MSFT","price":408.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,12,177902000]}
18:40:12.188 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_9b8cb231e815 (CREATED BAC)
18:40:12.188 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:40:12.188 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_ea9590093dca","remainingQuantity":89,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_ea9590093dca","instrumentId":"MSFT","accountId":"ACC004","date":[2025,5,24,18,40,12,177307000],"orderQuantity":89,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":218.03,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,40,12,177378000]}
18:40:12.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $408.18
18:40:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,40,12,177751000],"instrumentId":"GOOGL","price":136.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,12,177957000]}
18:40:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_ea9590093dca (CREATED MSFT)
18:40:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:40:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.38
18:40:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_80bc4ce89b30","remainingQuantity":33,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_80bc4ce89b30","instrumentId":"BAC","accountId":"ACC003","date":[2025,5,24,18,40,12,177539000],"orderQuantity":33,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":124.45,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,40,12,177594000]}
18:40:12.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,40,12,177751000],"instrumentId":"JPM","price":181.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,12,178008000]}
18:40:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_80bc4ce89b30 (CREATED BAC)
18:40:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:40:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.51
18:40:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,40,12,177751000],"instrumentId":"BAC","price":33.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,12,178051000]}
18:40:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.20
18:40:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,40,12,177751000],"instrumentId":"NESN","price":108.65,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,12,178086000]}
18:40:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.65
18:40:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:12.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,40,12,177751000],"instrumentId":"ASML","price":759.89,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,12,178124000]}
18:40:12.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $759.89
18:40:12.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:17.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,40,17,180354000],"instrumentId":"AAPL","price":177.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,17,180455000]}
18:40:17.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.96
18:40:17.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:17.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,40,17,180354000],"instrumentId":"MSFT","price":407.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,17,181628000]}
18:40:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $407.88
18:40:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,40,17,180354000],"instrumentId":"GOOGL","price":136.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,17,182053000]}
18:40:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $136.97
18:40:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,40,17,180354000],"instrumentId":"JPM","price":181.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,17,182106000]}
18:40:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.38
18:40:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,40,17,180354000],"instrumentId":"BAC","price":33.32,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,17,182153000]}
18:40:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.32
18:40:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,40,17,180354000],"instrumentId":"NESN","price":108.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,17,182183000]}
18:40:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.70
18:40:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,40,17,180354000],"instrumentId":"ASML","price":763.19,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,17,182211000]}
18:40:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $763.19
18:40:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,40,22,181434000],"instrumentId":"AAPL","price":177.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,22,181474000]}
18:40:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_0f07e0d3b2ca","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_0f07e0d3b2ca","instrumentId":"GOOGL","accountId":"ACC002","date":[2025,5,24,18,40,22,180388000],"orderQuantity":59,"filledQuantity":59,"orderStatus":"REJECTED","orderPrice":338.29,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,40,22,180589000]}
18:40:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.05
18:40:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,40,22,181434000],"instrumentId":"MSFT","price":408.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,22,181624000]}
18:40:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_0f07e0d3b2ca (REJECTED GOOGL)
18:40:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:40:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $408.72
18:40:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,40,22,181434000],"instrumentId":"GOOGL","price":137.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,22,181679000]}
18:40:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.17
18:40:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,40,22,181434000],"instrumentId":"JPM","price":180.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,22,181714000]}
18:40:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.87
18:40:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,40,22,181434000],"instrumentId":"BAC","price":33.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,22,181776000]}
18:40:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.15
18:40:22.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:22.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,40,22,181434000],"instrumentId":"NESN","price":108.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,22,181807000]}
18:40:22.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.23
18:40:22.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:22.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,40,22,181434000],"instrumentId":"ASML","price":764.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,22,181838000]}
18:40:22.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $764.86
18:40:22.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:27.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,40,27,180578000],"instrumentId":"AAPL","price":177.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,27,180722000]}
18:40:27.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.42
18:40:27.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:27.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,40,27,180578000],"instrumentId":"MSFT","price":412.68,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,27,181171000]}
18:40:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $412.68
18:40:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,40,27,180578000],"instrumentId":"GOOGL","price":137.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,27,181246000]}
18:40:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.48
18:40:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:27.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,40,27,180578000],"instrumentId":"JPM","price":181.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,27,181278000]}
18:40:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.37
18:40:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,40,27,180578000],"instrumentId":"BAC","price":33.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,27,181312000]}
18:40:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.18
18:40:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,40,27,180578000],"instrumentId":"NESN","price":105.83,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,27,181364000]}
18:40:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.83
18:40:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,40,27,180578000],"instrumentId":"ASML","price":762.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,27,181389000]}
18:40:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $762.61
18:40:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:32.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,40,32,177855000],"instrumentId":"AAPL","price":176.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,32,177907000]}
18:40:32.188 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_86a00ad6a361","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_86a00ad6a361","instrumentId":"MSFT","accountId":"ACC001","date":[2025,5,24,18,40,32,176321000],"orderQuantity":414,"filledQuantity":414,"orderStatus":"PARTIALLY_FILLED","orderPrice":140.60,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,40,32,176920000]}
18:40:32.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.48
18:40:32.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:32.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_86a00ad6a361 (PARTIALLY_FILLED MSFT)
18:40:32.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,40,32,177855000],"instrumentId":"MSFT","price":410.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,32,178037000]}
18:40:32.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:40:32.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_9040b85ef29e","remainingQuantity":322,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_9040b85ef29e","instrumentId":"AAPL","accountId":"ACC003","date":[2025,5,24,18,40,32,177604000],"orderQuantity":367,"filledQuantity":45,"orderStatus":"PARTIALLY_FILLED","orderPrice":190.38,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,40,32,177704000]}
18:40:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $410.92
18:40:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,40,32,177855000],"instrumentId":"GOOGL","price":137.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,32,178090000]}
18:40:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_9040b85ef29e (PARTIALLY_FILLED AAPL)
18:40:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:40:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $137.44
18:40:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,40,32,177855000],"instrumentId":"JPM","price":180.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,32,178172000]}
18:40:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.46
18:40:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,40,32,177855000],"instrumentId":"BAC","price":33.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,32,178209000]}
18:40:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.38
18:40:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,40,32,177855000],"instrumentId":"NESN","price":104.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,32,178244000]}
18:40:32.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.80
18:40:32.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:32.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,40,32,177855000],"instrumentId":"ASML","price":759.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,32,178282000]}
18:40:32.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $759.31
18:40:32.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:37.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,40,37,180311000],"instrumentId":"AAPL","price":177.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,37,180418000]}
18:40:37.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $177.80
18:40:37.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:37.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,40,37,180311000],"instrumentId":"MSFT","price":407.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,37,180834000]}
18:40:37.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $407.01
18:40:37.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:37.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,40,37,180311000],"instrumentId":"GOOGL","price":138.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,37,180893000]}
18:40:37.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.27
18:40:37.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:37.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,40,37,180311000],"instrumentId":"JPM","price":181.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,37,180936000]}
18:40:37.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.13
18:40:37.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:37.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,40,37,180311000],"instrumentId":"BAC","price":33.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,37,180977000]}
18:40:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.15
18:40:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,40,37,180311000],"instrumentId":"NESN","price":103.81,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,37,181012000]}
18:40:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $103.81
18:40:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,40,37,180311000],"instrumentId":"ASML","price":758.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,37,181054000]}
18:40:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $758.27
18:40:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,40,42,179821000],"instrumentId":"AAPL","price":178.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,42,179839000]}
18:40:42.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_7f61a73f3e2b","remainingQuantity":660,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_7f61a73f3e2b","instrumentId":"ASML","accountId":"ACC005","date":[2025,5,24,18,40,42,179107000],"orderQuantity":660,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":10.55,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,40,42,179233000]}
18:40:42.191 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_7f61a73f3e2b (CREATED ASML)
18:40:42.191 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:40:42.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.03
18:40:42.191 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_13605b4e7c59","remainingQuantity":3,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_13605b4e7c59","instrumentId":"AAPL","accountId":"ACC003","date":[2025,5,24,18,40,42,179669000],"orderQuantity":3,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":143.57,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,40,42,179699000]}
18:40:42.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:42.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,40,42,179821000],"instrumentId":"MSFT","price":403.83,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,42,179900000]}
18:40:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_13605b4e7c59 (CREATED AAPL)
18:40:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $403.83
18:40:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:40:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_e1ad863e541d","remainingQuantity":33,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_e1ad863e541d","instrumentId":"JPM","accountId":"ACC005","date":[2025,5,24,18,40,42,179740000],"orderQuantity":33,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":432.52,"orderType":"LIMIT","venue":"NYSE","timestamp":[2025,5,24,18,40,42,179750000]}
18:40:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,40,42,179821000],"instrumentId":"GOOGL","price":138.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,42,179921000]}
18:40:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.25
18:40:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_e1ad863e541d (CREATED JPM)
18:40:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,40,42,179821000],"instrumentId":"JPM","price":181.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,42,179938000]}
18:40:42.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:40:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.94
18:40:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,40,42,179821000],"instrumentId":"BAC","price":33.10,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,42,179957000]}
18:40:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.10
18:40:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,40,42,179821000],"instrumentId":"NESN","price":104.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,42,179979000]}
18:40:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.76
18:40:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:42.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,40,42,179821000],"instrumentId":"ASML","price":758.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,42,179996000]}
18:40:42.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $758.79
18:40:42.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:47.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,40,47,180369000],"instrumentId":"AAPL","price":178.40,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,47,180561000]}
18:40:47.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $178.40
18:40:47.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:47.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,40,47,180369000],"instrumentId":"MSFT","price":405.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,47,186242000]}
18:40:47.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $405.85
18:40:47.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:47.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,40,47,180369000],"instrumentId":"GOOGL","price":138.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,47,188799000]}
18:40:47.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.17
18:40:47.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:47.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,40,47,180369000],"instrumentId":"JPM","price":181.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,47,189023000]}
18:40:47.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.67
18:40:47.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:47.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,40,47,180369000],"instrumentId":"BAC","price":33.07,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,47,189189000]}
18:40:47.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.07
18:40:47.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:47.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,40,47,180369000],"instrumentId":"NESN","price":104.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,47,189364000]}
18:40:47.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.48
18:40:47.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:47.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,40,47,180369000],"instrumentId":"ASML","price":757.60,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,47,189477000]}
18:40:47.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $757.60
18:40:47.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:52.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,40,52,180988000],"instrumentId":"AAPL","price":176.66,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,52,181021000]}
18:40:52.189 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_ccf857eb2741","remainingQuantity":15,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_ccf857eb2741","instrumentId":"AAPL","accountId":"ACC001","date":[2025,5,24,18,40,52,180315000],"orderQuantity":64,"filledQuantity":49,"orderStatus":"PARTIALLY_FILLED","orderPrice":280.85,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,40,52,180495000]}
18:40:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.66
18:40:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_ccf857eb2741 (PARTIALLY_FILLED AAPL)
18:40:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:40:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,40,52,180988000],"instrumentId":"MSFT","price":415.89,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,52,181115000]}
18:40:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_7a211d0dfe1a","remainingQuantity":14,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_7a211d0dfe1a","instrumentId":"BAC","accountId":"ACC002","date":[2025,5,24,18,40,52,180788000],"orderQuantity":18,"filledQuantity":4,"orderStatus":"PARTIALLY_FILLED","orderPrice":339.56,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,40,52,180857000]}
18:40:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.89
18:40:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_7a211d0dfe1a (PARTIALLY_FILLED BAC)
18:40:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,40,52,180988000],"instrumentId":"GOOGL","price":138.63,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,52,181168000]}
18:40:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:40:52.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.63
18:40:52.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:52.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,40,52,180988000],"instrumentId":"JPM","price":182.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,52,181207000]}
18:40:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $182.34
18:40:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,40,52,180988000],"instrumentId":"BAC","price":32.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,52,181246000]}
18:40:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $32.94
18:40:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,40,52,180988000],"instrumentId":"NESN","price":104.93,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,52,181295000]}
18:40:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $104.93
18:40:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,40,52,180988000],"instrumentId":"ASML","price":757.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,52,181330000]}
18:40:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $757.18
18:40:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,40,57,180787000],"instrumentId":"AAPL","price":176.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,57,181105000]}
18:40:57.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.69
18:40:57.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:57.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,40,57,180787000],"instrumentId":"MSFT","price":418.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,57,182244000]}
18:40:57.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $418.90
18:40:57.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:57.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,40,57,180787000],"instrumentId":"GOOGL","price":138.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,57,182464000]}
18:40:57.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $138.86
18:40:57.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:57.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,40,57,180787000],"instrumentId":"JPM","price":182.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,57,182642000]}
18:40:57.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $182.78
18:40:57.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:57.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,40,57,180787000],"instrumentId":"BAC","price":33.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,57,182767000]}
18:40:57.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.00
18:40:57.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:57.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,40,57,180787000],"instrumentId":"NESN","price":106.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,57,182892000]}
18:40:57.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.58
18:40:57.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:40:57.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,40,57,180787000],"instrumentId":"ASML","price":762.19,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,40,57,183031000]}
18:40:57.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $762.19
18:40:57.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:02.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,41,2,179321000],"instrumentId":"AAPL","price":176.32,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,2,179462000]}
18:41:02.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.32
18:41:02.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:02.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,41,2,179321000],"instrumentId":"MSFT","price":421.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,2,180213000]}
18:41:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $421.21
18:41:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,41,2,179321000],"instrumentId":"GOOGL","price":139.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,2,180454000]}
18:41:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.90
18:41:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,41,2,179321000],"instrumentId":"JPM","price":182.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,2,180599000]}
18:41:02.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $182.01
18:41:02.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:02.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,41,2,179321000],"instrumentId":"BAC","price":33.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,2,180749000]}
18:41:02.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.13
18:41:02.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:02.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,41,2,179321000],"instrumentId":"NESN","price":105.98,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,2,180872000]}
18:41:02.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.98
18:41:02.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:02.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,41,2,179321000],"instrumentId":"ASML","price":761.91,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,2,181149000]}
18:41:02.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $761.91
18:41:02.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:07.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,41,7,177755000],"instrumentId":"AAPL","price":175.99,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,7,177886000]}
18:41:07.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.99
18:41:07.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:07.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,41,7,177755000],"instrumentId":"MSFT","price":421.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,7,179016000]}
18:41:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $421.67
18:41:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,41,7,177755000],"instrumentId":"GOOGL","price":140.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,7,179242000]}
18:41:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.06
18:41:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,41,7,177755000],"instrumentId":"JPM","price":181.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,7,179366000]}
18:41:07.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $181.55
18:41:07.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:07.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,41,7,177755000],"instrumentId":"BAC","price":33.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,7,179594000]}
18:41:07.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.18
18:41:07.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:07.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,41,7,177755000],"instrumentId":"NESN","price":106.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,7,179718000]}
18:41:07.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $106.18
18:41:07.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:07.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,41,7,177755000],"instrumentId":"ASML","price":761.77,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,7,179819000]}
18:41:07.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $761.77
18:41:07.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:12.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,41,12,182774000],"instrumentId":"AAPL","price":175.19,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,12,182828000]}
18:41:12.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_4be151eb03f7","remainingQuantity":60,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_4be151eb03f7","instrumentId":"MSFT","accountId":"ACC001","date":[2025,5,24,18,41,12,179937000],"orderQuantity":60,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":209.99,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,41,12,180796000]}
18:41:12.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.19
18:41:12.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:12.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,41,12,182774000],"instrumentId":"MSFT","price":420.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,12,183118000]}
18:41:12.195 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_4be151eb03f7 (CREATED MSFT)
18:41:12.195 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:41:12.195 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_be8372861784","remainingQuantity":53,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_be8372861784","instrumentId":"AAPL","accountId":"ACC004","date":[2025,5,24,18,41,12,181887000],"orderQuantity":53,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":126.17,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,41,12,182070000]}
18:41:12.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $420.72
18:41:12.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:12.196 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_be8372861784 (CREATED AAPL)
18:41:12.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,41,12,182774000],"instrumentId":"GOOGL","price":141.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,12,183238000]}
18:41:12.197 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:41:12.197 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_08aee9ed9152","remainingQuantity":46,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_08aee9ed9152","instrumentId":"NESN","accountId":"ACC003","date":[2025,5,24,18,41,12,182403000],"orderQuantity":46,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":384.27,"orderType":"LIMIT","venue":"EURONEXT","timestamp":[2025,5,24,18,41,12,182461000]}
18:41:12.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.12
18:41:12.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:12.198 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_08aee9ed9152 (CREATED NESN)
18:41:12.198 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:41:12.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,41,12,182774000],"instrumentId":"JPM","price":180.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,12,183323000]}
18:41:12.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.96
18:41:12.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:12.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,41,12,182774000],"instrumentId":"BAC","price":33.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,12,183557000]}
18:41:12.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.23
18:41:12.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:12.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,41,12,182774000],"instrumentId":"NESN","price":105.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,12,183677000]}
18:41:12.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.36
18:41:12.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:12.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,41,12,182774000],"instrumentId":"ASML","price":757.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,12,183749000]}
18:41:12.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $757.82
18:41:12.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:17.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,41,17,177165000],"instrumentId":"AAPL","price":175.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,17,177348000]}
18:41:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.94
18:41:17.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:17.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,41,17,177165000],"instrumentId":"MSFT","price":419.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,17,178938000]}
18:41:17.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $419.90
18:41:17.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:17.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,41,17,177165000],"instrumentId":"GOOGL","price":141.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,17,179225000]}
18:41:17.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.39
18:41:17.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:17.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,41,17,177165000],"instrumentId":"JPM","price":180.81,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,17,179344000]}
18:41:17.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.81
18:41:17.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:17.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,41,17,177165000],"instrumentId":"BAC","price":33.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,17,179438000]}
18:41:17.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.09
18:41:17.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:17.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,41,17,177165000],"instrumentId":"NESN","price":105.27,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,17,179548000]}
18:41:17.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.27
18:41:17.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:17.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,41,17,177165000],"instrumentId":"ASML","price":756.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,17,179631000]}
18:41:17.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $756.96
18:41:17.207 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:22.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,41,22,179659000],"instrumentId":"AAPL","price":176.35,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,22,179713000]}
18:41:22.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_399556f18df2","remainingQuantity":50,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_399556f18df2","instrumentId":"ASML","accountId":"ACC005","date":[2025,5,24,18,41,22,177103000],"orderQuantity":74,"filledQuantity":24,"orderStatus":"FILLED","orderPrice":430.03,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,41,22,177450000]}
18:41:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $176.35
18:41:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,41,22,179659000],"instrumentId":"MSFT","price":419.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,22,179981000]}
18:41:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_399556f18df2 (FILLED ASML)
18:41:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:41:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_f603ae18bf24","remainingQuantity":76,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_f603ae18bf24","instrumentId":"MSFT","accountId":"ACC002","date":[2025,5,24,18,41,22,179157000],"orderQuantity":98,"filledQuantity":22,"orderStatus":"PARTIALLY_FILLED","orderPrice":469.97,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,41,22,179288000]}
18:41:22.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $419.26
18:41:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,41,22,179659000],"instrumentId":"GOOGL","price":142.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,22,180114000]}
18:41:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_f603ae18bf24 (PARTIALLY_FILLED MSFT)
18:41:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:41:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $142.55
18:41:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,41,22,179659000],"instrumentId":"JPM","price":180.19,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,22,180250000]}
18:41:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $180.19
18:41:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,41,22,179659000],"instrumentId":"BAC","price":33.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,22,180333000]}
18:41:22.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.26
18:41:22.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:22.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,41,22,179659000],"instrumentId":"NESN","price":105.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,22,180406000]}
18:41:22.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.54
18:41:22.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:22.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,41,22,179659000],"instrumentId":"ASML","price":757.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,22,180489000]}
18:41:22.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $757.52
18:41:22.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:27.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,41,27,177057000],"instrumentId":"AAPL","price":174.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,27,177183000]}
18:41:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.73
18:41:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:27.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,41,27,177057000],"instrumentId":"MSFT","price":419.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,27,178417000]}
18:41:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $419.28
18:41:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:27.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,41,27,177057000],"instrumentId":"GOOGL","price":141.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,27,178651000]}
18:41:27.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.88
18:41:27.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:27.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,41,27,177057000],"instrumentId":"JPM","price":179.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,27,178796000]}
18:41:27.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.37
18:41:27.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:27.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,41,27,177057000],"instrumentId":"BAC","price":33.16,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,27,178952000]}
18:41:27.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $33.16
18:41:27.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:27.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,41,27,177057000],"instrumentId":"NESN","price":105.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,27,179084000]}
18:41:27.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.61
18:41:27.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:27.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,41,27,177057000],"instrumentId":"ASML","price":758.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,27,179212000]}
18:41:27.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $758.78
18:41:27.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:32.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,41,32,178227000],"instrumentId":"AAPL","price":175.75,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,32,178345000]}
18:41:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.75
18:41:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:32.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,41,32,178227000],"instrumentId":"MSFT","price":421.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,32,178985000]}
18:41:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $421.14
18:41:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,41,32,178227000],"instrumentId":"GOOGL","price":142.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,32,179238000]}
18:41:32.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $142.67
18:41:32.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:32.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,41,32,178227000],"instrumentId":"JPM","price":179.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,32,179374000]}
18:41:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.00
18:41:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,41,32,178227000],"instrumentId":"BAC","price":34.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,32,179568000]}
18:41:32.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.13
18:41:32.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:32.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,41,32,178227000],"instrumentId":"NESN","price":105.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,32,179708000]}
18:41:32.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $105.39
18:41:32.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:32.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,41,32,178227000],"instrumentId":"ASML","price":757.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,32,179819000]}
18:41:32.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $757.28
18:41:32.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:37.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,41,37,177033000],"instrumentId":"AAPL","price":175.25,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,37,177188000]}
18:41:37.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $175.25
18:41:37.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:37.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,41,37,177033000],"instrumentId":"MSFT","price":420.87,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,37,178317000]}
18:41:37.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $420.87
18:41:37.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:37.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,41,37,177033000],"instrumentId":"GOOGL","price":143.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,37,178651000]}
18:41:37.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $143.73
18:41:37.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:37.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,41,37,177033000],"instrumentId":"JPM","price":178.82,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,37,178979000]}
18:41:37.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $178.82
18:41:37.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:37.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,41,37,177033000],"instrumentId":"BAC","price":34.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,37,179107000]}
18:41:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.13
18:41:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:37.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,41,37,177033000],"instrumentId":"NESN","price":107.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,37,179206000]}
18:41:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $107.80
18:41:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,41,37,177033000],"instrumentId":"ASML","price":753.47,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,37,179289000]}
18:41:37.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $753.47
18:41:37.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:42.213 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received intraday cash data: {"kafkaKey":"2025-05-24#USD#ACC003","date":[2025,5,24,18,41,42,202986000],"instrumentId":"USD","accountId":"ACC003","quantity":-161.20,"movementType":"FEE","referenceId":"FEE_1748108502203_429","timestamp":[2025,5,24,18,41,42,203480000]}
18:41:42.213 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_b3c68ad8554e","remainingQuantity":13,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_b3c68ad8554e","instrumentId":"ASML","accountId":"ACC001","date":[2025,5,24,18,41,42,204317000],"orderQuantity":13,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":421.59,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,41,42,204465000]}
18:41:42.214 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,41,42,205169000],"instrumentId":"AAPL","price":174.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,42,205194000]}
18:41:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.48
18:41:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached cash movement: -161.20 USD for account ACC003 (FEE)
18:41:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached intraday cash data
18:41:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_b3c68ad8554e (CREATED ASML)
18:41:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:41:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,41,42,205169000],"instrumentId":"MSFT","price":419.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,42,205284000]}
18:41:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received intraday cash data: {"kafkaKey":"2025-05-24#EUR#ACC003","date":[2025,5,24,18,41,42,202986000],"instrumentId":"EUR","accountId":"ACC003","quantity":46737.80,"movementType":"SUBSCRIPTION","referenceId":"SUB_1748108502204_252","timestamp":[2025,5,24,18,41,42,204151000]}
18:41:42.215 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_50bf449c70b6","remainingQuantity":74,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_50bf449c70b6","instrumentId":"BAC","accountId":"ACC005","date":[2025,5,24,18,41,42,204712000],"orderQuantity":74,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":470.70,"orderType":"MARKET","venue":"LSE","timestamp":[2025,5,24,18,41,42,204772000]}
18:41:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_50bf449c70b6 (CREATED BAC)
18:41:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:41:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached cash movement: 46737.80 EUR for account ACC003 (SUBSCRIPTION)
18:41:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_323a90de956d","remainingQuantity":926,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_323a90de956d","instrumentId":"MSFT","accountId":"ACC002","date":[2025,5,24,18,41,42,204843000],"orderQuantity":926,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":476.18,"orderType":"STOP","venue":"NASDAQ","timestamp":[2025,5,24,18,41,42,204864000]}
18:41:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $419.46
18:41:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached intraday cash data
18:41:42.216 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,41,42,205169000],"instrumentId":"GOOGL","price":143.22,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,42,205323000]}
18:41:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_323a90de956d (CREATED MSFT)
18:41:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $143.22
18:41:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:41:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,41,42,205169000],"instrumentId":"JPM","price":179.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,42,205460000]}
18:41:42.217 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_248493dcd7d8","remainingQuantity":44,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_248493dcd7d8","instrumentId":"MSFT","accountId":"ACC005","date":[2025,5,24,18,41,42,205022000],"orderQuantity":79,"filledQuantity":35,"orderStatus":"PARTIALLY_FILLED","orderPrice":138.46,"orderType":"MARKET","venue":"EURONEXT","timestamp":[2025,5,24,18,41,42,205076000]}
18:41:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.21
18:41:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_248493dcd7d8 (PARTIALLY_FILLED MSFT)
18:41:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:41:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,41,42,205169000],"instrumentId":"BAC","price":34.83,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,42,205508000]}
18:41:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.83
18:41:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:42.218 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,41,42,205169000],"instrumentId":"NESN","price":107.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,42,205545000]}
18:41:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $107.79
18:41:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,41,42,205169000],"instrumentId":"ASML","price":753.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,42,205575000]}
18:41:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $753.39
18:41:42.219 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:47.251 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,41,47,178920000],"instrumentId":"AAPL","price":174.66,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,47,182508000]}
18:41:47.253 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $174.66
18:41:47.253 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:47.253 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,41,47,178920000],"instrumentId":"MSFT","price":419.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,47,195927000]}
18:41:47.253 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $419.38
18:41:47.253 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:47.253 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,41,47,178920000],"instrumentId":"GOOGL","price":142.78,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,47,199327000]}
18:41:47.254 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $142.78
18:41:47.254 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:47.254 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,41,47,178920000],"instrumentId":"JPM","price":179.48,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,47,199435000]}
18:41:47.254 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.48
18:41:47.254 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:47.254 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,41,47,178920000],"instrumentId":"BAC","price":34.64,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,47,199463000]}
18:41:47.255 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.64
18:41:47.255 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:47.255 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,41,47,178920000],"instrumentId":"NESN","price":108.45,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,47,229416000]}
18:41:47.255 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.45
18:41:47.255 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:47.255 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,41,47,178920000],"instrumentId":"ASML","price":749.34,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,47,237725000]}
18:41:47.256 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $749.34
18:41:47.256 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:52.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,41,52,178895000],"instrumentId":"AAPL","price":171.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,52,179152000]}
18:41:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $171.54
18:41:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:52.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,41,52,178895000],"instrumentId":"MSFT","price":420.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,52,180008000]}
18:41:52.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $420.70
18:41:52.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:52.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,41,52,178895000],"instrumentId":"GOOGL","price":142.57,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,52,180194000]}
18:41:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $142.57
18:41:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,41,52,178895000],"instrumentId":"JPM","price":179.79,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,52,180337000]}
18:41:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $179.79
18:41:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,41,52,178895000],"instrumentId":"BAC","price":34.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,52,180475000]}
18:41:52.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.52
18:41:52.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:52.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,41,52,178895000],"instrumentId":"NESN","price":108.89,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,52,180562000]}
18:41:52.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $108.89
18:41:52.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:52.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,41,52,178895000],"instrumentId":"ASML","price":751.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,52,180651000]}
18:41:52.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $751.18
18:41:52.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:57.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,41,57,180966000],"instrumentId":"AAPL","price":172.86,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,57,181100000]}
18:41:57.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $172.86
18:41:57.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:57.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,41,57,180966000],"instrumentId":"MSFT","price":418.62,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,57,182665000]}
18:41:57.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $418.62
18:41:57.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:57.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,41,57,180966000],"instrumentId":"GOOGL","price":142.67,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,57,182833000]}
18:41:57.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $142.67
18:41:57.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:57.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,41,57,180966000],"instrumentId":"JPM","price":185.04,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,57,182958000]}
18:41:57.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $185.04
18:41:57.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:57.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,41,57,180966000],"instrumentId":"BAC","price":34.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,57,183092000]}
18:41:57.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.20
18:41:57.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:57.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,41,57,180966000],"instrumentId":"NESN","price":109.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,57,183182000]}
18:41:57.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $109.11
18:41:57.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:41:57.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,41,57,180966000],"instrumentId":"ASML","price":745.30,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,41,57,183280000]}
18:41:57.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $745.30
18:41:57.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:02.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,42,2,181486000],"instrumentId":"AAPL","price":171.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,2,181629000]}
18:42:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $171.88
18:42:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,42,2,181486000],"instrumentId":"MSFT","price":416.66,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,2,182444000]}
18:42:02.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $416.66
18:42:02.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:02.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,42,2,181486000],"instrumentId":"GOOGL","price":141.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,2,182686000]}
18:42:02.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.55
18:42:02.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:02.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,42,2,181486000],"instrumentId":"JPM","price":184.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,2,182856000]}
18:42:02.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $184.76
18:42:02.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:02.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,42,2,181486000],"instrumentId":"BAC","price":34.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,2,183152000]}
18:42:02.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.17
18:42:02.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:02.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,42,2,181486000],"instrumentId":"NESN","price":109.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,2,183252000]}
18:42:02.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $109.73
18:42:02.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:02.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,42,2,181486000],"instrumentId":"ASML","price":747.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,2,183402000]}
18:42:02.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $747.21
18:42:02.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:07.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,42,7,183187000],"instrumentId":"AAPL","price":171.75,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,7,183296000]}
18:42:07.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $171.75
18:42:07.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:07.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,42,7,183187000],"instrumentId":"MSFT","price":419.68,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,7,184241000]}
18:42:07.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $419.68
18:42:07.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:07.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,42,7,183187000],"instrumentId":"GOOGL","price":140.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,7,184359000]}
18:42:07.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.58
18:42:07.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:07.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,42,7,183187000],"instrumentId":"JPM","price":183.68,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,7,184415000]}
18:42:07.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $183.68
18:42:07.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:07.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,42,7,183187000],"instrumentId":"BAC","price":34.41,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,7,184456000]}
18:42:07.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.41
18:42:07.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:07.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,42,7,183187000],"instrumentId":"NESN","price":109.81,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,7,184500000]}
18:42:07.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $109.81
18:42:07.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:07.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,42,7,183187000],"instrumentId":"ASML","price":745.85,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,7,184532000]}
18:42:07.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $745.85
18:42:07.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:12.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,42,12,184658000],"instrumentId":"AAPL","price":172.31,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,12,184703000]}
18:42:12.196 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_0e1e132edf06","remainingQuantity":66,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_0e1e132edf06","instrumentId":"JPM","accountId":"ACC002","date":[2025,5,24,18,42,12,181927000],"orderQuantity":66,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":388.59,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,42,12,182551000]}
18:42:12.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $172.31
18:42:12.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:12.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,42,12,184658000],"instrumentId":"MSFT","price":418.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,12,185008000]}
18:42:12.199 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_0e1e132edf06 (CREATED JPM)
18:42:12.199 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:42:12.199 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_aa41cd255f05","remainingQuantity":61,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_aa41cd255f05","instrumentId":"NESN","accountId":"ACC003","date":[2025,5,24,18,42,12,183593000],"orderQuantity":61,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":178.23,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,42,12,183702000]}
18:42:12.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $418.28
18:42:12.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:12.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,42,12,184658000],"instrumentId":"GOOGL","price":139.97,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,12,185266000]}
18:42:12.201 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_aa41cd255f05 (CREATED NESN)
18:42:12.201 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:42:12.201 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_472c59868fb5","remainingQuantity":34,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_472c59868fb5","instrumentId":"ASML","accountId":"ACC002","date":[2025,5,24,18,42,12,183982000],"orderQuantity":34,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":19.90,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,42,12,184043000]}
18:42:12.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.97
18:42:12.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:12.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,42,12,184658000],"instrumentId":"JPM","price":183.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,12,185403000]}
18:42:12.202 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_472c59868fb5 (CREATED ASML)
18:42:12.202 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:42:12.202 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_04c8cb6b3fa9","remainingQuantity":0,"completelyFilled":true,"buyOrder":true,"sellOrder":false,"orderId":"ORD_04c8cb6b3fa9","instrumentId":"GOOGL","accountId":"ACC004","date":[2025,5,24,18,42,12,184322000],"orderQuantity":904,"filledQuantity":904,"orderStatus":"CANCELLED","orderPrice":19.68,"orderType":"MARKET","venue":"NYSE","timestamp":[2025,5,24,18,42,12,184404000]}
18:42:12.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $183.01
18:42:12.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:12.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,42,12,184658000],"instrumentId":"BAC","price":34.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,12,185504000]}
18:42:12.204 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_04c8cb6b3fa9 (CANCELLED GOOGL)
18:42:12.204 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:42:12.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.51
18:42:12.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:12.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,42,12,184658000],"instrumentId":"NESN","price":109.46,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,12,185590000]}
18:42:12.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $109.46
18:42:12.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:12.205 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,42,12,184658000],"instrumentId":"ASML","price":745.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,12,185690000]}
18:42:12.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $745.88
18:42:12.206 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:17.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,42,17,180007000],"instrumentId":"AAPL","price":172.52,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,17,180117000]}
18:42:17.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $172.52
18:42:17.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:17.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,42,17,180007000],"instrumentId":"MSFT","price":414.13,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,17,180699000]}
18:42:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $414.13
18:42:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,42,17,180007000],"instrumentId":"GOOGL","price":140.65,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,17,180865000]}
18:42:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.65
18:42:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,42,17,180007000],"instrumentId":"JPM","price":183.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,17,180956000]}
18:42:17.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $183.11
18:42:17.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:17.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,42,17,180007000],"instrumentId":"BAC","price":34.53,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,17,181058000]}
18:42:17.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.53
18:42:17.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:17.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,42,17,180007000],"instrumentId":"NESN","price":110.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,17,181180000]}
18:42:17.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.61
18:42:17.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:17.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,42,17,180007000],"instrumentId":"ASML","price":749.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,17,181278000]}
18:42:17.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $749.39
18:42:17.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:22.187 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,42,22,177944000],"instrumentId":"AAPL","price":173.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,22,178056000]}
18:42:22.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.44
18:42:22.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:22.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,42,22,177944000],"instrumentId":"MSFT","price":422.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,22,179120000]}
18:42:22.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $422.54
18:42:22.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:22.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,42,22,177944000],"instrumentId":"GOOGL","price":140.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,22,179409000]}
18:42:22.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.50
18:42:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,42,22,177944000],"instrumentId":"JPM","price":183.32,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,22,179541000]}
18:42:22.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $183.32
18:42:22.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:22.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,42,22,177944000],"instrumentId":"BAC","price":35.28,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,22,179646000]}
18:42:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $35.28
18:42:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,42,22,177944000],"instrumentId":"NESN","price":110.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,22,179777000]}
18:42:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.55
18:42:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,42,22,177944000],"instrumentId":"ASML","price":745.17,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,22,179863000]}
18:42:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $745.17
18:42:22.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:27.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,42,27,185089000],"instrumentId":"AAPL","price":173.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,27,185234000]}
18:42:27.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.69
18:42:27.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:27.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,42,27,185089000],"instrumentId":"MSFT","price":422.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,27,185759000]}
18:42:27.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $422.09
18:42:27.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:27.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,42,27,185089000],"instrumentId":"GOOGL","price":140.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,27,185938000]}
18:42:27.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.90
18:42:27.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:27.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,42,27,185089000],"instrumentId":"JPM","price":184.00,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,27,186063000]}
18:42:27.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $184.00
18:42:27.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:27.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,42,27,185089000],"instrumentId":"BAC","price":35.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,27,186179000]}
18:42:27.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $35.24
18:42:27.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:27.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,42,27,185089000],"instrumentId":"NESN","price":110.10,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,27,186256000]}
18:42:27.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.10
18:42:27.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:27.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,42,27,185089000],"instrumentId":"ASML","price":742.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,27,186361000]}
18:42:27.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $742.03
18:42:27.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:32.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,42,32,175956000],"instrumentId":"AAPL","price":173.89,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,32,176072000]}
18:42:32.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.89
18:42:32.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:32.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,42,32,175956000],"instrumentId":"MSFT","price":424.83,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,32,176616000]}
18:42:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $424.83
18:42:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:32.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,42,32,175956000],"instrumentId":"GOOGL","price":140.80,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,32,176768000]}
18:42:32.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.80
18:42:32.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:32.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,42,32,175956000],"instrumentId":"JPM","price":183.88,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,32,176873000]}
18:42:32.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $183.88
18:42:32.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:32.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,42,32,175956000],"instrumentId":"BAC","price":35.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,32,176999000]}
18:42:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $35.12
18:42:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,42,32,175956000],"instrumentId":"NESN","price":110.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,32,177085000]}
18:42:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.37
18:42:32.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:32.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,42,32,175956000],"instrumentId":"ASML","price":746.89,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,32,177168000]}
18:42:32.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $746.89
18:42:32.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:37.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,42,37,181482000],"instrumentId":"AAPL","price":173.29,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,37,181688000]}
18:42:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.29
18:42:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:37.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,42,37,181482000],"instrumentId":"MSFT","price":426.01,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,37,183270000]}
18:42:37.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $426.01
18:42:37.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:37.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,42,37,181482000],"instrumentId":"GOOGL","price":141.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,37,183471000]}
18:42:37.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.05
18:42:37.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:37.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,42,37,181482000],"instrumentId":"JPM","price":184.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,37,183573000]}
18:42:37.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $184.21
18:42:37.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:37.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,42,37,181482000],"instrumentId":"BAC","price":35.29,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,37,183639000]}
18:42:37.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $35.29
18:42:37.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:37.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,42,37,181482000],"instrumentId":"NESN","price":110.30,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,37,183714000]}
18:42:37.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.30
18:42:37.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:37.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,42,37,181482000],"instrumentId":"ASML","price":753.91,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,37,183763000]}
18:42:37.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $753.91
18:42:37.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:42.252 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_c313c9be44ac","remainingQuantity":38,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_c313c9be44ac","instrumentId":"AAPL","accountId":"ACC001","date":[2025,5,24,18,42,42,180779000],"orderQuantity":38,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":379.43,"orderType":"LIMIT","venue":"EURONEXT","timestamp":[2025,5,24,18,42,42,182771000]}
18:42:42.256 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,42,42,212853000],"instrumentId":"AAPL","price":173.18,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,42,212882000]}
18:42:42.256 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_c313c9be44ac (CREATED AAPL)
18:42:42.256 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:42:42.257 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_804ff148079e","remainingQuantity":711,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_804ff148079e","instrumentId":"BAC","accountId":"ACC005","date":[2025,5,24,18,42,42,190297000],"orderQuantity":711,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":340.84,"orderType":"LIMIT","venue":"LSE","timestamp":[2025,5,24,18,42,42,193072000]}
18:42:42.257 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $173.18
18:42:42.257 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:42.257 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,42,42,212853000],"instrumentId":"MSFT","price":426.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,42,222198000]}
18:42:42.258 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_804ff148079e (CREATED BAC)
18:42:42.258 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:42:42.258 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $426.72
18:42:42.258 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:42.258 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_bd01d1f7ed98","remainingQuantity":16,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_bd01d1f7ed98","instrumentId":"GOOGL","accountId":"ACC002","date":[2025,5,24,18,42,42,212356000],"orderQuantity":16,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":430.01,"orderType":"STOP","venue":"LSE","timestamp":[2025,5,24,18,42,42,212475000]}
18:42:42.258 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,42,42,212853000],"instrumentId":"GOOGL","price":141.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,42,222865000]}
18:42:42.258 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.94
18:42:42.258 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:42.258 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_bd01d1f7ed98 (CREATED GOOGL)
18:42:42.258 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:42:42.258 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_2c32e6842c3d","remainingQuantity":11,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_2c32e6842c3d","instrumentId":"NESN","accountId":"ACC001","date":[2025,5,24,18,42,42,212724000],"orderQuantity":93,"filledQuantity":82,"orderStatus":"PARTIALLY_FILLED","orderPrice":266.85,"orderType":"STOP","venue":"NYSE","timestamp":[2025,5,24,18,42,42,212771000]}
18:42:42.258 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,42,42,212853000],"instrumentId":"JPM","price":183.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,42,222977000]}
18:42:42.259 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_2c32e6842c3d (PARTIALLY_FILLED NESN)
18:42:42.259 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:42:42.259 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $183.37
18:42:42.259 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:42.259 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,42,42,212853000],"instrumentId":"BAC","price":35.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,42,223015000]}
18:42:42.259 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $35.26
18:42:42.259 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:42.259 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,42,42,212853000],"instrumentId":"NESN","price":113.29,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,42,223055000]}
18:42:42.259 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $113.29
18:42:42.259 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:42.259 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,42,42,212853000],"instrumentId":"ASML","price":754.09,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,42,223092000]}
18:42:42.260 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $754.09
18:42:42.260 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:47.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,42,47,176782000],"instrumentId":"AAPL","price":172.37,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,47,176887000]}
18:42:47.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $172.37
18:42:47.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:47.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,42,47,176782000],"instrumentId":"MSFT","price":428.11,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,47,177962000]}
18:42:47.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $428.11
18:42:47.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:47.201 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,42,47,176782000],"instrumentId":"GOOGL","price":141.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,47,178613000]}
18:42:47.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.24
18:42:47.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:47.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,42,47,176782000],"instrumentId":"JPM","price":184.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,47,179031000]}
18:42:47.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $184.03
18:42:47.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:47.202 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,42,47,176782000],"instrumentId":"BAC","price":35.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,47,179748000]}
18:42:47.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $35.21
18:42:47.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:47.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,42,47,176782000],"instrumentId":"NESN","price":112.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,47,179995000]}
18:42:47.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $112.90
18:42:47.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:47.203 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,42,47,176782000],"instrumentId":"ASML","price":755.73,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,47,180257000]}
18:42:47.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $755.73
18:42:47.204 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:52.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,42,52,181211000],"instrumentId":"AAPL","price":171.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,52,181243000]}
18:42:52.191 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_477bd435ae46","remainingQuantity":74,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_477bd435ae46","instrumentId":"BAC","accountId":"ACC005","date":[2025,5,24,18,42,52,180145000],"orderQuantity":74,"filledQuantity":0,"orderStatus":"FILLED","orderPrice":446.37,"orderType":"MARKET","venue":"NASDAQ","timestamp":[2025,5,24,18,42,52,180350000]}
18:42:52.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $171.74
18:42:52.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:52.193 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_477bd435ae46 (FILLED BAC)
18:42:52.193 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:42:52.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,42,52,181211000],"instrumentId":"MSFT","price":427.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,52,181395000]}
18:42:52.193 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_f436c9895074","remainingQuantity":283,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_f436c9895074","instrumentId":"BAC","accountId":"ACC005","date":[2025,5,24,18,42,52,180805000],"orderQuantity":840,"filledQuantity":557,"orderStatus":"FILLED","orderPrice":84.53,"orderType":"LIMIT","venue":"NASDAQ","timestamp":[2025,5,24,18,42,52,180987000]}
18:42:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_f436c9895074 (FILLED BAC)
18:42:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:42:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $427.51
18:42:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,42,52,181211000],"instrumentId":"GOOGL","price":141.38,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,52,181447000]}
18:42:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.38
18:42:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:52.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,42,52,181211000],"instrumentId":"JPM","price":182.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,52,181481000]}
18:42:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $182.42
18:42:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,42,52,181211000],"instrumentId":"BAC","price":35.45,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,52,181513000]}
18:42:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $35.45
18:42:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:52.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,42,52,181211000],"instrumentId":"NESN","price":112.20,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,52,181558000]}
18:42:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $112.20
18:42:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,42,52,181211000],"instrumentId":"ASML","price":758.21,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,52,181596000]}
18:42:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $758.21
18:42:52.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:57.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,42,57,180145000],"instrumentId":"AAPL","price":171.14,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,57,180227000]}
18:42:57.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $171.14
18:42:57.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:57.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,42,57,180145000],"instrumentId":"MSFT","price":426.96,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,57,181442000]}
18:42:57.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $426.96
18:42:57.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:57.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,42,57,180145000],"instrumentId":"GOOGL","price":141.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,57,181509000]}
18:42:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $141.26
18:42:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,42,57,180145000],"instrumentId":"JPM","price":182.41,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,57,181570000]}
18:42:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $182.41
18:42:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:57.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,42,57,180145000],"instrumentId":"BAC","price":34.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,57,181617000]}
18:42:57.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.94
18:42:57.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:57.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,42,57,180145000],"instrumentId":"NESN","price":111.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,57,181655000]}
18:42:57.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.58
18:42:57.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:42:57.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,42,57,180145000],"instrumentId":"ASML","price":756.44,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,42,57,181699000]}
18:42:57.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $756.44
18:42:57.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:02.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,43,2,180200000],"instrumentId":"AAPL","price":171.29,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,2,180319000]}
18:43:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $171.29
18:43:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:02.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,43,2,180200000],"instrumentId":"MSFT","price":426.92,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,2,180882000]}
18:43:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $426.92
18:43:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:02.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,43,2,180200000],"instrumentId":"GOOGL","price":140.50,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,2,180961000]}
18:43:02.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $140.50
18:43:02.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:02.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,43,2,180200000],"instrumentId":"JPM","price":182.74,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,2,181000000]}
18:43:02.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $182.74
18:43:02.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:02.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,43,2,180200000],"instrumentId":"BAC","price":34.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,2,181046000]}
18:43:02.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.72
18:43:02.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:02.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,43,2,180200000],"instrumentId":"NESN","price":111.39,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,2,181079000]}
18:43:02.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.39
18:43:02.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:02.199 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,43,2,180200000],"instrumentId":"ASML","price":760.84,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,2,181121000]}
18:43:02.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $760.84
18:43:02.200 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:07.189 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,43,7,180111000],"instrumentId":"AAPL","price":171.05,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,7,180191000]}
18:43:07.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $171.05
18:43:07.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:07.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,43,7,180111000],"instrumentId":"MSFT","price":425.24,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,7,181269000]}
18:43:07.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $425.24
18:43:07.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:07.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,43,7,180111000],"instrumentId":"GOOGL","price":139.51,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,7,181304000]}
18:43:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.51
18:43:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,43,7,180111000],"instrumentId":"JPM","price":182.55,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,7,181328000]}
18:43:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $182.55
18:43:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,43,7,180111000],"instrumentId":"BAC","price":34.65,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,7,181353000]}
18:43:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.65
18:43:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:07.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,43,7,180111000],"instrumentId":"NESN","price":110.95,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,7,181377000]}
18:43:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $110.95
18:43:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,43,7,180111000],"instrumentId":"ASML","price":738.23,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,7,181401000]}
18:43:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $738.23
18:43:07.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:12.188 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,43,12,178799000],"instrumentId":"AAPL","price":169.94,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,12,178822000]}
18:43:12.188 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received order data: {"kafkaKey":"ORD_e6e3884e6d14","remainingQuantity":58,"completelyFilled":false,"buyOrder":true,"sellOrder":false,"orderId":"ORD_e6e3884e6d14","instrumentId":"GOOGL","accountId":"ACC005","date":[2025,5,24,18,43,12,178227000],"orderQuantity":58,"filledQuantity":0,"orderStatus":"CREATED","orderPrice":439.14,"orderType":"STOP","venue":"EURONEXT","timestamp":[2025,5,24,18,43,12,178419000]}
18:43:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $169.94
18:43:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached order: ORD_e6e3884e6d14 (CREATED GOOGL)
18:43:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached order data
18:43:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:12.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,43,12,178799000],"instrumentId":"MSFT","price":424.61,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,12,178899000]}
18:43:12.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $424.61
18:43:12.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:12.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,43,12,178799000],"instrumentId":"GOOGL","price":139.69,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,12,178930000]}
18:43:12.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.69
18:43:12.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:12.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,43,12,178799000],"instrumentId":"JPM","price":182.60,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,12,178951000]}
18:43:12.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $182.60
18:43:12.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:12.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,43,12,178799000],"instrumentId":"BAC","price":34.70,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,12,178982000]}
18:43:12.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.70
18:43:12.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:12.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,43,12,178799000],"instrumentId":"NESN","price":111.90,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,12,179000000]}
18:43:12.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.90
18:43:12.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:12.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,43,12,178799000],"instrumentId":"ASML","price":740.06,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,12,179020000]}
18:43:12.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $740.06
18:43:12.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:17.191 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,43,17,180097000],"instrumentId":"AAPL","price":170.72,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,17,180193000]}
18:43:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $170.72
18:43:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:17.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,43,17,180097000],"instrumentId":"MSFT","price":415.29,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,17,181303000]}
18:43:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $415.29
18:43:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:17.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,43,17,180097000],"instrumentId":"GOOGL","price":139.76,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,17,181362000]}
18:43:17.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.76
18:43:17.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:17.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,43,17,180097000],"instrumentId":"JPM","price":184.36,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,17,181390000]}
18:43:17.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $184.36
18:43:17.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:17.196 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,43,17,180097000],"instrumentId":"BAC","price":34.59,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,17,181417000]}
18:43:17.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.59
18:43:17.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:17.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,43,17,180097000],"instrumentId":"NESN","price":111.89,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,17,181449000]}
18:43:17.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.89
18:43:17.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:17.197 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,43,17,180097000],"instrumentId":"ASML","price":745.58,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,17,181471000]}
18:43:17.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $745.58
18:43:17.198 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:22.190 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"AAPL#2025-05-24","date":[2025,5,24,18,43,22,180161000],"instrumentId":"AAPL","price":171.03,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,22,180243000]}
18:43:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: AAPL = $171.03
18:43:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"MSFT#2025-05-24","date":[2025,5,24,18,43,22,180161000],"instrumentId":"MSFT","price":416.26,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,22,180510000]}
18:43:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: MSFT = $416.26
18:43:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:22.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"GOOGL#2025-05-24","date":[2025,5,24,18,43,22,180161000],"instrumentId":"GOOGL","price":139.15,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,22,180557000]}
18:43:22.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: GOOGL = $139.15
18:43:22.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:22.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"JPM#2025-05-24","date":[2025,5,24,18,43,22,180161000],"instrumentId":"JPM","price":185.42,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,22,180606000]}
18:43:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: JPM = $185.42
18:43:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"BAC#2025-05-24","date":[2025,5,24,18,43,22,180161000],"instrumentId":"BAC","price":34.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,22,180645000]}
18:43:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: BAC = $34.54
18:43:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:22.194 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"NESN#2025-05-24","date":[2025,5,24,18,43,22,180161000],"instrumentId":"NESN","price":111.54,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,22,180678000]}
18:43:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: NESN = $111.54
18:43:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:43:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Received price data: {"kafkaKey":"ASML#2025-05-24","date":[2025,5,24,18,43,22,180161000],"instrumentId":"ASML","price":743.12,"currency":"USD","source":"MOCK_EXCHANGE","timestamp":[2025,5,24,18,43,22,180714000]}
18:43:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.viewserver.service.CacheService - Cached price: ASML = $743.12
18:43:22.195 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] DEBUG c.v.v.consumer.DataConsumerService - Successfully cached price data
18:44:17.662 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Revoke previously assigned partitions base.price-0
18:44:17.662 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Revoke previously assigned partitions base.sod-holding-0
18:44:17.662 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Revoke previously assigned partitions base.account-0
18:44:17.662 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Revoke previously assigned partitions base.intraday-cash-0
18:44:17.662 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Revoke previously assigned partitions base.instrument-0
18:44:17.662 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Revoke previously assigned partitions base.order-events-0
18:44:17.663 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-accounts: partitions revoked: [base.account-0]
18:44:17.663 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-cash: partitions revoked: [base.intraday-cash-0]
18:44:17.663 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-orders: partitions revoked: [base.order-events-0]
18:44:17.663 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-prices: partitions revoked: [base.price-0]
18:44:17.663 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-holdings: partitions revoked: [base.sod-holding-0]
18:44:17.663 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-instruments: partitions revoked: [base.instrument-0]
18:44:17.663 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Member consumer-view-server-accounts-5-3f98bb76-cf87-48ed-b005-d0a9a2a559a7 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
18:44:17.663 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Member consumer-view-server-prices-1-4d855c1b-2554-4011-a2af-ab8b678eb260 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Member consumer-view-server-orders-2-6274b7bf-d320-4cdd-8b24-d664166f64de sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
18:44:17.663 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Member consumer-view-server-holdings-3-cdbd2e45-d53a-4a8b-87e0-3eb7aaaa224b sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Member consumer-view-server-cash-4-8f5671dc-0bc3-4804-bf31-25576f0e7b66 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Member consumer-view-server-instruments-6-93f28025-bdb1-4508-b27c-34be1018c9f8 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Resetting generation and member id due to: consumer pro-actively leaving the group
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Resetting generation and member id due to: consumer pro-actively leaving the group
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Request joining group due to: consumer pro-actively leaving the group
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Resetting generation and member id due to: consumer pro-actively leaving the group
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Unsubscribed all topics or patterns and assigned partitions
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Resetting generation and member id due to: consumer pro-actively leaving the group
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Request joining group due to: consumer pro-actively leaving the group
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Unsubscribed all topics or patterns and assigned partitions
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Resetting generation and member id due to: consumer pro-actively leaving the group
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Request joining group due to: consumer pro-actively leaving the group
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Unsubscribed all topics or patterns and assigned partitions
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Resetting generation and member id due to: consumer pro-actively leaving the group
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Request joining group due to: consumer pro-actively leaving the group
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Unsubscribed all topics or patterns and assigned partitions
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Request joining group due to: consumer pro-actively leaving the group
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Unsubscribed all topics or patterns and assigned partitions
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Request joining group due to: consumer pro-actively leaving the group
18:44:17.664 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Unsubscribed all topics or patterns and assigned partitions
18:44:17.665 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Resetting generation and member id due to: consumer pro-actively leaving the group
18:44:17.665 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Resetting generation and member id due to: consumer pro-actively leaving the group
18:44:17.665 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-holdings-3, groupId=view-server-holdings] Request joining group due to: consumer pro-actively leaving the group
18:44:17.665 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Resetting generation and member id due to: consumer pro-actively leaving the group
18:44:17.665 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-instruments-6, groupId=view-server-instruments] Request joining group due to: consumer pro-actively leaving the group
18:44:17.665 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-cash-4, groupId=view-server-cash] Request joining group due to: consumer pro-actively leaving the group
18:44:17.665 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Resetting generation and member id due to: consumer pro-actively leaving the group
18:44:17.665 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Resetting generation and member id due to: consumer pro-actively leaving the group
18:44:17.665 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Resetting generation and member id due to: consumer pro-actively leaving the group
18:44:17.665 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-prices-1, groupId=view-server-prices] Request joining group due to: consumer pro-actively leaving the group
18:44:17.665 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-orders-2, groupId=view-server-orders] Request joining group due to: consumer pro-actively leaving the group
18:44:17.665 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-view-server-accounts-5, groupId=view-server-accounts] Request joining group due to: consumer pro-actively leaving the group
18:44:17.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
18:44:17.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
18:44:17.680 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
18:44:17.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-view-server-prices-1 unregistered
18:44:17.682 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-prices: Consumer stopped
18:44:17.688 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
18:44:17.688 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
18:44:17.688 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
18:44:17.689 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-view-server-orders-2 unregistered
18:44:17.689 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-orders: Consumer stopped
18:44:18.040 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
18:44:18.040 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
18:44:18.040 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
18:44:18.041 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
18:44:18.041 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
18:44:18.041 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
18:44:18.041 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
18:44:18.041 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
18:44:18.041 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
18:44:18.045 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-view-server-holdings-3 unregistered
18:44:18.045 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-holdings: Consumer stopped
18:44:18.045 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-view-server-instruments-6 unregistered
18:44:18.045 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-instruments: Consumer stopped
18:44:18.045 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-view-server-accounts-5 unregistered
18:44:18.045 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-accounts: Consumer stopped
18:44:18.138 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
18:44:18.138 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
18:44:18.138 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
18:44:18.140 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-view-server-cash-4 unregistered
18:44:18.141 [org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - view-server-cash: Consumer stopped
